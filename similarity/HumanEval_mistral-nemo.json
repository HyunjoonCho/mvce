{
    "HumanEval/0": {
        "similarity": 0.9975684285163879,
        "body": "for i in range(len(numbers) - 1):\n    if abs(numbers[i] - numbers[i + 1]) < threshold:\n        return True\nreturn False",
        "result": "failed: 'return' outside function (<string>, line 14)",
        "similarities": [
            0.9754694700241089,
            0.9970439076423645,
            0.9960346221923828,
            0.9945216774940491,
            0.9975377321243286,
            0.9968210458755493,
            0.9941620230674744,
            0.9975684285163879,
            0.9974576234817505,
            0.9975684285163879,
            0.9974576234817505,
            0.9975377321243286,
            0.9975377321243286,
            0.9975377321243286,
            0.9954206347465515,
            0.9949768781661987,
            0.9973790049552917,
            0.9975377321243286,
            0.9970439076423645,
            0.9975377321243286
        ]
    },
    "HumanEval/1": {
        "similarity": 0.9975713491439819,
        "body": "    groups = []\n    group = ''\n    level = 0\n    for char in paren_string.replace(' ', ''):\n        if char == '(':\n            level += 1\n            group += char\n        elif char == ')':\n            level -= 1\n            group += char\n            if level == 0:\n                groups.append(group)\n                group = ''\n    return groups",
        "result": "passed",
        "similarities": [
            0.9940436482429504,
            0.9964259266853333,
            0.9974843859672546,
            0.9958978295326233,
            0.9956000447273254,
            0.996536135673523,
            0.9974672198295593,
            0.9966480135917664,
            0.9968931078910828,
            0.9964528679847717,
            0.9966106414794922,
            0.9970241189002991,
            0.9974843859672546,
            0.9959113597869873,
            0.9954007863998413,
            0.9975713491439819,
            0.9966745972633362,
            0.9960232973098755,
            0.9974843859672546,
            0.9969977140426636
        ]
    },
    "HumanEval/2": {
        "similarity": 0.9961009621620178,
        "body": "return number % 1",
        "result": "failed: 'return' outside function (<string>, line 12)",
        "similarities": [
            0.9960919618606567,
            0.9960919618606567,
            0.9961009621620178,
            0.9961009621620178,
            0.9961009621620178,
            0.9960919618606567,
            0.9960919618606567,
            0.9961009621620178,
            0.9947415590286255,
            0.9960919618606567,
            0.99455726146698,
            0.9950458407402039,
            0.9960919618606567,
            0.9960919618606567,
            0.9961009621620178,
            0.9950459003448486,
            0.9960919618606567,
            0.9961009621620178,
            0.9960919618606567,
            0.9961009621620178
        ]
    },
    "HumanEval/3": {
        "similarity": 0.999822199344635,
        "body": "balance = 0\nfor op in operations:\n    balance += op\n    if balance < 0:\n        return True\nreturn False",
        "result": "failed: 'return' outside function (<string>, line 17)",
        "similarities": [
            0.9997829794883728,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.9966699481010437,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635,
            0.999822199344635
        ]
    },
    "HumanEval/4": {
        "similarity": 0.995787501335144,
        "body": "    mean = sum(numbers) / len(numbers)\n    return sum(abs(num - mean) for num in numbers) / len(numbers)",
        "result": "passed",
        "similarities": [
            0.9933468699455261,
            0.9957477450370789,
            0.9927231669425964,
            0.9929044842720032,
            0.9862374067306519,
            0.992904543876648,
            0.9914986491203308,
            0.9936611652374268,
            0.9940985441207886,
            0.992904543876648,
            0.9948529005050659,
            0.9908115863800049,
            0.9948907494544983,
            0.9957477450370789,
            0.9943102598190308,
            0.995787501335144,
            0.9948529005050659,
            0.9890349507331848,
            0.9929044842720032,
            0.9957873821258545
        ]
    },
    "HumanEval/5": {
        "similarity": 0.9941787719726562,
        "body": "return [numbers[i // 2] if i % 2 == 0 else delimeter for i in range(2 * len(numbers) - 1)]",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9902787804603577,
            0.9923603534698486,
            0.9858859181404114,
            0.9879614114761353,
            0.987546443939209,
            0.9941787719726562,
            0.9938297271728516,
            0.9939910769462585,
            0.9941306114196777,
            0.9941787719726562,
            0.9923603534698486,
            0.9932056069374084,
            0.9931091666221619,
            0.9926223754882812,
            0.9926223754882812,
            0.9803669452667236,
            0.9901666045188904,
            0.9907474517822266,
            0.9893407225608826,
            0.9913519024848938
        ]
    },
    "HumanEval/6": {
        "similarity": 0.9920063018798828,
        "body": "    result = []\n    for group in paren_string.split():\n        count, max_count = 0, 0\n        for c in group:\n            if c == '(':\n                count += 1\n                max_count = max(max_count, count)\n            elif c == ')':\n                count -= 1\n        result.append(max_count)\n    return result",
        "result": "passed",
        "similarities": [
            0.9894425272941589,
            0.9914109110832214,
            0.9670627117156982,
            0.9920063018798828,
            0.9910216927528381,
            0.9908947348594666,
            0.9906947612762451,
            0.9899227023124695,
            0.971274733543396,
            0.9912847280502319,
            0.991588294506073,
            0.9881606101989746,
            0.990463376045227,
            0.9911701083183289,
            0.991953432559967,
            0.9886834025382996,
            0.979134202003479,
            0.9910216927528381,
            0.991145670413971,
            0.9727617502212524
        ]
    },
    "HumanEval/7": {
        "similarity": 0.9965396523475647,
        "body": "return [s for s in strings if substring in s]",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9965396523475647,
            0.9965396523475647,
            0.9964132905006409,
            0.9965396523475647,
            0.9965396523475647,
            0.9965396523475647,
            0.9965396523475647,
            0.9874816536903381,
            0.9964132905006409,
            0.9965396523475647,
            0.9964132905006409,
            0.9965396523475647,
            0.9874817728996277,
            0.9965396523475647,
            0.9965396523475647,
            0.9965396523475647,
            0.9964132905006409,
            0.9964132905006409,
            0.9965396523475647,
            0.9874816536903381
        ]
    },
    "HumanEval/8": {
        "similarity": 0.9906548261642456,
        "body": "    product = 1\n    total = 0\n    for num in numbers:\n        total += num\n        product *= num\n    return total, product",
        "result": "passed",
        "similarities": [
            0.9839984774589539,
            0.990585207939148,
            0.9903364777565002,
            0.9877688884735107,
            0.9841336607933044,
            0.9906548261642456,
            0.9839985370635986,
            0.9830683469772339,
            0.951869547367096,
            0.9906548261642456,
            0.9904590249061584,
            0.9906548261642456,
            0.9906548261642456,
            0.9873970746994019,
            0.9818652272224426,
            0.9901322722434998,
            0.9827844500541687,
            0.9900383353233337,
            0.9902364611625671,
            0.9906548261642456
        ]
    },
    "HumanEval/9": {
        "similarity": 0.9892959594726562,
        "body": "max_so_far = float('-inf')\nresult = []\nfor num in numbers:\n    max_so_far = max(max_so_far, num)\n    result.append(max_so_far)\nreturn result",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9816257953643799,
            0.9816257953643799,
            0.9849029183387756,
            0.9876588582992554,
            0.988553524017334,
            0.9816257953643799,
            0.9816257953643799,
            0.9849029183387756,
            0.9816257953643799,
            0.9849029183387756,
            0.9571958780288696,
            0.9838833212852478,
            0.9849029183387756,
            0.988917887210846,
            0.9849029183387756,
            0.9816257953643799,
            0.9849029183387756,
            0.9843510389328003,
            0.9849029183387756,
            0.9892959594726562
        ]
    },
    "HumanEval/10": {
        "similarity": 0.9977366924285889,
        "body": "    for i in range(len(string)):\n        if string == string[:i][::-1]:\n            return string + string[:i][::-1]",
        "result": "failed: ",
        "similarities": [
            0.9959431886672974,
            0.9976417422294617,
            0.9975952506065369,
            0.9914041757583618,
            0.9975919127464294,
            0.997734785079956,
            0.9975943565368652,
            0.9977366924285889,
            0.997318685054779,
            0.9967410564422607,
            0.997734785079956,
            0.997734785079956,
            0.9967747926712036,
            0.9955679178237915,
            0.9967747926712036,
            0.9975987672805786,
            0.997734785079956,
            0.9946994781494141,
            0.9976807832717896,
            0.9935079216957092
        ]
    },
    "HumanEval/11": {
        "similarity": 0.9939051270484924,
        "body": "    return ''.join(str(int(x) ^ int(y)) for x, y in zip(a, b))",
        "result": "passed",
        "similarities": [
            0.9921380877494812,
            0.9875249266624451,
            0.9896236062049866,
            0.993840754032135,
            0.9875249266624451,
            0.9938790202140808,
            0.9873774647712708,
            0.9931756854057312,
            0.9910284280776978,
            0.9875249266624451,
            0.9895022511482239,
            0.9936563372612,
            0.9893674254417419,
            0.9832138419151306,
            0.9875249266624451,
            0.9896581768989563,
            0.9939051270484924,
            0.9891878366470337,
            0.993840754032135,
            0.9929623007774353
        ]
    },
    "HumanEval/12": {
        "similarity": 0.9963017702102661,
        "body": "if not strings:\n    return None\nreturn max(strings, key=len)",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9963017702102661,
            0.9962251782417297,
            0.9963017702102661,
            0.9963017702102661,
            0.9963017702102661,
            0.9931455850601196,
            0.9963017702102661,
            0.9963017702102661,
            0.9963017702102661,
            0.9963017702102661,
            0.9963017702102661,
            0.9963017702102661,
            0.9963017702102661,
            0.9770306944847107,
            0.9963017702102661,
            0.9963017702102661,
            0.9918592572212219,
            0.9950360655784607,
            0.9963017702102661,
            0.9776966571807861
        ]
    },
    "HumanEval/13": {
        "similarity": 0.9970743060112,
        "body": "if b == 0:\n    return a\nelse:\n    return greatest_common_divisor(b, a % b)",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9957388043403625,
            0.9916720390319824,
            0.9970743060112,
            0.9970743060112,
            0.9970743060112,
            0.9946224689483643,
            0.9916720390319824,
            0.9970743060112,
            0.9970743060112,
            0.9916720390319824,
            0.9970743060112,
            0.9946423768997192,
            0.9970743060112,
            0.9970743060112,
            0.9970743060112,
            0.9970743060112,
            0.9970743060112,
            0.9954461455345154,
            0.9916720390319824,
            0.9970743060112
        ]
    },
    "HumanEval/14": {
        "similarity": 0.9950770139694214,
        "body": "    return [string[:i] for i in range(len(string) + 1)]",
        "result": "failed: ",
        "similarities": [
            0.988464891910553,
            0.9950770139694214,
            0.9886953234672546,
            0.9890259504318237,
            0.9947697520256042,
            0.9901536703109741,
            0.9947697520256042,
            0.9947697520256042,
            0.9950770139694214,
            0.993615984916687,
            0.993615984916687,
            0.9933823347091675,
            0.993615984916687,
            0.9947697520256042,
            0.993615984916687,
            0.9947697520256042,
            0.9903032183647156,
            0.9947697520256042,
            0.9907867908477783,
            0.9913405179977417
        ]
    },
    "HumanEval/15": {
        "similarity": 0.9944820404052734,
        "body": "    return ' '.join(str(i) for i in range(n+1))",
        "result": "passed",
        "similarities": [
            0.9931286573410034,
            0.9940010905265808,
            0.9938290119171143,
            0.9921069145202637,
            0.9926502704620361,
            0.9931287169456482,
            0.9919331073760986,
            0.9944820404052734,
            0.9896993041038513,
            0.9929502606391907,
            0.9938290119171143,
            0.9944006204605103,
            0.9931287169456482,
            0.9931287169456482,
            0.9926503896713257,
            0.9895142316818237,
            0.9896978139877319,
            0.9944820404052734,
            0.9937177896499634,
            0.9915802478790283
        ]
    },
    "HumanEval/16": {
        "similarity": 0.9992703199386597,
        "body": "return len(set(string.lower()))",
        "result": "failed: 'return' outside function (<string>, line 10)",
        "similarities": [
            0.9992702007293701,
            0.9992702007293701,
            0.9992702007293701,
            0.9992702007293701,
            0.9992703199386597,
            0.9992703199386597,
            0.9992703199386597,
            0.9992703199386597,
            0.9971837401390076,
            0.9992702007293701,
            0.9992702007293701,
            0.9928730726242065,
            0.9992702007293701,
            0.9992702007293701,
            0.9992702007293701,
            0.9979296326637268,
            0.9992702007293701,
            0.9992702007293701,
            0.9992702007293701,
            0.9979296326637268
        ]
    },
    "HumanEval/17": {
        "similarity": 0.9941134452819824,
        "body": "    notes = {'o': 4, 'o|': 2, '.|': 1}\n    beats = [notes[note] for note in music_string.split()]\n    return beats",
        "result": "passed",
        "similarities": [
            0.988522469997406,
            0.9931575655937195,
            0.9920443296432495,
            0.9920735955238342,
            0.9931575655937195,
            0.9920443296432495,
            0.9915878176689148,
            0.9900333881378174,
            0.9931702017784119,
            0.9892268776893616,
            0.9900333881378174,
            0.9935070872306824,
            0.9929301738739014,
            0.9931575655937195,
            0.9926113486289978,
            0.9902145266532898,
            0.9931575655937195,
            0.9941134452819824,
            0.9874117970466614,
            0.9917421936988831
        ]
    },
    "HumanEval/18": {
        "similarity": 0.9885749816894531,
        "body": "string.count(substring)",
        "result": "failed: name 'string' is not defined",
        "similarities": [
            0.9850475788116455,
            0.9865331053733826,
            0.9885749816894531,
            0.9859040975570679,
            0.9850475788116455,
            0.9843051433563232,
            0.9850475788116455,
            0.9850475788116455,
            0.9885749816894531,
            0.9633331298828125,
            0.9859040975570679,
            0.9850475788116455,
            0.9663552641868591,
            0.9843051433563232,
            0.9850475788116455,
            0.9866140484809875,
            0.9885749816894531,
            0.9850475788116455,
            0.9767009615898132,
            0.9850475788116455
        ]
    },
    "HumanEval/19": {
        "similarity": 0.9917647838592529,
        "body": "numbers = [int(n) for n in map(str.index, input_str.split())]\nreturn ' '.join(map(str, sorted(numbers)))",
        "result": "failed: 'return' outside function (<string>, line 12)",
        "similarities": [
            0.9885076284408569,
            0.9904425740242004,
            0.9886128306388855,
            0.9917647838592529,
            0.9887545704841614,
            0.9875871539115906,
            0.9892523884773254,
            0.988112211227417,
            0.9902243614196777,
            0.988068163394928,
            0.9881089925765991,
            0.9906454682350159,
            0.989243745803833,
            0.9873273968696594,
            0.9810472130775452,
            0.9889149069786072,
            0.9846657514572144,
            0.9849019646644592,
            0.989176332950592,
            0.9888516664505005
        ]
    },
    "HumanEval/20": {
        "similarity": 0.9964976906776428,
        "body": "    min_diff = float('inf')\n    pair = None\n    for i in range(len(numbers) - 1):\n        diff = numbers[i+1] - numbers[i]\n        if diff < min_diff:\n            min_diff = diff\n            pair = (numbers[i], numbers[i+1])\n    return pair",
        "result": "failed: ",
        "similarities": [
            0.9899704456329346,
            0.9901055097579956,
            0.9959097504615784,
            0.9964976906776428,
            0.9895784258842468,
            0.9962001442909241,
            0.9964709877967834,
            0.9964643120765686,
            0.9964709877967834,
            0.9960640668869019,
            0.9960640668869019,
            0.9961357116699219,
            0.9960640668869019,
            0.9932783246040344,
            0.9964632987976074,
            0.9907054901123047,
            0.9963389039039612,
            0.9923046827316284,
            0.990695059299469,
            0.9964709877967834
        ]
    },
    "HumanEval/21": {
        "similarity": 0.9962344765663147,
        "body": "    min_num = min(numbers)\n    max_num = max(numbers)\n    return [(num - min_num) / (max_num - min_num) for num in numbers]",
        "result": "passed",
        "similarities": [
            0.9957253336906433,
            0.9957253336906433,
            0.9957200884819031,
            0.9962028861045837,
            0.9924730062484741,
            0.9957200884819031,
            0.9883014559745789,
            0.9962253570556641,
            0.9962028861045837,
            0.9962344765663147,
            0.9940332174301147,
            0.9957200884819031,
            0.9957253336906433,
            0.9961556196212769,
            0.9962028861045837,
            0.9950488209724426,
            0.9957200884819031,
            0.9891363382339478,
            0.9864423871040344,
            0.995561420917511
        ]
    },
    "HumanEval/22": {
        "similarity": 0.9992304444313049,
        "body": "return [value for value in values if isinstance(value, int)]",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9962897300720215,
            0.9992304444313049,
            0.995991587638855,
            0.9992304444313049,
            0.9992304444313049,
            0.9992304444313049,
            0.9992209076881409,
            0.9992209076881409,
            0.995991587638855,
            0.9992209076881409,
            0.9992304444313049,
            0.9992209076881409,
            0.9992304444313049,
            0.9992304444313049,
            0.9992209076881409,
            0.9992304444313049,
            0.9992209076881409,
            0.9992304444313049,
            0.9992209076881409,
            0.9992304444313049
        ]
    },
    "HumanEval/23": {
        "similarity": 0.9989763498306274,
        "body": "len(string)",
        "result": "failed: name 'string' is not defined",
        "similarities": [
            0.9989763498306274,
            0.9989763498306274,
            0.9989763498306274,
            0.9985775351524353,
            0.9989763498306274,
            0.9985775351524353,
            0.9985775351524353,
            0.9957658648490906,
            0.9989763498306274,
            0.9985775351524353,
            0.9989763498306274,
            0.9985775351524353,
            0.9989763498306274,
            0.9989763498306274,
            0.9957658648490906,
            0.9989763498306274,
            0.9957658648490906,
            0.9989763498306274,
            0.9989763498306274,
            0.9985775351524353
        ]
    },
    "HumanEval/24": {
        "similarity": 0.9998971223831177,
        "body": "for i in range(n-1, 0, -1):\n    if n % i == 0:\n        return i",
        "result": "failed: 'return' outside function (<string>, line 10)",
        "similarities": [
            0.9998971223831177,
            0.9998971223831177,
            0.9998971223831177,
            0.9992537498474121,
            0.9998971223831177,
            0.9998971223831177,
            0.999753475189209,
            0.9998971223831177,
            0.999753475189209,
            0.9998971223831177,
            0.9998971223831177,
            0.9998971223831177,
            0.9998971223831177,
            0.9998859763145447,
            0.9998971223831177,
            0.9998971223831177,
            0.999753475189209,
            0.9998859763145447,
            0.9998971223831177,
            0.999753475189209
        ]
    },
    "HumanEval/25": {
        "similarity": 0.9985445737838745,
        "body": "    factors = []\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors",
        "result": "passed",
        "similarities": [
            0.9985445737838745,
            0.9985445737838745,
            0.9941545128822327,
            0.9920784831047058,
            0.9984873533248901,
            0.9985315203666687,
            0.9985445737838745,
            0.9984873533248901,
            0.9985445737838745,
            0.9985445737838745,
            0.9971014261245728,
            0.9985445737838745,
            0.9985445737838745,
            0.9946504235267639,
            0.9973222017288208,
            0.9985445737838745,
            0.9985445737838745,
            0.9973220825195312,
            0.9985315203666687,
            0.9985315203666687
        ]
    },
    "HumanEval/26": {
        "similarity": 0.9914190173149109,
        "body": "    seen = set()\n    return [num for num in numbers if not (num in seen or seen.add(num))]",
        "result": "failed: ",
        "similarities": [
            0.9867666959762573,
            0.9907891154289246,
            0.9886993765830994,
            0.9811142683029175,
            0.9811141490936279,
            0.9907891154289246,
            0.9811141490936279,
            0.9907891154289246,
            0.9886994957923889,
            0.9907891154289246,
            0.9914189577102661,
            0.9814306497573853,
            0.9867666959762573,
            0.9811142683029175,
            0.9886994957923889,
            0.9886994957923889,
            0.9914190173149109,
            0.980800211429596,
            0.9886993765830994,
            0.9914189577102661
        ]
    },
    "HumanEval/27": {
        "similarity": 0.9999998211860657,
        "body": "return string.swapcase()",
        "result": "failed: 'return' outside function (<string>, line 8)",
        "similarities": [
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657
        ]
    },
    "HumanEval/28": {
        "similarity": 0.9940552115440369,
        "body": "    return ''.join(strings)",
        "result": "passed",
        "similarities": [
            0.9890674948692322,
            0.9936414361000061,
            0.9936414361000061,
            0.9937282204627991,
            0.9937282204627991,
            0.9852064847946167,
            0.9920533895492554,
            0.9937711954116821,
            0.9901947379112244,
            0.9940552115440369,
            0.9912514090538025,
            0.9901947379112244,
            0.991251528263092,
            0.9937282204627991,
            0.9936414361000061,
            0.9937282204627991,
            0.9934638142585754,
            0.9901947379112244,
            0.9592108726501465,
            0.9872989654541016
        ]
    },
    "HumanEval/29": {
        "similarity": 0.9979972839355469,
        "body": "return [s for s in strings if s.startswith(prefix)]",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9979972839355469,
            0.9979972839355469,
            0.9979972839355469,
            0.9979972839355469,
            0.9979972839355469,
            0.9979972839355469,
            0.9971153140068054,
            0.995188295841217,
            0.9979972839355469,
            0.9971153140068054,
            0.9979972839355469,
            0.9979972839355469,
            0.995188295841217,
            0.9979972839355469,
            0.9979972839355469,
            0.9971153140068054,
            0.995188295841217,
            0.9979972839355469,
            0.9979972839355469,
            0.995188295841217
        ]
    },
    "HumanEval/30": {
        "similarity": 0.9990701079368591,
        "body": "return [n for n in l if n > 0]",
        "result": "failed: 'return' outside function (<string>, line 10)",
        "similarities": [
            0.9990445375442505,
            0.9990172386169434,
            0.9990701079368591,
            0.9990665912628174,
            0.9990445375442505,
            0.9990667104721069,
            0.9956994652748108,
            0.9990665912628174,
            0.9957175254821777,
            0.9990172386169434,
            0.9990445375442505,
            0.9990445375442505,
            0.9990665912628174,
            0.9990172386169434,
            0.9990172386169434,
            0.9955601096153259,
            0.9990445375442505,
            0.9990665912628174,
            0.9990665912628174,
            0.9990172386169434
        ]
    },
    "HumanEval/31": {
        "similarity": 0.9981892108917236,
        "body": "if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True",
        "result": "failed: unindent does not match any outer indentation level (<string>, line 22)",
        "similarities": [
            0.9977349638938904,
            0.9972966909408569,
            0.9975913166999817,
            0.9980520009994507,
            0.9977706074714661,
            0.9980520009994507,
            0.9980520009994507,
            0.9956597089767456,
            0.9977706074714661,
            0.9981576204299927,
            0.9977706074714661,
            0.9981576204299927,
            0.9981892108917236,
            0.9977707266807556,
            0.9953784942626953,
            0.9981269836425781,
            0.9963055849075317,
            0.9977706074714661,
            0.9977706074714661,
            0.9952424764633179
        ]
    },
    "HumanEval/32": {
        "similarity": 0.9934654235839844,
        "body": "    return (-xs[2] / xs[3]) ** 0.5 if len(xs) == 4 else None",
        "result": "failed: must be real number, not NoneType",
        "similarities": [
            0.992274820804596,
            0.992274820804596,
            0.9918157458305359,
            0.9890791177749634,
            0.9918067455291748,
            0.9900813698768616,
            0.9924254417419434,
            0.9934654235839844,
            0.9907302856445312,
            0.992274820804596,
            0.9882656931877136,
            0.9911400675773621,
            0.9896414875984192,
            0.9931584596633911,
            0.9930673837661743,
            0.9926227927207947,
            0.9929885864257812,
            0.9897246956825256,
            0.9890438914299011,
            0.9576666951179504
        ]
    },
    "HumanEval/33": {
        "similarity": 0.9938766956329346,
        "body": "    third_indices = sorted([l[i] for i in range(0, len(l)) if (i % 3 == 0)])\n    l[::3] = third_indices\n    return l",
        "result": "passed",
        "similarities": [
            0.9913560152053833,
            0.9914525747299194,
            0.9871841073036194,
            0.9938766956329346,
            0.989593505859375,
            0.9934705495834351,
            0.9864122271537781,
            0.9934830069541931,
            0.9933652281761169,
            0.9916940927505493,
            0.9899830222129822,
            0.9903608560562134,
            0.9923936724662781,
            0.992068350315094,
            0.9916520714759827,
            0.9881240725517273,
            0.9931783080101013,
            0.9902022480964661,
            0.9924734234809875,
            0.989593505859375
        ]
    },
    "HumanEval/34": {
        "similarity": 0.9996671080589294,
        "body": "return sorted(set(l))",
        "result": "failed: 'return' outside function (<string>, line 8)",
        "similarities": [
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294,
            0.9980946779251099,
            0.9988325238227844,
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294,
            0.9980946779251099,
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294,
            0.9988325238227844,
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294,
            0.9996671080589294
        ]
    },
    "HumanEval/35": {
        "similarity": 0.9969962239265442,
        "body": "max(l)",
        "result": "failed: name 'l' is not defined",
        "similarities": [
            0.9969962239265442,
            0.9961866140365601,
            0.9961866140365601,
            0.988719642162323,
            0.9969962239265442,
            0.9961866140365601,
            0.9961866140365601,
            0.9961866140365601,
            0.9969962239265442,
            0.9952695965766907,
            0.9952695965766907,
            0.9952695965766907,
            0.9969962239265442,
            0.9969962239265442,
            0.9952695965766907,
            0.9929561614990234,
            0.9969962239265442,
            0.9961866140365601,
            0.9961866140365601,
            0.9961866140365601
        ]
    },
    "HumanEval/36": {
        "similarity": 0.9969523549079895,
        "body": "for i in range(n):\n    if i % 11 == 0 or i % 13 == 0:\n        while i > 0 and i % 10 == 7:\n            count += 1\n            i //= 10",
        "result": "failed: name 'n' is not defined",
        "similarities": [
            0.9967184662818909,
            0.9969523549079895,
            0.9965155720710754,
            0.9969407916069031,
            0.994799792766571,
            0.9929768443107605,
            0.9968728423118591,
            0.9955564737319946,
            0.9968301057815552,
            0.9959995746612549,
            0.9952188730239868,
            0.9967931509017944,
            0.9938756227493286,
            0.9951990246772766,
            0.9897092580795288,
            0.9952041506767273,
            0.9956045746803284,
            0.9961941242218018,
            0.9951990842819214,
            0.9964714050292969
        ]
    },
    "HumanEval/37": {
        "similarity": 0.9944332838058472,
        "body": "even = sorted(l[i] for i in range(0, len(l), 2))\nl[::2] = even\nreturn l",
        "result": "failed: 'return' outside function (<string>, line 14)",
        "similarities": [
            0.9938493967056274,
            0.9938493967056274,
            0.9939224123954773,
            0.9937829375267029,
            0.9938493967056274,
            0.9919537305831909,
            0.9936780333518982,
            0.9938493967056274,
            0.9899402260780334,
            0.9938439130783081,
            0.9914213418960571,
            0.9941249489784241,
            0.9917452931404114,
            0.9941249489784241,
            0.9890346527099609,
            0.9944332838058472,
            0.9944332838058472,
            0.9918388724327087,
            0.9888239502906799,
            0.9935021996498108
        ]
    },
    "HumanEval/38": {
        "similarity": 0.9908039569854736,
        "body": "    groups = [s[(3 * i):min((3 * i + 3), len(s))] for i in range((len(s) - 1) // 3)]\n    return \"\".join(groups)",
        "result": "failed: ",
        "similarities": [
            0.9894498586654663,
            0.9821813702583313,
            0.9888899922370911,
            0.9888899922370911,
            0.9878908395767212,
            0.9908039569854736,
            0.9862222075462341,
            0.9740205407142639,
            0.9888129234313965,
            0.9841766357421875,
            0.9874968528747559,
            0.9888899922370911,
            0.9891712665557861,
            0.9884839653968811,
            0.9894497394561768,
            0.9894497394561768,
            0.9901884198188782,
            0.9740205407142639,
            0.9865371584892273,
            0.9897177815437317
        ]
    },
    "HumanEval/39": {
        "similarity": 0.9990159273147583,
        "body": "    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n    a, b = 0, 1\n    count = 0\n    while count < n:\n        a, b = b, a + b\n        if is_prime(b):\n            count += 1\n    return b",
        "result": "failed: ",
        "similarities": [
            0.9990159273147583,
            0.9977558851242065,
            0.9986346364021301,
            0.9986604452133179,
            0.9989129900932312,
            0.9988148212432861,
            0.998044490814209,
            0.9983407258987427,
            0.9986164569854736,
            0.9989389181137085,
            0.9989389181137085,
            0.9983537793159485,
            0.9961608052253723,
            0.9989389181137085,
            0.9982430338859558,
            0.9989927411079407,
            0.9982466697692871,
            0.9986140727996826,
            0.9988009929656982,
            0.998131513595581
        ]
    },
    "HumanEval/40": {
        "similarity": 0.9912089109420776,
        "body": "    for i in range(len(l)):\n        for j in range(i+1, len(l)):\n            for k in range(j+1, len(l)):\n                if l[i] + l[j] + l[k] == 0:\n                    return True\n    return False",
        "result": "passed",
        "similarities": [
            0.9850456118583679,
            0.9889529347419739,
            0.9845450520515442,
            0.9905826449394226,
            0.9911960959434509,
            0.9907376170158386,
            0.9906620383262634,
            0.9905826449394226,
            0.9774109721183777,
            0.9905826449394226,
            0.9903210401535034,
            0.9830123782157898,
            0.9799001812934875,
            0.9912089109420776,
            0.9840459227561951,
            0.9904487133026123,
            0.9644128084182739,
            0.9904487133026123,
            0.9906144738197327,
            0.9912089109420776
        ]
    },
    "HumanEval/41": {
        "similarity": 0.9899946451187134,
        "body": "    return n * (n - 1) // 2",
        "result": "failed: ",
        "similarities": [
            0.98589026927948,
            0.9896970391273499,
            0.9886745810508728,
            0.9885537028312683,
            0.9899946451187134,
            0.980430006980896,
            0.9896970391273499,
            0.985970139503479,
            0.9862436056137085,
            0.9887778759002686,
            0.98589026927948,
            0.9896970987319946,
            0.9784104228019714,
            0.9891244769096375,
            0.9899946451187134,
            0.9864352345466614,
            0.9880864024162292,
            0.9885381460189819,
            0.9896970391273499,
            0.9850189089775085
        ]
    },
    "HumanEval/42": {
        "similarity": 0.9967989921569824,
        "body": "    return [i + 1 for i in l]",
        "result": "passed",
        "similarities": [
            0.9967989921569824,
            0.9928719401359558,
            0.9957338571548462,
            0.9957338571548462,
            0.9956367015838623,
            0.9967989921569824,
            0.9956367015838623,
            0.9955158233642578,
            0.9956367015838623,
            0.9967989921569824,
            0.9956367015838623,
            0.9956367015838623,
            0.9928719401359558,
            0.9957338571548462,
            0.9955158233642578,
            0.9955158233642578,
            0.9957338571548462,
            0.9955158233642578,
            0.9928719401359558,
            0.9967989921569824
        ]
    },
    "HumanEval/43": {
        "similarity": 0.9959843158721924,
        "body": "    seen = set()\n    for num in l:\n        if -num in seen:\n            return True\n        seen.add(num)\n    return False",
        "result": "passed",
        "similarities": [
            0.9863328337669373,
            0.9959843158721924,
            0.9959843158721924,
            0.9959843158721924,
            0.9852691292762756,
            0.9927592873573303,
            0.9865576028823853,
            0.9959843158721924,
            0.9948484301567078,
            0.9959843158721924,
            0.9959843158721924,
            0.9959843158721924,
            0.9959843158721924,
            0.9955300092697144,
            0.9959843158721924,
            0.9959843158721924,
            0.9959843158721924,
            0.9927592873573303,
            0.9865925312042236,
            0.9959843158721924
        ]
    },
    "HumanEval/44": {
        "similarity": 0.9912865161895752,
        "body": "    chars = \"0123456789ABCDEF\"\n    if x < base:\n        return chars[x]\n    else:\n        return change_base(x // base, base) + chars[x % base]",
        "result": "passed",
        "similarities": [
            0.9868153929710388,
            0.9888948202133179,
            0.990993082523346,
            0.9909613728523254,
            0.9864377379417419,
            0.987463116645813,
            0.9906744956970215,
            0.9893044233322144,
            0.968328595161438,
            0.9886109232902527,
            0.9912865161895752,
            0.9887261986732483,
            0.9856438040733337,
            0.9906744956970215,
            0.9884834289550781,
            0.9716181755065918,
            0.987750232219696,
            0.9684823751449585,
            0.987463116645813,
            0.9800222516059875
        ]
    },
    "HumanEval/45": {
        "similarity": 0.9977611899375916,
        "body": "    return 0.5 * a * h",
        "result": "passed",
        "similarities": [
            0.9977611899375916,
            0.9975669384002686,
            0.9977611899375916,
            0.9975669384002686,
            0.9962747693061829,
            0.9975669384002686,
            0.9976837038993835,
            0.9977611899375916,
            0.9975669384002686,
            0.9961642026901245,
            0.9977611899375916,
            0.9977611899375916,
            0.9977611899375916,
            0.9961642026901245,
            0.996978759765625,
            0.996978759765625,
            0.9955106973648071,
            0.996978759765625,
            0.9977611899375916,
            0.9975669384002686
        ]
    },
    "HumanEval/46": {
        "similarity": 0.9977326989173889,
        "body": "    if n < 4:\n        return [0, 0, 2][n]\n    a, b, c, d = 0, 0, 2, 0\n    for _ in range(4, n + 1):\n        a, b, c, d = b, c, d, a + b + c + d\n    return d",
        "result": "passed",
        "similarities": [
            0.9962984323501587,
            0.996934711933136,
            0.9930265545845032,
            0.9961234927177429,
            0.9976897239685059,
            0.9964480996131897,
            0.9969255328178406,
            0.9976897239685059,
            0.9944604635238647,
            0.9977208375930786,
            0.9976897239685059,
            0.9977326989173889,
            0.9971069693565369,
            0.9976897239685059,
            0.9976897239685059,
            0.9976059794425964,
            0.9976897239685059,
            0.9952095746994019,
            0.997676432132721,
            0.9952456951141357
        ]
    },
    "HumanEval/47": {
        "similarity": 0.9955026507377625,
        "body": "from typing import List\n\n    l.sort()\n    n = len(l)\n    if n % 2 == 0:\n        return (l[n//2 - 1] + l[n//2]) / 2\n    else:\n        return l[n//2]",
        "result": "failed: unexpected indent (<string>, line 12)",
        "similarities": [
            0.9896647930145264,
            0.9910200238227844,
            0.9928892850875854,
            0.9949373006820679,
            0.9930524230003357,
            0.9955026507377625,
            0.9947308301925659,
            0.9937366843223572,
            0.9945886731147766,
            0.9905210733413696,
            0.994490385055542,
            0.9944785237312317,
            0.993910551071167,
            0.9648868441581726,
            0.9941554665565491,
            0.9946606159210205,
            0.9940055012702942,
            0.9941834211349487,
            0.9947889447212219,
            0.9916976094245911
        ]
    },
    "HumanEval/48": {
        "similarity": 0.9991455078125,
        "body": "    return text == text[::-1]",
        "result": "passed",
        "similarities": [
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9991455078125,
            0.9971882700920105,
            0.9991455078125,
            0.9971882700920105,
            0.9991455078125,
            0.9991455078125,
            0.9971882700920105,
            0.9950380921363831,
            0.9991455078125,
            0.9971883893013
        ]
    },
    "HumanEval/49": {
        "similarity": 0.997169017791748,
        "body": "return pow(2, n, p)",
        "result": "failed: 'return' outside function (<string>, line 16)",
        "similarities": [
            0.997169017791748,
            0.9946032166481018,
            0.9946032166481018,
            0.9946032166481018,
            0.997169017791748,
            0.997169017791748,
            0.9925794005393982,
            0.997169017791748,
            0.997169017791748,
            0.997169017791748,
            0.997169017791748,
            0.997169017791748,
            0.997169017791748,
            0.9958412051200867,
            0.9946032166481018,
            0.997169017791748,
            0.997169017791748,
            0.997169017791748,
            0.9946032166481018,
            0.9946032166481018
        ]
    },
    "HumanEval/50": {
        "similarity": 0.9988847374916077,
        "body": "return \"\".join([chr(((ord(ch) - 5 + ord(\"a\")) % 26) + ord(\"a\")) for ch in s])",
        "result": "failed: 'return' outside function (<string>, line 14)",
        "similarities": [
            0.9968456625938416,
            0.9988629221916199,
            0.9988232851028442,
            0.9985039234161377,
            0.9985039234161377,
            0.9988629221916199,
            0.9983770251274109,
            0.9987839460372925,
            0.9988629221916199,
            0.9985039234161377,
            0.9988629221916199,
            0.9985039234161377,
            0.996616780757904,
            0.9985039234161377,
            0.9988629221916199,
            0.9988629221916199,
            0.9988847374916077,
            0.9988629221916199,
            0.9985039234161377,
            0.9988629221916199
        ]
    },
    "HumanEval/51": {
        "similarity": 0.9964802265167236,
        "body": "    vowels = set(\"aeiouAEIOU\")\n    return \"\".join(char for char in text if char not in vowels)",
        "result": "passed",
        "similarities": [
            0.9963244199752808,
            0.9963244199752808,
            0.9929982423782349,
            0.9963244199752808,
            0.9963244199752808,
            0.9961684346199036,
            0.9948868155479431,
            0.9964802265167236,
            0.995414137840271,
            0.995414137840271,
            0.9961684346199036,
            0.9958140850067139,
            0.9961684346199036,
            0.9963244199752808,
            0.9955036640167236,
            0.9961684346199036,
            0.9923364520072937,
            0.9944210052490234,
            0.9925788044929504,
            0.9955036640167236
        ]
    },
    "HumanEval/52": {
        "similarity": 0.9960597157478333,
        "body": "return all(num < t for num in l)",
        "result": "failed: 'return' outside function (<string>, line 10)",
        "similarities": [
            0.9957363605499268,
            0.9953593015670776,
            0.9953593015670776,
            0.9957363605499268,
            0.9957363605499268,
            0.9803569316864014,
            0.9960597157478333,
            0.9959992170333862,
            0.9953593015670776,
            0.9798198342323303,
            0.9957363605499268,
            0.9960597157478333,
            0.9957363605499268,
            0.9959992170333862,
            0.9803569316864014,
            0.9957363605499268,
            0.9957363605499268,
            0.9957363605499268,
            0.9957363605499268,
            0.9957363605499268
        ]
    },
    "HumanEval/53": {
        "similarity": 0.9983954429626465,
        "body": "return x + y",
        "result": "failed: 'return' outside function (<string>, line 10)",
        "similarities": [
            0.9983954429626465,
            0.9983954429626465,
            0.9983954429626465,
            0.9983375072479248,
            0.9983954429626465,
            0.9983954429626465,
            0.9983375072479248,
            0.9983954429626465,
            0.9983375072479248,
            0.9983375072479248,
            0.9983375072479248,
            0.9983954429626465,
            0.9983375072479248,
            0.9981428384780884,
            0.9983954429626465,
            0.9983954429626465,
            0.9983375072479248,
            0.9983954429626465,
            0.9983375072479248,
            0.9983375072479248
        ]
    },
    "HumanEval/54": {
        "similarity": 0.998188853263855,
        "body": "    return sorted(s0) == sorted(s1)",
        "result": "failed: ",
        "similarities": [
            0.998188853263855,
            0.998188853263855,
            0.9957739114761353,
            0.998188853263855,
            0.998188853263855,
            0.998188853263855,
            0.9957739114761353,
            0.998188853263855,
            0.9957739114761353,
            0.998188853263855,
            0.998188853263855,
            0.9957739114761353,
            0.998188853263855,
            0.9957739114761353,
            0.9957739114761353,
            0.998188853263855,
            0.998188853263855,
            0.998188853263855,
            0.998188853263855,
            0.998188853263855
        ]
    },
    "HumanEval/55": {
        "similarity": 0.997253954410553,
        "body": "        a, b = 0, 1\n        for _ in range(n):\n            a, b = b, a + b\n        return a",
        "result": "failed: unexpected indent (<string>, line 12)",
        "similarities": [
            0.9971794486045837,
            0.9885126352310181,
            0.9971794486045837,
            0.9916207194328308,
            0.9942387938499451,
            0.9971794486045837,
            0.997253954410553,
            0.9971794486045837,
            0.9942387938499451,
            0.9971794486045837,
            0.9971794486045837,
            0.9971794486045837,
            0.9971794486045837,
            0.9892538189888,
            0.9971794486045837,
            0.9971794486045837,
            0.9971794486045837,
            0.9971794486045837,
            0.9971794486045837,
            0.9971794486045837
        ]
    },
    "HumanEval/56": {
        "similarity": 0.9960654377937317,
        "body": "    stack = []\n    for b in brackets:\n        if b == '<':\n            stack.append(b)\n        elif b == '>':\n            if not stack:\n                return False\n            stack.pop()\n    return not stack",
        "result": "passed",
        "similarities": [
            0.99185711145401,
            0.995991051197052,
            0.9960654377937317,
            0.995723307132721,
            0.9960654377937317,
            0.9956659078598022,
            0.9957960844039917,
            0.995991051197052,
            0.995991051197052,
            0.9956659078598022,
            0.9523004293441772,
            0.9959147572517395,
            0.9958895444869995,
            0.99579256772995,
            0.9956659078598022,
            0.9953798055648804,
            0.9960654377937317,
            0.9955466389656067,
            0.99579256772995,
            0.995991051197052
        ]
    },
    "HumanEval/57": {
        "similarity": 0.992618978023529,
        "body": "    return all(x >= y for x, y in zip(l, l[1:])) or all(x <= y for x, y in zip(l, l[1:]))",
        "result": "passed",
        "similarities": [
            0.9867033958435059,
            0.9889922142028809,
            0.9925858378410339,
            0.9925972819328308,
            0.9863680601119995,
            0.9896976351737976,
            0.9872795939445496,
            0.978848934173584,
            0.9863415956497192,
            0.992618978023529,
            0.978848934173584,
            0.9895963072776794,
            0.9899598956108093,
            0.9868105053901672,
            0.9863680601119995,
            0.9860270619392395,
            0.9867033958435059,
            0.987044095993042,
            0.9902000427246094,
            0.9863680601119995
        ]
    },
    "HumanEval/58": {
        "similarity": 0.9993425011634827,
        "body": "return sorted(set(l1) & set(l2))",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9993425011634827,
            0.9993425011634827,
            0.9938908815383911,
            0.996164858341217,
            0.9993425011634827,
            0.996164858341217,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827,
            0.9993425011634827
        ]
    },
    "HumanEval/59": {
        "similarity": 0.9961776733398438,
        "body": "    i = n\n    while i % 2 == 0:\n        i //= 2\n    for div in range(3,int(i**0.5)+1,2):\n        while i % div== 0:\n            i /= div\n    return i",
        "result": "failed: ",
        "similarities": [
            0.994795560836792,
            0.9914670586585999,
            0.9910521507263184,
            0.9935694336891174,
            0.9912406802177429,
            0.9945580363273621,
            0.9955615997314453,
            0.9947349429130554,
            0.9952782392501831,
            0.9960134625434875,
            0.9946672320365906,
            0.9924393892288208,
            0.9955556988716125,
            0.9961716532707214,
            0.9961776733398438,
            0.9947349429130554,
            0.9932242035865784,
            0.9950668215751648,
            0.9956098794937134,
            0.9808861613273621
        ]
    },
    "HumanEval/60": {
        "similarity": 0.9989891052246094,
        "body": "    return n * (n + 1) // 2",
        "result": "passed",
        "similarities": [
            0.9989891052246094,
            0.9985399842262268,
            0.99456787109375,
            0.9985399842262268,
            0.9989891052246094,
            0.9985399842262268,
            0.9989891052246094,
            0.9989891052246094,
            0.9989891052246094,
            0.9989891052246094,
            0.9985399842262268,
            0.9989891052246094,
            0.9985399842262268,
            0.9985399842262268,
            0.9989891052246094,
            0.9985399842262268,
            0.9989891052246094,
            0.9989891052246094,
            0.9989891052246094,
            0.9985399842262268
        ]
    },
    "HumanEval/61": {
        "similarity": 0.998278796672821,
        "body": "    count = 0\n    for b in brackets:\n        if b == '(':\n            count += 1\n        elif b == ')':\n            count -= 1\n            if count < 0:\n                return False\n    return count == 0",
        "result": "passed",
        "similarities": [
            0.9982318878173828,
            0.998278796672821,
            0.9975694417953491,
            0.9981434345245361,
            0.998278796672821,
            0.9975559115409851,
            0.9977906942367554,
            0.9981617331504822,
            0.9981617331504822,
            0.9976599812507629,
            0.9978854656219482,
            0.9981617331504822,
            0.9965037107467651,
            0.998278796672821,
            0.9941535592079163,
            0.998278796672821,
            0.9981434345245361,
            0.9981617331504822,
            0.9938998222351074,
            0.9976723194122314
        ]
    },
    "HumanEval/62": {
        "similarity": 0.9955903887748718,
        "body": "    return [i * (n + 1) for i, n in enumerate(xs)]",
        "result": "failed: ",
        "similarities": [
            0.9927895069122314,
            0.9887992739677429,
            0.9924367666244507,
            0.9939127564430237,
            0.9886341094970703,
            0.9955753684043884,
            0.9937561750411987,
            0.9954037070274353,
            0.990606427192688,
            0.9925234913825989,
            0.9937561750411987,
            0.9930450320243835,
            0.9953902363777161,
            0.992329478263855,
            0.9936186075210571,
            0.9955903887748718,
            0.9955891370773315,
            0.9955891370773315,
            0.9917405843734741,
            0.9920282959938049
        ]
    },
    "HumanEval/63": {
        "similarity": 0.9984564781188965,
        "body": "    if n < 3:\n        return n - 1\n    a, b, c = 0, 0, 1\n    for _ in range(2, n + 1):\n        a, b, c = b, c, a + b + c\n    return c",
        "result": "failed: ",
        "similarities": [
            0.9984564781188965,
            0.9984495043754578,
            0.9984495043754578,
            0.9984036684036255,
            0.9977098703384399,
            0.998177170753479,
            0.9983673095703125,
            0.9964708089828491,
            0.9984495043754578,
            0.9984495043754578,
            0.9984495043754578,
            0.9947878122329712,
            0.9965806603431702,
            0.9965806603431702,
            0.9984402060508728,
            0.9965806603431702,
            0.9947878122329712,
            0.9961279630661011,
            0.998177170753479,
            0.9968767762184143
        ]
    },
    "HumanEval/64": {
        "similarity": 0.996895432472229,
        "body": "    vowels = 'aeiou'\n    count = sum(1 for c in s if c.lower() in vowels or (c == 'y' and len(s) > 1))\n    return count",
        "result": "failed: Test 4",
        "similarities": [
            0.9955681562423706,
            0.996895432472229,
            0.9960291981697083,
            0.9940725564956665,
            0.9956472516059875,
            0.9961872100830078,
            0.9925098419189453,
            0.9967406392097473,
            0.9963337779045105,
            0.9962592720985413,
            0.9943773150444031,
            0.9933332204818726,
            0.9966409802436829,
            0.9940362572669983,
            0.9966117739677429,
            0.9960271120071411,
            0.9953404664993286,
            0.9962764382362366,
            0.9962891340255737,
            0.9964086413383484
        ]
    },
    "HumanEval/65": {
        "similarity": 0.9945687055587769,
        "body": "    x_str = str(x)[::-1]\n    return x_str[shift:] + x_str[:shift]",
        "result": "failed: ",
        "similarities": [
            0.9938614368438721,
            0.9945687055587769,
            0.992692232131958,
            0.9925014972686768,
            0.9925629496574402,
            0.99058997631073,
            0.9925629496574402,
            0.9925629496574402,
            0.994195818901062,
            0.9922982454299927,
            0.9905341267585754,
            0.9927334189414978,
            0.9888333082199097,
            0.9897946715354919,
            0.9939346313476562,
            0.9937978982925415,
            0.9931297302246094,
            0.9927008748054504,
            0.9925959706306458,
            0.994195818901062
        ]
    },
    "HumanEval/66": {
        "similarity": 0.9986761212348938,
        "body": "    return sum(ord(c) for c in s if c.isupper())",
        "result": "passed",
        "similarities": [
            0.9976633787155151,
            0.9980107545852661,
            0.9986761212348938,
            0.9986761212348938,
            0.9986761212348938,
            0.9986761212348938,
            0.9986761212348938,
            0.9986761212348938,
            0.9976633787155151,
            0.9986761212348938,
            0.9986761212348938,
            0.9980107545852661,
            0.9976633787155151,
            0.9976633787155151,
            0.9974688291549683,
            0.9986761212348938,
            0.9976633787155151,
            0.9986761212348938,
            0.9970629811286926,
            0.9986761212348938
        ]
    },
    "HumanEval/67": {
        "similarity": 0.996390700340271,
        "body": "    fruits = s.split(' and ')\n    apples = int(fruits[0].split()[0])\n    oranges = int(fruits[1])\n    return n - apples - oranges",
        "result": "failed: invalid literal for int() with base 10: '6 oranges'",
        "similarities": [
            0.9945226311683655,
            0.9944930672645569,
            0.9950551390647888,
            0.9956358075141907,
            0.9944455027580261,
            0.9961409568786621,
            0.9961409568786621,
            0.9948849081993103,
            0.9944036602973938,
            0.9961409568786621,
            0.9961286783218384,
            0.9952451586723328,
            0.9938476085662842,
            0.9961409568786621,
            0.9960061311721802,
            0.996390700340271,
            0.995631754398346,
            0.9950501322746277,
            0.9961409568786621,
            0.9878212809562683
        ]
    },
    "HumanEval/68": {
        "similarity": 0.9988284707069397,
        "body": "    evens = [(v, i) for i, v in enumerate(arr) if v % 2 == 0]\n    return min(evens, key=lambda x: (x[0], x[1])) if evens else []",
        "result": "failed: Error",
        "similarities": [
            0.9976807832717896,
            0.9980425834655762,
            0.9973410367965698,
            0.9970079064369202,
            0.9985952973365784,
            0.9987249970436096,
            0.9983131885528564,
            0.9988284707069397,
            0.9988284707069397,
            0.9986218810081482,
            0.9986218810081482,
            0.9988133311271667,
            0.9988284707069397,
            0.9987249970436096,
            0.9981012940406799,
            0.9945254921913147,
            0.9987249970436096,
            0.9967668652534485,
            0.9980425834655762,
            0.9974644184112549
        ]
    },
    "HumanEval/69": {
        "similarity": 0.9913924336433411,
        "body": "    count = {}\n    for num in lst:\n        count[num] = count.get(num, 0) + 1\n\n    for num, freq in count.items():\n        if freq >= num and num > 0:\n            return num\n    return -1",
        "result": "failed: ",
        "similarities": [
            0.9843101501464844,
            0.9894441366195679,
            0.9880690574645996,
            0.9725799560546875,
            0.988315761089325,
            0.9900379180908203,
            0.9881550669670105,
            0.989468514919281,
            0.989709734916687,
            0.9852917194366455,
            0.989660382270813,
            0.9895769357681274,
            0.9893232583999634,
            0.9904654622077942,
            0.9827933311462402,
            0.9892839193344116,
            0.9854180216789246,
            0.9839722514152527,
            0.9913924336433411,
            0.974584698677063
        ]
    },
    "HumanEval/70": {
        "similarity": 0.9922570586204529,
        "body": "    sorted_lst = []\n    while lst:\n        sorted_lst.append(min(lst))\n        lst.remove(min(lst))\n        if lst:\n            sorted_lst.append(max(lst))\n            lst.remove(max(lst))\n    return sorted_lst",
        "result": "passed",
        "similarities": [
            0.9852499961853027,
            0.9921700358390808,
            0.9922376275062561,
            0.9907762408256531,
            0.9892593026161194,
            0.9882739186286926,
            0.9858857989311218,
            0.9898529052734375,
            0.9914098978042603,
            0.9883842468261719,
            0.9836012125015259,
            0.9885078072547913,
            0.9882739186286926,
            0.9911699891090393,
            0.9744411110877991,
            0.9922570586204529,
            0.9774040579795837,
            0.9864020347595215,
            0.989841878414154,
            0.9857198596000671
        ]
    },
    "HumanEval/71": {
        "similarity": 0.9976206421852112,
        "body": "if a + b > c and a + c > b and b + c > a:\n    s = (a + b + c) / 2\n    return round((s * (s - a) * (s - b) * (s - c)) ** .5, 2)\nelse:\n    return -1",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9958289265632629,
            0.9934144616127014,
            0.9976206421852112,
            0.9975540041923523,
            0.9948535561561584,
            0.9943417906761169,
            0.988960862159729,
            0.9976206421852112,
            0.9942207336425781,
            0.9975540041923523,
            0.996366024017334,
            0.9975540041923523,
            0.9975540041923523,
            0.9955304861068726,
            0.9963402152061462,
            0.9958541393280029,
            0.9967023134231567,
            0.9975540041923523,
            0.9966300129890442,
            0.9975540041923523
        ]
    },
    "HumanEval/72": {
        "similarity": 0.9991962909698486,
        "body": "    return q == q[::-1] and sum(q) <= w",
        "result": "passed",
        "similarities": [
            0.9991962909698486,
            0.9991962909698486,
            0.9962289929389954,
            0.9991962909698486,
            0.9991962909698486,
            0.9991962909698486,
            0.9991962909698486,
            0.9991962909698486,
            0.9991962909698486,
            0.9991962909698486,
            0.9962289929389954,
            0.9991962909698486,
            0.9991962909698486,
            0.9991962909698486,
            0.9962289929389954,
            0.9991962909698486,
            0.9991962909698486,
            0.9991962909698486,
            0.9954632520675659,
            0.9991962909698486
        ]
    },
    "HumanEval/73": {
        "similarity": 0.9958140850067139,
        "body": "    left, right = 0, len(arr) - 1\n    changes = 0\n\n    while left < right:\n        if arr[left] != arr[right]:\n            changes += 1\n        left += 1\n        right -= 1\n\n    return changes // 2",
        "result": "failed: ",
        "similarities": [
            0.9802296161651611,
            0.9954936504364014,
            0.9773080945014954,
            0.9952102303504944,
            0.9958140850067139,
            0.9948182702064514,
            0.9958140850067139,
            0.9957546591758728,
            0.9958140850067139,
            0.9957646131515503,
            0.9806339144706726,
            0.9956428408622742,
            0.9954936504364014,
            0.9958140850067139,
            0.9955064654350281,
            0.9817876219749451,
            0.9958140850067139,
            0.9958140850067139,
            0.9954936504364014,
            0.9958140850067139
        ]
    },
    "HumanEval/74": {
        "similarity": 0.9980860352516174,
        "body": "    return lst1 if sum(len(s) for s in lst1) < sum(len(s) for s in lst2) else lst2",
        "result": "failed: ",
        "similarities": [
            0.9980860352516174,
            0.9980860352516174,
            0.9980860352516174,
            0.9980860352516174,
            0.9932469129562378,
            0.9971620440483093,
            0.9980860352516174,
            0.9897070527076721,
            0.9980860352516174,
            0.9980860352516174,
            0.9918432831764221,
            0.9977378845214844,
            0.9980860352516174,
            0.9980860352516174,
            0.9971620440483093,
            0.9897070527076721,
            0.9980860352516174,
            0.9980860352516174,
            0.9980860352516174,
            0.9932469129562378
        ]
    },
    "HumanEval/75": {
        "similarity": 0.9951493144035339,
        "body": "    primes = [2, 3, 5]\n    factors = []\n    while a % 2 == 0 and 2 in primes:\n        factors.append(2)\n        a /= 2\n    for prime in primes[1:]:\n        while a % prime == 0 and prime in primes:\n            factors.append(prime)\n            a /= prime\n    return len(factors) == 3",
        "result": "failed: ",
        "similarities": [
            0.9934121966362,
            0.9909918904304504,
            0.9920583963394165,
            0.9951493144035339,
            0.9934501647949219,
            0.9880290627479553,
            0.9925466179847717,
            0.985776424407959,
            0.9924982786178589,
            0.9888429045677185,
            0.993757963180542,
            0.9946840405464172,
            0.9887669086456299,
            0.9948423504829407,
            0.9940764904022217,
            0.9947339296340942,
            0.9939987063407898,
            0.9945608377456665,
            0.9948961138725281,
            0.9934001564979553
        ]
    },
    "HumanEval/76": {
        "similarity": 0.9967705607414246,
        "body": "    return x == n ** int(math.log(x, n))",
        "result": "failed: name 'math' is not defined",
        "similarities": [
            0.9953488111495972,
            0.9953566193580627,
            0.9953566193580627,
            0.9967705607414246,
            0.9965501427650452,
            0.9811701774597168,
            0.9838331341743469,
            0.9967705607414246,
            0.9967705607414246,
            0.9965501427650452,
            0.993635892868042,
            0.9953566193580627,
            0.996071994304657,
            0.995366632938385,
            0.9923952221870422,
            0.9967705607414246,
            0.9965501427650452,
            0.995162844657898,
            0.9967350363731384,
            0.9967350363731384
        ]
    },
    "HumanEval/77": {
        "similarity": 0.9942243695259094,
        "body": "return a ** (1. / 3.) % 1 == 0",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9922824501991272,
            0.9890073537826538,
            0.9938973188400269,
            0.9925732016563416,
            0.9826586842536926,
            0.9942243695259094,
            0.9935252666473389,
            0.9922824501991272,
            0.9935252666473389,
            0.9859659075737,
            0.9847319722175598,
            0.9840922951698303,
            0.9940314292907715,
            0.9938973188400269,
            0.9935252666473389,
            0.9922825694084167,
            0.9925732016563416,
            0.9925732016563416,
            0.9941890239715576,
            0.9939731955528259
        ]
    },
    "HumanEval/78": {
        "similarity": 0.998542070388794,
        "body": "    primes = {'2', '3', '5', '7', 'B', 'D'}\n    return sum(1 for c in num if c in primes)",
        "result": "passed",
        "similarities": [
            0.9983534812927246,
            0.998542070388794,
            0.993130624294281,
            0.9983534812927246,
            0.998542070388794,
            0.9980083107948303,
            0.9917201995849609,
            0.998542070388794,
            0.9980083107948303,
            0.9985219240188599,
            0.998542070388794,
            0.9958403706550598,
            0.998542070388794,
            0.9958307147026062,
            0.998542070388794,
            0.997999370098114,
            0.9983534812927246,
            0.9983404278755188,
            0.998542070388794,
            0.998542070388794
        ]
    },
    "HumanEval/79": {
        "similarity": 0.9948975443840027,
        "body": "    return 'db' + bin(decimal)[2:] + 'db'",
        "result": "passed",
        "similarities": [
            0.9937943816184998,
            0.9948975443840027,
            0.9941871166229248,
            0.9922885894775391,
            0.9948975443840027,
            0.9869372844696045,
            0.9939008951187134,
            0.9943749308586121,
            0.994308590888977,
            0.9940075278282166,
            0.9947600364685059,
            0.9937943816184998,
            0.9943191409111023,
            0.9937180280685425,
            0.9905848503112793,
            0.9735402464866638,
            0.9858458638191223,
            0.9947196841239929,
            0.993047833442688,
            0.9948975443840027
        ]
    },
    "HumanEval/80": {
        "similarity": 0.9954725503921509,
        "body": "if len(s) < 3:\n    return False\nfor i in range(len(s)-2):\n    if s[i] == s[i+1] or s[i] == s[i+2] or s[i+1] == s[i+2]:\n        return False\nreturn True",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9954725503921509,
            0.9946120381355286,
            0.9872907400131226,
            0.9946120381355286,
            0.9954725503921509,
            0.9951846599578857,
            0.9954717755317688,
            0.9947972893714905,
            0.9954725503921509,
            0.9921393394470215,
            0.9954717755317688,
            0.9811670184135437,
            0.9948059916496277,
            0.9931092858314514,
            0.9954717755317688,
            0.9950639009475708,
            0.9855077862739563,
            0.9954725503921509,
            0.9942417144775391,
            0.9942417144775391
        ]
    },
    "HumanEval/81": {
        "similarity": 0.9856606721878052,
        "body": "    letter_grades = [\n        'E' if g <= 0 else ('D-' if g < 1 else 'D+'),\n        'C-' if g < 1.3 else 'C',\n        'B-' if g < 2 else 'B',\n        'B+' if g < 2.7 else 'B-',\n        'A-' if g < 3 else 'A',\n        'A+' if g > 4 else None\n    ]\n    return [grades for grades, grade in zip(grades, letter_grades) if grade]",
        "result": "failed: name 'g' is not defined",
        "similarities": [
            0.984761118888855,
            0.9772252440452576,
            0.985495924949646,
            0.9604125022888184,
            0.9852120280265808,
            0.9777753949165344,
            0.9828703999519348,
            0.9787183403968811,
            0.9852508902549744,
            0.9766666889190674,
            0.9796309471130371,
            0.9815038442611694,
            0.9776087403297424,
            0.985365092754364,
            0.9856606721878052,
            0.9822757244110107,
            0.9718912243843079,
            0.975437343120575,
            0.9778655171394348,
            0.9848085641860962
        ]
    },
    "HumanEval/82": {
        "similarity": 0.9967039823532104,
        "body": "    length = len(string)\n    if length < 2:\n        return False\n    for i in range(2, int(length**0.5) + 1):\n        if length % i == 0:\n            return False\n    return True",
        "result": "passed",
        "similarities": [
            0.9966998100280762,
            0.9957343935966492,
            0.9967039823532104,
            0.9966998100280762,
            0.9802412986755371,
            0.9957486391067505,
            0.9941068887710571,
            0.9966998100280762,
            0.9798511862754822,
            0.9966998100280762,
            0.9960570931434631,
            0.99504554271698,
            0.9966998100280762,
            0.9958270192146301,
            0.9955538511276245,
            0.9959774017333984,
            0.9958569407463074,
            0.9938090443611145,
            0.9966998100280762,
            0.9959774017333984
        ]
    },
    "HumanEval/83": {
        "similarity": 0.9951944947242737,
        "body": "if n == 1:\n    return 2\nelse:\n    return (9 ** (n - 1)) + 2 * (10 ** (n - 1))",
        "result": "failed: 'return' outside function (<string>, line 8)",
        "similarities": [
            0.9937188029289246,
            0.9939643740653992,
            0.9935757517814636,
            0.9947218894958496,
            0.9934656023979187,
            0.9921459555625916,
            0.9945581555366516,
            0.9937723875045776,
            0.9940654635429382,
            0.9939333200454712,
            0.9937917590141296,
            0.9951944947242737,
            0.9937917590141296,
            0.9947568774223328,
            0.9861611723899841,
            0.9951304197311401,
            0.9858849048614502,
            0.9935757517814636,
            0.9927626252174377,
            0.9935757517814636
        ]
    },
    "HumanEval/84": {
        "similarity": 0.9962161183357239,
        "body": "    return bin(sum(int(digit) for digit in str(bin(N))[2:]))[2:]",
        "result": "failed: Error",
        "similarities": [
            0.9945458173751831,
            0.9961531758308411,
            0.9959809184074402,
            0.995918869972229,
            0.9946470856666565,
            0.9917534589767456,
            0.9917534589767456,
            0.9959150552749634,
            0.9959809184074402,
            0.9959150552749634,
            0.9917535185813904,
            0.9959809184074402,
            0.9959809184074402,
            0.991503894329071,
            0.9917534589767456,
            0.9962161183357239,
            0.9916088581085205,
            0.9962161183357239,
            0.9946470856666565,
            0.9959809184074402
        ]
    },
    "HumanEval/85": {
        "similarity": 0.9950976967811584,
        "body": "    return sum(lst[i] for i in range(1, len(lst), 2) if lst[i] % 2 == 0)",
        "result": "passed",
        "similarities": [
            0.9887401461601257,
            0.9935552477836609,
            0.991882860660553,
            0.9899176359176636,
            0.9918829202651978,
            0.9950976371765137,
            0.9950976371765137,
            0.9950976371765137,
            0.9889793395996094,
            0.9950976371765137,
            0.9950976371765137,
            0.9906569123268127,
            0.9950976967811584,
            0.9905454516410828,
            0.9905454516410828,
            0.9905454516410828,
            0.9905454516410828,
            0.9950976371765137,
            0.9950976371765137,
            0.9887401461601257
        ]
    },
    "HumanEval/86": {
        "similarity": 0.9995450377464294,
        "body": "    return ' '.join(''.join(sorted(w)) for w in s.split())",
        "result": "passed",
        "similarities": [
            0.9995450377464294,
            0.9995036721229553,
            0.9995036721229553,
            0.9985176920890808,
            0.9985992312431335,
            0.9995450377464294,
            0.9985992312431335,
            0.9995036721229553,
            0.9995036721229553,
            0.9995036721229553,
            0.9995450377464294,
            0.9987662434577942,
            0.9985700845718384,
            0.9978957176208496,
            0.9995450377464294,
            0.9995450377464294,
            0.9995450377464294,
            0.9995036721229553,
            0.9995450377464294,
            0.9995036721229553
        ]
    },
    "HumanEval/87": {
        "similarity": 0.9981399178504944,
        "body": "    return sorted((i, j) for i, row in enumerate(lst) if x in row for j in range(len(row)) if row[j] == x), key=lambda p: (p[0], -p[1]))",
        "result": "failed: invalid syntax (<string>, line 22)",
        "similarities": [
            0.9965840578079224,
            0.9975861310958862,
            0.997287929058075,
            0.9977803826332092,
            0.9959259033203125,
            0.9976907968521118,
            0.9970918297767639,
            0.9965095520019531,
            0.9970833659172058,
            0.997465968132019,
            0.9970566630363464,
            0.9980559349060059,
            0.9964630007743835,
            0.9952407479286194,
            0.9975945353507996,
            0.9964034557342529,
            0.997456431388855,
            0.9973719716072083,
            0.9981399178504944,
            0.9950035810470581
        ]
    },
    "HumanEval/88": {
        "similarity": 0.9914039969444275,
        "body": "    sorted_array = array.copy()\n    if (array[0] + array[-1]) % 2 == 1:\n        sorted_array.sort()\n    else:\n        sorted_array.sort(reverse=True)\n    return sorted_array",
        "result": "failed: list index out of range",
        "similarities": [
            0.9899133443832397,
            0.9899133443832397,
            0.9881754517555237,
            0.9868562817573547,
            0.9845142364501953,
            0.9794664978981018,
            0.9859821796417236,
            0.9790894389152527,
            0.987804114818573,
            0.9860260486602783,
            0.9626641869544983,
            0.9914039969444275,
            0.9873359203338623,
            0.9869248270988464,
            0.9855610728263855,
            0.9892619252204895,
            0.988214910030365,
            0.9790894389152527,
            0.9899133443832397,
            0.9909707903862
        ]
    },
    "HumanEval/89": {
        "similarity": 0.9929191470146179,
        "body": "    result = \"\"\n    for char in s:\n        if char.isalpha():\n            ascii_offset = ord('a') if char.islower() else ord('A')\n            result += chr((ord(char) - ascii_offset + 4) % 26 + ascii_offset)\n        else:\n            result += char\n    return result",
        "result": "passed",
        "similarities": [
            0.9929191470146179,
            0.9916619658470154,
            0.9784360527992249,
            0.9915733337402344,
            0.9769819378852844,
            0.9780048727989197,
            0.9856030344963074,
            0.9920635223388672,
            0.9915932416915894,
            0.9902581572532654,
            0.99032062292099,
            0.9929191470146179,
            0.9669462442398071,
            0.9909613728523254,
            0.9928920269012451,
            0.9918845295906067,
            0.9928920269012451,
            0.9915733337402344,
            0.9928920269012451,
            0.9922951459884644
        ]
    },
    "HumanEval/90": {
        "similarity": 0.9956072568893433,
        "body": "    lst = sorted(set(lst))\n    return None if len(lst) < 2 else lst[1]",
        "result": "passed",
        "similarities": [
            0.9930343627929688,
            0.9956072568893433,
            0.9956072568893433,
            0.9943625926971436,
            0.9935656189918518,
            0.9944123029708862,
            0.9935656189918518,
            0.9879480004310608,
            0.9907939434051514,
            0.9950901865959167,
            0.9889525175094604,
            0.9952641725540161,
            0.9939422607421875,
            0.995036780834198,
            0.9950901865959167,
            0.990971028804779,
            0.9910061359405518,
            0.9948726296424866,
            0.9944123029708862,
            0.9935656189918518
        ]
    },
    "HumanEval/91": {
        "similarity": 0.9961628317832947,
        "body": "    return sum(sentence.startswith('I') for sentence in S.split('. ') + S.split('? ') + S.split('! '))",
        "result": "failed: Test 2",
        "similarities": [
            0.9946873188018799,
            0.9889030456542969,
            0.9952695965766907,
            0.9853873252868652,
            0.9948888421058655,
            0.9948888421058655,
            0.9957300424575806,
            0.9946906566619873,
            0.9893319010734558,
            0.9953938722610474,
            0.9908290505409241,
            0.9950987100601196,
            0.9953823089599609,
            0.9946873188018799,
            0.9945476055145264,
            0.9957200884819031,
            0.9961628317832947,
            0.9950987100601196,
            0.9950162172317505,
            0.9961628317832947
        ]
    },
    "HumanEval/92": {
        "similarity": 0.9935764670372009,
        "body": "if isinstance(x, int) and isinstance(y, int) and isinstance(z, int):\n    return x + y == z or y + z == x or z + x == y\nelse:\n    return False",
        "result": "failed: 'return' outside function (<string>, line 21)",
        "similarities": [
            0.9930464029312134,
            0.9915032982826233,
            0.9928158521652222,
            0.9928158521652222,
            0.9907634258270264,
            0.9928732514381409,
            0.9905387759208679,
            0.9935568571090698,
            0.9798897504806519,
            0.9890096783638,
            0.9928158521652222,
            0.9897413849830627,
            0.9928158521652222,
            0.9904805421829224,
            0.9888617992401123,
            0.9918789267539978,
            0.9905387759208679,
            0.9935764670372009,
            0.9906548857688904,
            0.9901595115661621
        ]
    },
    "HumanEval/93": {
        "similarity": 0.9966395497322083,
        "body": "    vowels = 'aeiou'\n    encoded_msg = ''\n    for char in message:\n        if char.isalpha():\n            if char.lower() in vowels:\n                new_char = chr((ord(char) - ord('a') + 2) % 26 + ord('a'))\n            else:\n                new_char = char.swapcase()\n            encoded_msg += new_char\n        else:\n            encoded_msg += char\n    return encoded_msg",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9951999187469482,
            0.9948154091835022,
            0.9957143664360046,
            0.9966395497322083,
            0.9792032837867737,
            0.994961678981781,
            0.9945189952850342,
            0.9955263733863831,
            0.9947890043258667,
            0.9964017271995544,
            0.9949327111244202,
            0.9966176748275757,
            0.9872194528579712,
            0.9963634014129639,
            0.9925892353057861,
            0.9959754943847656,
            0.9962370991706848,
            0.9947511553764343,
            0.9959712624549866,
            0.9963974356651306
        ]
    },
    "HumanEval/94": {
        "similarity": 0.999176025390625,
        "body": "        if n < 2:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    primes = [x for x in lst if is_prime(x)]\n    largest_prime = max(primes) if primes else 0\n    return sum(int(digit) for digit in str(largest_prime))",
        "result": "failed: unexpected indent (<string>, line 15)",
        "similarities": [
            0.9991623759269714,
            0.999120831489563,
            0.9991682171821594,
            0.9989716410636902,
            0.9987138509750366,
            0.9986300468444824,
            0.9991623759269714,
            0.999176025390625,
            0.9982053637504578,
            0.9991623759269714,
            0.9991328716278076,
            0.9971859455108643,
            0.9984012246131897,
            0.9991328716278076,
            0.9989716410636902,
            0.999008297920227,
            0.9951843619346619,
            0.9991623759269714,
            0.9991328716278076,
            0.9989780783653259
        ]
    },
    "HumanEval/95": {
        "similarity": 0.9936812520027161,
        "body": "if not dict or all(isinstance(k, str) and k.islower() for k in dict.keys()) or all(isinstance(k, str) and k.isupper() for k in dict.keys()):\n    return True\nreturn False",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9929571747779846,
            0.9904523491859436,
            0.9876747131347656,
            0.9921333193778992,
            0.9925023317337036,
            0.9920009970664978,
            0.9816873669624329,
            0.9926013946533203,
            0.9904434084892273,
            0.990443766117096,
            0.987167239189148,
            0.9936812520027161,
            0.9848620891571045,
            0.9904434084892273,
            0.9909189939498901,
            0.9930857419967651,
            0.9844266176223755,
            0.9911203980445862,
            0.9924166798591614,
            0.9933895468711853
        ]
    },
    "HumanEval/96": {
        "similarity": 0.9986934661865234,
        "body": "    if num < 2:\n        return False\n    for i in range(2, int(num**0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n\n    primes = []\n    for num in range(2, n):\n        if is_prime(num):\n            primes.append(num)\n    return primes",
        "result": "failed: local variable 'num' referenced before assignment",
        "similarities": [
            0.9982250928878784,
            0.9970893859863281,
            0.9968498945236206,
            0.9986401796340942,
            0.9970009326934814,
            0.9985262155532837,
            0.9976503252983093,
            0.9978213906288147,
            0.9986934661865234,
            0.9986148476600647,
            0.9977355599403381,
            0.9982811808586121,
            0.9984347820281982,
            0.9971245527267456,
            0.9984428882598877,
            0.9975854754447937,
            0.9978222250938416,
            0.9976938366889954,
            0.9986878633499146,
            0.998677134513855
        ]
    },
    "HumanEval/97": {
        "similarity": 0.9939173460006714,
        "body": "    return abs(a % 10 * b % 10)",
        "result": "failed: First test error: 6",
        "similarities": [
            0.9910749197006226,
            0.9930791258811951,
            0.9910749197006226,
            0.9910749197006226,
            0.9930791258811951,
            0.9939173460006714,
            0.9910749197006226,
            0.9939173460006714,
            0.9930791258811951,
            0.9910749197006226,
            0.9833114147186279,
            0.9930791258811951,
            0.9939173460006714,
            0.9930791258811951,
            0.9809337258338928,
            0.9562358856201172,
            0.9910749197006226,
            0.9910749197006226,
            0.9910749197006226,
            0.9910749197006226
        ]
    },
    "HumanEval/98": {
        "similarity": 0.9975716471672058,
        "body": "return sum(1 for i, c in enumerate(s) if i % 2 == 0 and c.isupper() and c in 'AEIOU')",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9975716471672058,
            0.9962935447692871,
            0.9962935447692871,
            0.9969393014907837,
            0.9975716471672058,
            0.9975716471672058,
            0.9957020282745361,
            0.9965899586677551,
            0.9975716471672058,
            0.9957020282745361,
            0.9963166117668152,
            0.9975716471672058,
            0.9975716471672058,
            0.9903837442398071,
            0.9955356121063232,
            0.9957020282745361,
            0.9929239153862,
            0.9936169981956482,
            0.9969393014907837,
            0.9975716471672058
        ]
    },
    "HumanEval/99": {
        "similarity": 0.993880033493042,
        "body": "    num = float(value)\n    if abs(num) > 0.5 or int(num) != num:\n        return round(num)\n    else:\n        return int(num)",
        "result": "failed: Test 2",
        "similarities": [
            0.9932342171669006,
            0.9920428395271301,
            0.9932342171669006,
            0.988996684551239,
            0.993880033493042,
            0.9881846904754639,
            0.9754013419151306,
            0.9929538369178772,
            0.9899742007255554,
            0.9930820465087891,
            0.9913504719734192,
            0.9930839538574219,
            0.992012619972229,
            0.9890855550765991,
            0.9930839538574219,
            0.9732629060745239,
            0.9925538301467896,
            0.9930839538574219,
            0.9893423318862915,
            0.9930839538574219
        ]
    },
    "HumanEval/100": {
        "similarity": 0.9974180459976196,
        "body": "    pile = []\n    current = n\n    while len(pile) < n:\n        pile.append(current)\n        current += (2 if current % 2 == 0 else 1)\n    return pile",
        "result": "failed: Test 3",
        "similarities": [
            0.9969316124916077,
            0.9968587160110474,
            0.9971832633018494,
            0.9973291158676147,
            0.9969948530197144,
            0.9972158074378967,
            0.9969226717948914,
            0.9973260164260864,
            0.9973600506782532,
            0.9973260164260864,
            0.9962667226791382,
            0.9970144033432007,
            0.9914544820785522,
            0.9944585561752319,
            0.9973303079605103,
            0.9966012835502625,
            0.9849781394004822,
            0.997275710105896,
            0.9972911477088928,
            0.9974180459976196
        ]
    },
    "HumanEval/101": {
        "similarity": 0.9959222674369812,
        "body": "return s.split(',') if ',' in s else s.split()",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9958396553993225,
            0.9959222674369812,
            0.9959222674369812,
            0.9957617521286011,
            0.9951013326644897,
            0.9951013326644897,
            0.9898021221160889,
            0.9958396553993225,
            0.9958396553993225,
            0.9957617521286011,
            0.9855418801307678,
            0.9957617521286011,
            0.9957616925239563,
            0.9959222674369812,
            0.9958396553993225,
            0.9958396553993225,
            0.9959222674369812,
            0.9937310814857483,
            0.9951013326644897,
            0.985541820526123
        ]
    },
    "HumanEval/102": {
        "similarity": 0.9966044425964355,
        "body": "for num in range(y, x-1, -1):\n    if num % 2 == 0:\n        return num\nreturn -1",
        "result": "failed: 'return' outside function (<string>, line 13)",
        "similarities": [
            0.9966044425964355,
            0.9963469505310059,
            0.9963105916976929,
            0.9963469505310059,
            0.9943508505821228,
            0.9930357933044434,
            0.9963105916976929,
            0.989650309085846,
            0.9897676110267639,
            0.9924360513687134,
            0.9964094758033752,
            0.9907107949256897,
            0.9947433471679688,
            0.9953492879867554,
            0.9963469505310059,
            0.9965339303016663,
            0.9957250356674194,
            0.9903780221939087,
            0.9965488910675049,
            0.9963469505310059
        ]
    },
    "HumanEval/103": {
        "similarity": 0.9982379078865051,
        "body": "if n > m:\n    return -1\navg = round((sum(range(n, m + 1)) / (m - n + 1)))\nreturn bin(avg)[2:]",
        "result": "failed: 'return' outside function (<string>, line 14)",
        "similarities": [
            0.991280734539032,
            0.9968556761741638,
            0.9972978830337524,
            0.9982379078865051,
            0.9956161379814148,
            0.9982379078865051,
            0.9982379078865051,
            0.9976957440376282,
            0.9956161379814148,
            0.9982379078865051,
            0.9981086254119873,
            0.9972978830337524,
            0.9967290163040161,
            0.9970619082450867,
            0.9952898621559143,
            0.9981086254119873,
            0.9981087446212769,
            0.9981964826583862,
            0.997634768486023,
            0.9976957440376282
        ]
    },
    "HumanEval/104": {
        "similarity": 0.9961374998092651,
        "body": "    return sorted(set(num for num in x if not any(int(digit) % 2 == 0 for digit in str(num))))",
        "result": "passed",
        "similarities": [
            0.9891553521156311,
            0.9960986971855164,
            0.9861345887184143,
            0.9940817952156067,
            0.995985209941864,
            0.9941157102584839,
            0.9911832213401794,
            0.9961374998092651,
            0.996057391166687,
            0.9936731457710266,
            0.9938392639160156,
            0.9935997724533081,
            0.9961374998092651,
            0.9849931597709656,
            0.9915233254432678,
            0.9957340955734253,
            0.9936731457710266,
            0.9957227110862732,
            0.996057391166687,
            0.995985209941864
        ]
    },
    "HumanEval/105": {
        "similarity": 0.9964134097099304,
        "body": "    names = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    arr = sorted(x for x in arr if 1 <= x <= 9)\n    return [names[x-1] for x in arr[::-1]]",
        "result": "passed",
        "similarities": [
            0.9962339997291565,
            0.9953863024711609,
            0.9962765574455261,
            0.992832362651825,
            0.9953863024711609,
            0.9957300424575806,
            0.9938980937004089,
            0.9953565001487732,
            0.9933487772941589,
            0.9959895610809326,
            0.9946467876434326,
            0.9941864013671875,
            0.9951422810554504,
            0.9941916465759277,
            0.9945820569992065,
            0.9953124523162842,
            0.9964134097099304,
            0.9916020631790161,
            0.9873363375663757,
            0.9907663464546204
        ]
    },
    "HumanEval/106": {
        "similarity": 0.9952219724655151,
        "body": "    return [(factorial(i) if i % 2 == 0 else sum(range(1, i + 1))) for i in range(1, n + 1)]",
        "result": "failed: name 'factorial' is not defined",
        "similarities": [
            0.9883189797401428,
            0.9816907644271851,
            0.9921457171440125,
            0.9950152039527893,
            0.9950063824653625,
            0.99168860912323,
            0.9899645447731018,
            0.9938997030258179,
            0.9951155781745911,
            0.9950063824653625,
            0.9950063824653625,
            0.9950063824653625,
            0.9946256875991821,
            0.9872289896011353,
            0.9949954152107239,
            0.9952219724655151,
            0.9950152039527893,
            0.9943383932113647,
            0.9951738119125366,
            0.9735666513442993
        ]
    },
    "HumanEval/107": {
        "similarity": 0.9963178038597107,
        "body": "    evens = odds = 0\n    for i in range(1, n + 1):\n        if str(i) == str(i)[::-1]:\n            evens += 1 if i % 2 == 0 else odds += 1\n    return (evens, odds)",
        "result": "failed: invalid syntax (<string>, line 28)",
        "similarities": [
            0.995766818523407,
            0.9897215962409973,
            0.9959216713905334,
            0.9952097535133362,
            0.9959216713905334,
            0.9963178038597107,
            0.9940078258514404,
            0.9949489235877991,
            0.9926080107688904,
            0.9912143349647522,
            0.99602210521698,
            0.9959413409233093,
            0.9954425692558289,
            0.9942511320114136,
            0.9952121376991272,
            0.9903069734573364,
            0.9898649454116821,
            0.9961933493614197,
            0.9959216713905334,
            0.9946545362472534
        ]
    },
    "HumanEval/108": {
        "similarity": 0.9940502643585205,
        "body": "    return sum(abs(int(i)) for i in str(num) for num in arr if sum(int(i)) > 0)",
        "result": "failed: name 'num' is not defined",
        "similarities": [
            0.9929823875427246,
            0.9865178465843201,
            0.9900448322296143,
            0.9930889010429382,
            0.991949200630188,
            0.9915277361869812,
            0.9924278259277344,
            0.9940502643585205,
            0.9916197061538696,
            0.9827111959457397,
            0.9929823875427246,
            0.9930889010429382,
            0.9840856790542603,
            0.9930889010429382,
            0.9834113121032715,
            0.9923390746116638,
            0.9914712309837341,
            0.9916197061538696,
            0.9874502420425415,
            0.987453043460846
        ]
    },
    "HumanEval/109": {
        "similarity": 0.993256151676178,
        "body": "    return arr == sorted(arr) or arr == [arr[-1]] + arr[:-1]",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9917333722114563,
            0.9913948774337769,
            0.9917944073677063,
            0.9914464354515076,
            0.9917333722114563,
            0.9929019808769226,
            0.9835222363471985,
            0.9901542663574219,
            0.9926122426986694,
            0.9917333722114563,
            0.9912006855010986,
            0.9732425212860107,
            0.9913895130157471,
            0.9875510334968567,
            0.993256151676178,
            0.9916189312934875,
            0.9806126356124878,
            0.9924900531768799,
            0.9910424947738647,
            0.9923186898231506
        ]
    },
    "HumanEval/110": {
        "similarity": 0.9950620532035828,
        "body": "    for i in range(len(lst1)):\n        if lst1[i] % 2 != 0 and lst2 and lst2[-1] % 2 == 0:\n            lst1[i], lst2[-1] = lst2[-1], lst1[i]\n            break\n    return \"YES\" if all(i % 2 == 0 for i in lst1) else \"NO\"",
        "result": "failed: ",
        "similarities": [
            0.9927766919136047,
            0.9898273944854736,
            0.9921873211860657,
            0.988419771194458,
            0.9911918640136719,
            0.9941636919975281,
            0.9919037222862244,
            0.9912276864051819,
            0.9907962679862976,
            0.9950620532035828,
            0.9949641227722168,
            0.9949641227722168,
            0.9949641227722168,
            0.9918845295906067,
            0.9904811382293701,
            0.9931507110595703,
            0.9934005737304688,
            0.9935680031776428,
            0.9949641227722168,
            0.9939782023429871
        ]
    },
    "HumanEval/111": {
        "similarity": 0.9964147806167603,
        "body": "    counts = {}\n    for letter in test.split():\n        counts[letter] = counts.get(letter, 0) + 1\n    max_count = max(counts.values()) if counts else 0\n    return {k: v for k, v in counts.items() if v == max_count}",
        "result": "passed",
        "similarities": [
            0.9956481456756592,
            0.9936646223068237,
            0.9960742592811584,
            0.996042788028717,
            0.9962801933288574,
            0.9959428906440735,
            0.9958833456039429,
            0.9899809956550598,
            0.9964147806167603,
            0.9960638284683228,
            0.9950399994850159,
            0.9952945709228516,
            0.9874297976493835,
            0.9896609783172607,
            0.9888044595718384,
            0.9960890412330627,
            0.9959287047386169,
            0.9964147806167603,
            0.9950401186943054,
            0.9959287047386169
        ]
    },
    "HumanEval/112": {
        "similarity": 0.997787594795227,
        "body": "    res = ''.join([ch for ch in s if ch not in c])\n    return (res, res == res[::-1])",
        "result": "passed",
        "similarities": [
            0.9977760314941406,
            0.9975423216819763,
            0.9961384534835815,
            0.9977409243583679,
            0.9977760314941406,
            0.9977409243583679,
            0.9977760314941406,
            0.997787594795227,
            0.996536374092102,
            0.9956021904945374,
            0.9971115589141846,
            0.9970169067382812,
            0.9960864186286926,
            0.9977760314941406,
            0.9955806732177734,
            0.9975422620773315,
            0.9889684915542603,
            0.9966826438903809,
            0.9975423216819763,
            0.9974413514137268
        ]
    },
    "HumanEval/113": {
        "similarity": 0.9951732158660889,
        "body": "    return [\"the number of odd elements {}n the str{}ng {} of the {}nput.\".format(sum(1 for c in s if int(c) % 2), i+1, i+1, i+1) for i, s in enumerate(lst)]",
        "result": "failed: Test 1",
        "similarities": [
            0.9951362609863281,
            0.9867650866508484,
            0.9936212301254272,
            0.9951732158660889,
            0.9927168488502502,
            0.9936212301254272,
            0.9944100975990295,
            0.9907142519950867,
            0.9948071837425232,
            0.9930205345153809,
            0.9927905201911926,
            0.989775538444519,
            0.9951730966567993,
            0.992562472820282,
            0.99465411901474,
            0.9929426312446594,
            0.9923797249794006,
            0.9951732158660889,
            0.9928245544433594,
            0.9866520762443542
        ]
    },
    "HumanEval/114": {
        "similarity": 0.9957761168479919,
        "body": "    if not nums: return float('inf')\n    cur_sum = min_sum = nums[0]\n    for num in nums[1:]:\n        cur_sum = min(num, cur_sum + num)\n        min_sum = min(min_sum, cur_sum)\n    return min_sum",
        "result": "passed",
        "similarities": [
            0.9957761168479919,
            0.9946017861366272,
            0.9946566224098206,
            0.9949009418487549,
            0.9943407773971558,
            0.9877938032150269,
            0.9776643514633179,
            0.9948216676712036,
            0.9951103925704956,
            0.9954150319099426,
            0.9954444766044617,
            0.9946405291557312,
            0.9938884377479553,
            0.994190514087677,
            0.9949804544448853,
            0.994877278804779,
            0.9940780997276306,
            0.9952197670936584,
            0.9947706460952759,
            0.9953957796096802
        ]
    },
    "HumanEval/115": {
        "similarity": 0.9972532391548157,
        "body": "    return sum(math.ceil(sum(row) / capacity) for row in grid)",
        "result": "passed",
        "similarities": [
            0.9972532391548157,
            0.9955441355705261,
            0.9972532391548157,
            0.9972532391548157,
            0.9969042539596558,
            0.9904540181159973,
            0.9969042539596558,
            0.9920600056648254,
            0.9972532391548157,
            0.9969042539596558,
            0.9972532391548157,
            0.9969042539596558,
            0.9972532391548157,
            0.9972532391548157,
            0.9969042539596558,
            0.9969042539596558,
            0.9920600056648254,
            0.9969042539596558,
            0.9920600056648254,
            0.9969042539596558
        ]
    },
    "HumanEval/116": {
        "similarity": 0.9969568848609924,
        "body": "    return sorted(arr, key=lambda x: (bin(x).count('1'), x))",
        "result": "passed",
        "similarities": [
            0.9930871725082397,
            0.9969568848609924,
            0.9959285259246826,
            0.9959285259246826,
            0.9969568848609924,
            0.9794825315475464,
            0.9959285259246826,
            0.9959285259246826,
            0.9924054741859436,
            0.9969568848609924,
            0.9969568848609924,
            0.9969568848609924,
            0.9969568848609924,
            0.9969568848609924,
            0.9969568848609924,
            0.9923299551010132,
            0.9969568848609924,
            0.9922768473625183,
            0.9969568848609924,
            0.9959285259246826
        ]
    },
    "HumanEval/117": {
        "similarity": 0.9983873963356018,
        "body": "    consonants = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n    words = s.split()\n    result = [word for word in words if sum(1 for c in word if c in consonants) == n]\n    return result",
        "result": "passed",
        "similarities": [
            0.9956213235855103,
            0.9980446696281433,
            0.9983072876930237,
            0.9937850832939148,
            0.9981159567832947,
            0.9923246502876282,
            0.9980446696281433,
            0.9983078837394714,
            0.9980818033218384,
            0.9954637289047241,
            0.9980446696281433,
            0.9955345988273621,
            0.9980446696281433,
            0.9983873963356018,
            0.9981160759925842,
            0.9981837868690491,
            0.9983807802200317,
            0.9981294274330139,
            0.9983873963356018,
            0.9983873963356018
        ]
    },
    "HumanEval/118": {
        "similarity": 0.9965180158615112,
        "body": "    vowels = 'aeiouAEIOU'\n    for i in range(len(word)-2, 0, -1):\n        if word[i] in vowels and word[i-1] not in vowels and word[i+1] not in vowels:\n            return word[i]\n    return \"\"",
        "result": "passed",
        "similarities": [
            0.9959678649902344,
            0.9960790872573853,
            0.9964898824691772,
            0.9964649081230164,
            0.9943102598190308,
            0.9961710572242737,
            0.9941799640655518,
            0.9964649081230164,
            0.9965180158615112,
            0.9964649081230164,
            0.9960859417915344,
            0.9965180158615112,
            0.9933578372001648,
            0.9945505857467651,
            0.9621638059616089,
            0.9955532550811768,
            0.9963409304618835,
            0.9963585734367371,
            0.9951850771903992,
            0.9963585734367371
        ]
    },
    "HumanEval/119": {
        "similarity": 0.9952777028083801,
        "body": "    open_count = 0\n    for char in lst[0] + lst[1]:\n        if char == '(':\n            open_count += 1\n        elif char == ')':\n            open_count -= 1\n            if open_count < 0:\n                return 'No'\n    return 'Yes' if open_count == 0 else 'No'",
        "result": "failed: ",
        "similarities": [
            0.9918428063392639,
            0.9940553307533264,
            0.9952777028083801,
            0.9946897625923157,
            0.9942088723182678,
            0.9948055148124695,
            0.9887484312057495,
            0.994918942451477,
            0.994713544845581,
            0.9944670796394348,
            0.9913918375968933,
            0.9931114912033081,
            0.9915280938148499,
            0.9859805703163147,
            0.9891896843910217,
            0.9939329028129578,
            0.9952777028083801,
            0.9950209259986877,
            0.9927300810813904,
            0.9948411583900452
        ]
    },
    "HumanEval/120": {
        "similarity": 0.9947518706321716,
        "body": "    return sorted(arr, reverse=True)[:k]",
        "result": "failed: ",
        "similarities": [
            0.9947518706321716,
            0.9947518706321716,
            0.9947518706321716,
            0.9933660626411438,
            0.9933660626411438,
            0.9871507287025452,
            0.9627188444137573,
            0.9935041666030884,
            0.9947518706321716,
            0.9933660626411438,
            0.9905062317848206,
            0.9947518706321716,
            0.9947518706321716,
            0.9947518706321716,
            0.9947518706321716,
            0.9871507287025452,
            0.9947518706321716,
            0.988544762134552,
            0.9947518706321716,
            0.9947518706321716
        ]
    },
    "HumanEval/121": {
        "similarity": 0.9965463280677795,
        "body": "return sum(lst[i] for i in range(0, len(lst), 2) if lst[i] % 2 != 0)",
        "result": "failed: 'return' outside function (<string>, line 11)",
        "similarities": [
            0.9956808686256409,
            0.9956808686256409,
            0.9953619241714478,
            0.9962172508239746,
            0.9962459206581116,
            0.9962459206581116,
            0.9962459206581116,
            0.9965463280677795,
            0.9962459206581116,
            0.9965463280677795,
            0.9956808686256409,
            0.9965463280677795,
            0.9962459206581116,
            0.9946272969245911,
            0.9965463280677795,
            0.9962459206581116,
            0.9953619241714478,
            0.9965463280677795,
            0.9962459206581116,
            0.9946272969245911
        ]
    },
    "HumanEval/122": {
        "similarity": 0.9951388835906982,
        "body": "    total = sum(x for x in arr[:k] if abs(x) < 10**3)\n    return total",
        "result": "failed: ",
        "similarities": [
            0.9920293688774109,
            0.9949451088905334,
            0.9925896525382996,
            0.9948961138725281,
            0.9933817982673645,
            0.9948246479034424,
            0.9935653209686279,
            0.9935653209686279,
            0.9921053051948547,
            0.9826387166976929,
            0.9946359395980835,
            0.9948112964630127,
            0.9950848817825317,
            0.9948246479034424,
            0.9867434501647949,
            0.9948246479034424,
            0.9949451088905334,
            0.9951388835906982,
            0.9845613241195679,
            0.9943082928657532
        ]
    },
    "HumanEval/123": {
        "similarity": 0.9985498189926147,
        "body": "    seq = []\n    while n != 1:\n        if n % 2 == 1:\n            seq.append(n)\n        n = n // 2 if n % 2 == 0 else 3 * n + 1\n    return sorted(seq)",
        "result": "failed: ",
        "similarities": [
            0.9974732995033264,
            0.9983608722686768,
            0.9982433319091797,
            0.9966061115264893,
            0.9975137114524841,
            0.9985498189926147,
            0.9982282519340515,
            0.9981966614723206,
            0.9963342547416687,
            0.9975072145462036,
            0.9984717965126038,
            0.9984717965126038,
            0.9981614947319031,
            0.995777428150177,
            0.9985402822494507,
            0.9978193044662476,
            0.9977666139602661,
            0.9983420968055725,
            0.9961667656898499,
            0.9980898499488831
        ]
    },
    "HumanEval/124": {
        "similarity": 0.994491696357727,
        "body": "import re\n    if not date or len(date) != 10 or '-' not in date or not re.match(r'^\\d{2}-\\d{2}-\\d{4}$', date):\n        return False\n    day, month, year = map(int, date.split('-'))\n    if month < 1 or month > 12:\n        return False\n    if month in (1, 3, 5, 7, 8, 10, 12) and not(1 <= day <= 31):\n        return False\n    if month in (4, 6, 9, 11) and not(1 <= day <= 30):\n        return False\n    if month == 2 and not(1 <= day <= 29):\n        return False\n    return True",
        "result": "failed: unexpected indent (<string>, line 23)",
        "similarities": [
            0.9942384362220764,
            0.9922770261764526,
            0.9898603558540344,
            0.990790605545044,
            0.9938462972640991,
            0.9905769228935242,
            0.9919542074203491,
            0.994491696357727,
            0.9921426177024841,
            0.9879311323165894,
            0.9920421242713928,
            0.9849035143852234,
            0.991815984249115,
            0.9921186566352844,
            0.9929478168487549,
            0.9936974048614502,
            0.9910922646522522,
            0.9905505180358887,
            0.9934843182563782,
            0.9940195679664612
        ]
    },
    "HumanEval/125": {
        "similarity": 0.9915897846221924,
        "body": "if ',' in txt:\n    return txt.split(',')\nelif ' ' in txt:\n    return txt.split()\nelse:\n    return sum(1 for c in txt if ord(c) % 2 == 1)",
        "result": "failed: 'return' outside function (<string>, line 13)",
        "similarities": [
            0.990996241569519,
            0.9887169599533081,
            0.9709233045578003,
            0.9887393116950989,
            0.9891566038131714,
            0.9895473122596741,
            0.9899975657463074,
            0.9907254576683044,
            0.9915897846221924,
            0.9905317425727844,
            0.9892529845237732,
            0.9915897846221924,
            0.9887008666992188,
            0.9896997213363647,
            0.9904491901397705,
            0.9893810749053955,
            0.9880306720733643,
            0.990996241569519,
            0.9806044697761536,
            0.9902974367141724
        ]
    },
    "HumanEval/126": {
        "similarity": 0.9932164549827576,
        "body": "    return lst == sorted(lst) and len(set(lst)) == len(lst)",
        "result": "failed: This prints if this assert fails 7 (good for debugging!)",
        "similarities": [
            0.9914866089820862,
            0.9930631518363953,
            0.9929684996604919,
            0.979353666305542,
            0.9914866089820862,
            0.9914866089820862,
            0.9927359223365784,
            0.9914866089820862,
            0.979353666305542,
            0.9930631518363953,
            0.9930631518363953,
            0.9914866089820862,
            0.9821550250053406,
            0.9844729900360107,
            0.9914866089820862,
            0.9932164549827576,
            0.9906036257743835,
            0.9870537519454956,
            0.9930631518363953,
            0.9919885396957397
        ]
    },
    "HumanEval/127": {
        "similarity": 0.9984961152076721,
        "body": "    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n    start = max(interval1[0], interval2[0])\n    end = min(interval1[1], interval2[1])\n\n    if start <= end:\n        length = end - start + 1\n        return \"YES\" if is_prime(length) else \"NO\"\n    else:\n        return \"NO\"",
        "result": "failed: name 'n' is not defined",
        "similarities": [
            0.9975717663764954,
            0.9983561635017395,
            0.9984572529792786,
            0.9981729388237,
            0.9984700083732605,
            0.9977018237113953,
            0.997583270072937,
            0.9984959959983826,
            0.9984961152076721,
            0.9980813264846802,
            0.9956739544868469,
            0.9984897971153259,
            0.9981729388237,
            0.9967859983444214,
            0.9975873231887817,
            0.9983394145965576,
            0.9975807666778564,
            0.9982757568359375,
            0.9975680112838745,
            0.9977813363075256
        ]
    },
    "HumanEval/128": {
        "similarity": 0.9956173300743103,
        "body": "if not arr:\n    return None\nsign_product = 1\nmag_sum = 0\nfor num in arr:\n    if num != 0:\n        sign_product *= (1 if num > 0 else -1)\n        mag_sum += abs(num)\nreturn sign_product * mag_sum",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9956173300743103,
            0.9941135048866272,
            0.9651637077331543,
            0.9935750365257263,
            0.9940747022628784,
            0.9952009320259094,
            0.9945480823516846,
            0.9946030378341675,
            0.9950204491615295,
            0.9947339296340942,
            0.9941809773445129,
            0.9955393075942993,
            0.9950204491615295,
            0.9948660135269165,
            0.9934490919113159,
            0.9955400228500366,
            0.9930292367935181,
            0.9910675883293152,
            0.9939205646514893,
            0.9951047301292419
        ]
    },
    "HumanEval/129": {
        "similarity": 0.9922103881835938,
        "body": "    n = len(grid)\n    moves = [(0, -1), (0, 1), (-1, 0), (1, 0)]\n    visited = [[False] * n for _ in range(n)]\n    path = []\n\n        if steps == k:\n            return True\n        visited[x][y] = True\n        path.append(grid[x][y])\n        for dx, dy in moves:\n            nx, ny = x + dx, y + dy\n            if 0 <= nx < n and 0 <= ny < n and not visited[nx][ny]:\n                if dfs(nx, ny, steps + 1):\n                    return True\n        path.pop()\n        visited[x][y] = False\n\n    for i in range(n):\n        for j in range(n):\n            if dfs(i, j, 0):\n                break\n    return sorted(path)",
        "result": "failed: unexpected indent (<string>, line 37)",
        "similarities": [
            0.9907007813453674,
            0.9916049838066101,
            0.9921945333480835,
            0.9922103881835938,
            0.9907251000404358,
            0.9915974140167236,
            0.9914737343788147,
            0.987899899482727,
            0.9911926984786987,
            0.9914892911911011,
            0.9913679361343384,
            0.991585373878479,
            0.9918975830078125,
            0.991141676902771,
            0.9921632409095764,
            0.9890186786651611,
            0.9918249845504761,
            0.9014979004859924,
            0.9891690611839294,
            0.9920719861984253
        ]
    },
    "HumanEval/130": {
        "similarity": 0.9974198937416077,
        "body": "    if n == 0:\n        return []\n    elif n == 1:\n        return [3]\n    else:\n        trib = [3]\n        for i in range(2, n + 1):\n            trib.append(trib[-1] + trib[-2] + (trib[-1] * (i % 2 == 0) or trib[-2] + trib[-3]))\n        return trib[:n+1]",
        "result": "failed: list index out of range",
        "similarities": [
            0.9974198937416077,
            0.9971185326576233,
            0.9955840110778809,
            0.9970835447311401,
            0.9969636797904968,
            0.9932397603988647,
            0.9963175058364868,
            0.9955534934997559,
            0.9953405261039734,
            0.9968227744102478,
            0.9960313439369202,
            0.9959957599639893,
            0.9943199157714844,
            0.9959407448768616,
            0.9964467287063599,
            0.9963785409927368,
            0.9957279562950134,
            0.9953407645225525,
            0.9973586201667786,
            0.9947864413261414
        ]
    },
    "HumanEval/131": {
        "similarity": 0.9978752136230469,
        "body": "    product = 1\n    for digit in str(n):\n        if int(digit) % 2 != 0:\n            product *= int(digit)\n    return product",
        "result": "failed: ",
        "similarities": [
            0.997589647769928,
            0.997589647769928,
            0.9978752136230469,
            0.997589647769928,
            0.9978752136230469,
            0.9978752136230469,
            0.997589647769928,
            0.997589647769928,
            0.9975895285606384,
            0.9977898001670837,
            0.9978752136230469,
            0.9975895285606384,
            0.997589647769928,
            0.9972100853919983,
            0.9978752136230469,
            0.9975312948226929,
            0.9950448870658875,
            0.9949027895927429,
            0.9964238405227661,
            0.9949027895927429
        ]
    },
    "HumanEval/132": {
        "similarity": 0.998611330986023,
        "body": "    count = 0\n    for char in string:\n        if char == '[':\n            count += 1\n        elif char == ']':\n            count -= 1\n            if count < 0:\n                return True\n    return False",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9961057305335999,
            0.998611330986023,
            0.9980056285858154,
            0.9985957741737366,
            0.9981006979942322,
            0.997380793094635,
            0.9973419904708862,
            0.998611330986023,
            0.998216450214386,
            0.998611330986023,
            0.997380793094635,
            0.9970424175262451,
            0.9985520243644714,
            0.9973688721656799,
            0.9972501397132874,
            0.9985975027084351,
            0.998611330986023,
            0.9981316924095154,
            0.9929598569869995,
            0.998611330986023
        ]
    },
    "HumanEval/133": {
        "similarity": 0.9971089959144592,
        "body": "    return sum(int(x) ** 2 for x in lst)",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9966533184051514,
            0.9971089959144592,
            0.9971089959144592,
            0.9936916828155518,
            0.9966533184051514,
            0.9890556335449219,
            0.9966533184051514,
            0.9971089959144592,
            0.9971089959144592,
            0.9971089959144592,
            0.9966533184051514,
            0.9971089959144592,
            0.9966533184051514,
            0.9971089959144592,
            0.9969273805618286,
            0.9963962435722351,
            0.9969273805618286,
            0.989723801612854,
            0.9969856142997742,
            0.9966533184051514
        ]
    },
    "HumanEval/134": {
        "similarity": 0.9958705902099609,
        "body": "if txt and not txt[-1].isspace() and not txt[-1].isalpha():\n    return False\nelse:\n    return True",
        "result": "failed: 'return' outside function (<string>, line 16)",
        "similarities": [
            0.9927500486373901,
            0.9949978590011597,
            0.9949978590011597,
            0.9934036731719971,
            0.9920015931129456,
            0.9920015931129456,
            0.9958218932151794,
            0.9946856498718262,
            0.9927753806114197,
            0.9949978590011597,
            0.9930151700973511,
            0.9907716512680054,
            0.9958705902099609,
            0.9944915771484375,
            0.995400607585907,
            0.9937611818313599,
            0.9877570271492004,
            0.9957429766654968,
            0.9937292337417603,
            0.9957731366157532
        ]
    },
    "HumanEval/135": {
        "similarity": 0.9997742176055908,
        "body": "for i in range(1, len(arr)):\n    if arr[i] < arr[i-1]:\n        return i\nreturn -1",
        "result": "failed: 'return' outside function (<string>, line 14)",
        "similarities": [
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9988731741905212,
            0.9997742176055908,
            0.9983301758766174,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9997742176055908,
            0.9988731741905212,
            0.9997742176055908
        ]
    },
    "HumanEval/136": {
        "similarity": 0.9893751740455627,
        "body": "    negatives = [x for x in lst if x < 0]\n    positives = [x for x in lst if x > 0]\n    return (max(negatives) if negatives else None, min(positives) if positives else None)",
        "result": "passed",
        "similarities": [
            0.9887399077415466,
            0.9885029196739197,
            0.9884486198425293,
            0.9816229939460754,
            0.9889718890190125,
            0.9878020286560059,
            0.9769907593727112,
            0.9872511029243469,
            0.9831724762916565,
            0.9889718890190125,
            0.9889718890190125,
            0.9881079792976379,
            0.9893751740455627,
            0.9889706373214722,
            0.9872511029243469,
            0.9871742725372314,
            0.9889718890190125,
            0.9881080985069275,
            0.9873301982879639,
            0.9893597364425659
        ]
    },
    "HumanEval/137": {
        "similarity": 0.9927177429199219,
        "body": "if isinstance(a, str):\n    a = float(a.replace(',', '.'))\nif isinstance(b, str):\n    b = float(b.replace(',', '.'))\nif a == b:\n    return None\nelif a > b:\n    return max(a, b)\nelse:\n    return min(a, b)",
        "result": "failed: 'return' outside function (<string>, line 19)",
        "similarities": [
            0.9914324879646301,
            0.9908786416053772,
            0.9860036969184875,
            0.9914324879646301,
            0.9851128458976746,
            0.9918178915977478,
            0.9910733103752136,
            0.9912100434303284,
            0.9925987124443054,
            0.9860456585884094,
            0.9925754070281982,
            0.9923584461212158,
            0.9833444356918335,
            0.9842730164527893,
            0.9910605549812317,
            0.9927177429199219,
            0.9916333556175232,
            0.9851618409156799,
            0.9922004342079163,
            0.9918321371078491
        ]
    },
    "HumanEval/138": {
        "similarity": 0.9936627745628357,
        "body": "    return any(i + j + k + l == n for i in range(2, n//4+1, 2) for j in range(i, n//3+1, 2)\n               for k in range(j, n//2+1, 2) for l in range(k, n+1, 2))",
        "result": "passed",
        "similarities": [
            0.9899041056632996,
            0.9892033934593201,
            0.9913402199745178,
            0.988991379737854,
            0.9930781126022339,
            0.9926883578300476,
            0.9927398562431335,
            0.9918139576911926,
            0.9896613955497742,
            0.9910489320755005,
            0.9909792542457581,
            0.9905310273170471,
            0.9893462657928467,
            0.9929124712944031,
            0.9892742037773132,
            0.9936627745628357,
            0.9918259978294373,
            0.9900880455970764,
            0.9908258318901062,
            0.9877315163612366
        ]
    },
    "HumanEval/139": {
        "similarity": 0.9937177896499634,
        "body": "    import math\n    fact = 1\n    for i in range(1, n+1):\n        fact *= math.factorial(i)\n    return fact",
        "result": "passed",
        "similarities": [
            0.9844911694526672,
            0.9929625988006592,
            0.9838650226593018,
            0.99217689037323,
            0.993621826171875,
            0.9927042126655579,
            0.9937177896499634,
            0.9922201037406921,
            0.9838650226593018,
            0.9935387969017029,
            0.9935902953147888,
            0.9931303262710571,
            0.9787688255310059,
            0.970059871673584,
            0.9933104515075684,
            0.9936806559562683,
            0.9930638670921326,
            0.9702070951461792,
            0.9936642050743103,
            0.9929907917976379
        ]
    },
    "HumanEval/140": {
        "similarity": 0.9964766502380371,
        "body": "    return text.replace(' ', '_').replace('__+', '-')",
        "result": "failed: This prints if this assert fails 4 (good for debugging!)",
        "similarities": [
            0.9939962029457092,
            0.9959205985069275,
            0.9652786254882812,
            0.9964346885681152,
            0.995896577835083,
            0.9935262799263,
            0.9958304166793823,
            0.995135486125946,
            0.9956263303756714,
            0.9919508695602417,
            0.9956263303756714,
            0.9955426454544067,
            0.9949788451194763,
            0.9955426454544067,
            0.9964766502380371,
            0.995135486125946,
            0.9964346885681152,
            0.9947469830513,
            0.9956263303756714,
            0.9958304166793823
        ]
    },
    "HumanEval/141": {
        "similarity": 0.9956733584403992,
        "body": "    if (len([c for c in file_name if c.isdigit()]) > 3) or file_name.count('.') != 1 or not file_name[0].isalpha() or file_name.split('.')[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    else:\n        return 'Yes'",
        "result": "passed",
        "similarities": [
            0.9944883584976196,
            0.9935760498046875,
            0.9937809705734253,
            0.9935891032218933,
            0.9939416646957397,
            0.9920981526374817,
            0.9949955344200134,
            0.9937572479248047,
            0.9934055805206299,
            0.995341956615448,
            0.9937981367111206,
            0.9929083585739136,
            0.9926069378852844,
            0.9956733584403992,
            0.994873583316803,
            0.9947099089622498,
            0.9928336143493652,
            0.9924774169921875,
            0.9921947121620178,
            0.9934095144271851
        ]
    },
    "HumanEval/142": {
        "similarity": 0.9981719851493835,
        "body": "    return sum(x**3 if i % 4 == 0 and i % 3 != 0 else x**2 if i % 3 == 0 else x for i, x in enumerate(lst))",
        "result": "passed",
        "similarities": [
            0.9980888366699219,
            0.9977437257766724,
            0.9925827383995056,
            0.9915601015090942,
            0.9980888366699219,
            0.9942289590835571,
            0.9979578256607056,
            0.9980577230453491,
            0.9958691000938416,
            0.9980888366699219,
            0.9968593120574951,
            0.9980577230453491,
            0.9979934692382812,
            0.9947662353515625,
            0.9980888366699219,
            0.9980577230453491,
            0.9981719851493835,
            0.9979463219642639,
            0.9979463219642639,
            0.9979934692382812
        ]
    },
    "HumanEval/143": {
        "similarity": 0.9936628937721252,
        "body": "    primes = [2, 3, 5, 7, 11, 13]\n    return ' '.join(word for word in sentence.split() if len(word) in primes)",
        "result": "passed",
        "similarities": [
            0.9934059977531433,
            0.9846778512001038,
            0.9889723062515259,
            0.9890519976615906,
            0.9935395121574402,
            0.9935954213142395,
            0.9808581471443176,
            0.9904959797859192,
            0.9897573590278625,
            0.9852465391159058,
            0.9934059977531433,
            0.9885023236274719,
            0.9900622963905334,
            0.9889723062515259,
            0.9900622963905334,
            0.992384135723114,
            0.9846778512001038,
            0.9936628937721252,
            0.9889723062515259,
            0.9833781719207764
        ]
    },
    "HumanEval/144": {
        "similarity": 0.9974599480628967,
        "body": "    num_x, den_x = map(int, x.split('/'))\n    num_n, den_n = map(int, n.split('/'))\n    return (num_x * den_n) % den_x == 0",
        "result": "failed: test1",
        "similarities": [
            0.9967848062515259,
            0.9952138662338257,
            0.9974599480628967,
            0.9974570274353027,
            0.9914267659187317,
            0.9972755312919617,
            0.9971249103546143,
            0.9974599480628967,
            0.9966816306114197,
            0.9960442781448364,
            0.9948419332504272,
            0.9966816306114197,
            0.9914266467094421,
            0.9966334104537964,
            0.9974445700645447,
            0.9974570274353027,
            0.9974570274353027,
            0.990592360496521,
            0.9950143694877625,
            0.9890934824943542
        ]
    },
    "HumanEval/145": {
        "similarity": 0.9987401366233826,
        "body": "    return sorted(nums, key=lambda x: (sum(int(digit) for digit in str(abs(x))), nums.index(x)))",
        "result": "failed: ",
        "similarities": [
            0.9975377321243286,
            0.9975377321243286,
            0.9987401366233826,
            0.9987401366233826,
            0.9947412610054016,
            0.9987401366233826,
            0.9987401366233826,
            0.9987401366233826,
            0.9987401366233826,
            0.9941388368606567,
            0.9987401366233826,
            0.9975377321243286,
            0.9987401366233826,
            0.9987401366233826,
            0.9987401366233826,
            0.9987401366233826,
            0.9987401366233826,
            0.9975377321243286,
            0.9975377321243286,
            0.9987401366233826
        ]
    },
    "HumanEval/146": {
        "similarity": 0.9946366548538208,
        "body": "    count = sum(1 for n in nums if n > 10 and str(n)[0] % 2 != 0 and str(n)[-1] % 2 != 0)\n    return count",
        "result": "failed: not all arguments converted during string formatting",
        "similarities": [
            0.9928171038627625,
            0.9924218058586121,
            0.992080569267273,
            0.9905526041984558,
            0.994547426700592,
            0.9945165514945984,
            0.9858117699623108,
            0.9919461011886597,
            0.9920805096626282,
            0.9920805096626282,
            0.994547426700592,
            0.987899661064148,
            0.9916984438896179,
            0.9946366548538208,
            0.9929816722869873,
            0.9858585000038147,
            0.9924218058586121,
            0.9863810539245605,
            0.9881975054740906,
            0.9879772663116455
        ]
    },
    "HumanEval/147": {
        "similarity": 0.997653067111969,
        "body": "    a = [i * i - i + 1 for i in range(1, n+1)]\n    count = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count",
        "result": "passed",
        "similarities": [
            0.9976395964622498,
            0.9976395964622498,
            0.9923132658004761,
            0.9970317482948303,
            0.9921499490737915,
            0.9972934722900391,
            0.9902337789535522,
            0.9976395964622498,
            0.9976529479026794,
            0.9976395964622498,
            0.996894359588623,
            0.9932851195335388,
            0.9976529479026794,
            0.9947803020477295,
            0.9976529479026794,
            0.9976395964622498,
            0.997653067111969,
            0.9976395964622498,
            0.9976529479026794,
            0.9900469779968262
        ]
    },
    "HumanEval/148": {
        "similarity": 0.9967290759086609,
        "body": "planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n\n    if planet1 not in planets or planet2 not in planets:\n        return ()\n    idx1, idx2 = planets.index(planet1), planets.index(planet2)\n    if idx1 > idx2:\n        idx1, idx2 = idx2, idx1\n    return tuple(planets[idx1+1:idx2])",
        "result": "failed: unexpected indent (<string>, line 20)",
        "similarities": [
            0.9949210286140442,
            0.9959607720375061,
            0.9956458210945129,
            0.993743896484375,
            0.9914276003837585,
            0.9959054589271545,
            0.9930490255355835,
            0.9927187561988831,
            0.9967290759086609,
            0.9957599639892578,
            0.9945080280303955,
            0.9962579607963562,
            0.9961006045341492,
            0.9938843250274658,
            0.9966826438903809,
            0.9962818026542664,
            0.9953926801681519,
            0.9962816834449768,
            0.9966826438903809,
            0.9931317567825317
        ]
    },
    "HumanEval/149": {
        "similarity": 0.9983689188957214,
        "body": "    return sorted([s for s in lst if len(s) % 2 == 0], key=lambda x: (len(x), x))",
        "result": "passed",
        "similarities": [
            0.9983689188957214,
            0.9983689188957214,
            0.9983689188957214,
            0.9983689188957214,
            0.9982959628105164,
            0.9953934550285339,
            0.9951151609420776,
            0.9983689188957214,
            0.9983689188957214,
            0.9982807636260986,
            0.9959275126457214,
            0.9982807636260986,
            0.998337984085083,
            0.9983689188957214,
            0.9921524524688721,
            0.998337984085083,
            0.9959275126457214,
            0.9983689188957214,
            0.9960831999778748,
            0.9951151609420776
        ]
    },
    "HumanEval/150": {
        "similarity": 0.9978031516075134,
        "body": "    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n    return x if is_prime(n) else y",
        "result": "failed: ",
        "similarities": [
            0.9926834106445312,
            0.9978031516075134,
            0.996783435344696,
            0.9978031516075134,
            0.9974974393844604,
            0.9929062724113464,
            0.9915323853492737,
            0.9978031516075134,
            0.9978031516075134,
            0.9978031516075134,
            0.9942295551300049,
            0.9949858784675598,
            0.9968540668487549,
            0.9975451231002808,
            0.9978031516075134,
            0.9975451231002808,
            0.9978031516075134,
            0.9969281554222107,
            0.9978031516075134,
            0.9914546012878418
        ]
    },
    "HumanEval/151": {
        "similarity": 0.9978172183036804,
        "body": "    return sum(x**2 for x in lst if isinstance(x, int) and x > 0 and x % 2 != 0)",
        "result": "passed",
        "similarities": [
            0.9929007291793823,
            0.9897039532661438,
            0.9978172183036804,
            0.9978172183036804,
            0.9938885569572449,
            0.9955458641052246,
            0.9940330386161804,
            0.997737467288971,
            0.9968857169151306,
            0.9978172183036804,
            0.9940330386161804,
            0.997737467288971,
            0.9971767067909241,
            0.9977808594703674,
            0.9978172183036804,
            0.9977808594703674,
            0.9977808594703674,
            0.9954457879066467,
            0.9939541220664978,
            0.997737467288971
        ]
    },
    "HumanEval/152": {
        "similarity": 0.9990296959877014,
        "body": "    return [abs(a - b) for a, b in zip(game, guess)]",
        "result": "passed",
        "similarities": [
            0.9990091919898987,
            0.9990216493606567,
            0.9990296959877014,
            0.9990216493606567,
            0.9989534616470337,
            0.9990216493606567,
            0.9963248372077942,
            0.9990282654762268,
            0.9989836812019348,
            0.9984486103057861,
            0.9989534616470337,
            0.9990296959877014,
            0.9986401796340942,
            0.9990216493606567,
            0.9990216493606567,
            0.9963248372077942,
            0.9990296959877014,
            0.9990296959877014,
            0.9969777464866638,
            0.9990296959877014
        ]
    },
    "HumanEval/153": {
        "similarity": 0.9952551126480103,
        "body": "    strongest = max(extensions, key=lambda x: sum((1 if c.isupper() else -1) for c in x))\n    return f\"{class_name}.{strongest}\"",
        "result": "failed: ",
        "similarities": [
            0.9952551126480103,
            0.9897099733352661,
            0.9854702353477478,
            0.9943951964378357,
            0.991351306438446,
            0.9951491355895996,
            0.9925856590270996,
            0.9951491355895996,
            0.9921876192092896,
            0.9935490489006042,
            0.9943951964378357,
            0.9938229322433472,
            0.9949053525924683,
            0.994134783744812,
            0.9928996562957764,
            0.9947905540466309,
            0.9910147786140442,
            0.9938946962356567,
            0.9940252900123596,
            0.991987407207489
        ]
    },
    "HumanEval/154": {
        "similarity": 0.9967764019966125,
        "body": "    rotations = [b[i:] + b[:i] for i in range(len(b))]\n    return any(rotation in a for rotation in rotations)",
        "result": "passed",
        "similarities": [
            0.9955432415008545,
            0.9967764019966125,
            0.994415283203125,
            0.9946129322052002,
            0.995590329170227,
            0.9966312050819397,
            0.995590329170227,
            0.9955072999000549,
            0.9956355690956116,
            0.9961010813713074,
            0.9967764019966125,
            0.9967764019966125,
            0.9951538443565369,
            0.9951538443565369,
            0.9967764019966125,
            0.9967764019966125,
            0.9955432415008545,
            0.9956355690956116,
            0.994415283203125,
            0.9954314827919006
        ]
    },
    "HumanEval/155": {
        "similarity": 0.9936510324478149,
        "body": "    count_even = sum(1 for digit in str(num) if int(digit) % 2 == 0)\n    count_odd = len(str(num)) - count_even\n    return count_even, count_odd",
        "result": "failed: invalid literal for int() with base 10: '-'",
        "similarities": [
            0.9862273335456848,
            0.9932516813278198,
            0.991694986820221,
            0.9908424019813538,
            0.9932401776313782,
            0.9856859445571899,
            0.9932401776313782,
            0.9932401776313782,
            0.9920183420181274,
            0.974033534526825,
            0.9932401776313782,
            0.9898155927658081,
            0.9936510324478149,
            0.9936124086380005,
            0.9919660687446594,
            0.987009584903717,
            0.9932401776313782,
            0.9932401776313782,
            0.9932401776313782,
            0.982441782951355
        ]
    },
    "HumanEval/156": {
        "similarity": 0.9915983080863953,
        "body": "{\n  \"code\": \"\n    roman = ''\n    values = {\n        1000: 'm', 900: 'cm',\n        500: 'd', 400: 'cd',\n        100: 'c', 90: 'xc',\n        50: 'l', 40: 'xl',\n        10: 'x', 9: 'ix',\n        5: 'v', 4: 'iv',\n        1: 'i'\n    }\n    for value, letter in values.items():\n        while number >= value:\n            roman += letter\n            number -= value\n    return roman.lower()\"\n}",
        "result": "failed: EOL while scanning string literal (<string>, line 14)",
        "similarities": [
            0.9878503084182739,
            0.9888378977775574,
            0.9905881285667419,
            0.9905922412872314,
            0.9888719320297241,
            0.989017903804779,
            0.9915983080863953,
            0.9070500731468201,
            0.9890346527099609,
            0.9879851937294006,
            0.988244891166687,
            0.9907446503639221,
            0.9902952909469604,
            0.9903348684310913,
            0.9900783896446228,
            0.9874210357666016,
            0.9897366762161255,
            0.9877257347106934,
            0.9885455965995789,
            0.9898653626441956
        ]
    },
    "HumanEval/157": {
        "similarity": 0.9970519542694092,
        "body": "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2",
        "result": "passed",
        "similarities": [
            0.9954867959022522,
            0.9969771504402161,
            0.9944671988487244,
            0.9956279397010803,
            0.9954867959022522,
            0.9970519542694092,
            0.994917094707489,
            0.9956279397010803,
            0.9944671988487244,
            0.9956279397010803,
            0.9970519542694092,
            0.9969771504402161,
            0.9956279397010803,
            0.9970519542694092,
            0.9970519542694092,
            0.9956279397010803,
            0.9954867959022522,
            0.9944671988487244,
            0.9911662936210632,
            0.9956279397010803
        ]
    },
    "HumanEval/158": {
        "similarity": 0.9901456236839294,
        "body": "    max_word = max(words, key=lambda x: (len(set(x)), x))\n    return max_word",
        "result": "failed: t2",
        "similarities": [
            0.9815958738327026,
            0.9874603152275085,
            0.9878926873207092,
            0.9830372333526611,
            0.9901456236839294,
            0.9878059029579163,
            0.987912118434906,
            0.987912118434906,
            0.987912118434906,
            0.987912118434906,
            0.9816963076591492,
            0.9830372333526611,
            0.9866588115692139,
            0.9897539019584656,
            0.9874863028526306,
            0.9858846068382263,
            0.9823495149612427,
            0.9875668287277222,
            0.9884131550788879,
            0.9877759218215942
        ]
    },
    "HumanEval/159": {
        "similarity": 0.9964889883995056,
        "body": "    eaten = min(need, remaining) + number\n    left = max(remaining - need, 0)\n    return [eaten, left]",
        "result": "passed",
        "similarities": [
            0.9952294230461121,
            0.9953644275665283,
            0.9795097708702087,
            0.9952294230461121,
            0.9953644275665283,
            0.9964889883995056,
            0.9954484701156616,
            0.9891740679740906,
            0.9948890209197998,
            0.9954813122749329,
            0.9957452416419983,
            0.9952294230461121,
            0.9951562285423279,
            0.9964889883995056,
            0.9964889883995056,
            0.996351957321167,
            0.9954813122749329,
            0.9964535236358643,
            0.9953644275665283,
            0.9918327331542969
        ]
    },
    "HumanEval/160": {
        "similarity": 0.9909785389900208,
        "body": "    result = operand[0]\n    for op, num in zip(operator + ['+'], operand[1:]):\n        if op == '+':\n            result += num\n        elif op == '-':\n            result -= num\n        elif op == '*':\n            result *= num\n        elif op == '//':\n            result //= num\n        elif op == '**':\n            result **= num\n    return result",
        "result": "failed: ",
        "similarities": [
            0.9740599393844604,
            0.9882631897926331,
            0.9630681872367859,
            0.9889562726020813,
            0.9740599393844604,
            0.9811075925827026,
            0.9900050759315491,
            0.9889562726020813,
            0.9890327453613281,
            0.9732548594474792,
            0.9888715147972107,
            0.9889562726020813,
            0.9888715147972107,
            0.9909785389900208,
            0.9889562726020813,
            0.9888715147972107,
            0.9882631897926331,
            0.9890327453613281,
            0.9889562726020813,
            0.9896575808525085
        ]
    },
    "HumanEval/161": {
        "similarity": 0.9960827231407166,
        "body": "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.swapcase() if c.isalpha() else c for c in s)",
        "result": "passed",
        "similarities": [
            0.9932881593704224,
            0.9935802817344666,
            0.9960827231407166,
            0.9960827231407166,
            0.9960827231407166,
            0.9958981275558472,
            0.9960827231407166,
            0.9910926818847656,
            0.9905714988708496,
            0.9953575134277344,
            0.993540346622467,
            0.9938351511955261,
            0.9960827231407166,
            0.9928001761436462,
            0.9929413199424744,
            0.9897896647453308,
            0.991656482219696,
            0.9932268857955933,
            0.993540346622467,
            0.9960827231407166
        ]
    },
    "HumanEval/162": {
        "similarity": 0.9985612630844116,
        "body": "import hashlib\n\n    if not text:\n        return None\n    return hashlib.md5(text.encode()).hexdigest()",
        "result": "failed: unexpected indent (<string>, line 11)",
        "similarities": [
            0.9972325563430786,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116,
            0.9828870892524719,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116,
            0.9983932375907898,
            0.996680498123169,
            0.9972325563430786,
            0.9958397746086121,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116,
            0.9985612630844116
        ]
    },
    "HumanEval/163": {
        "similarity": 0.9932857155799866,
        "body": "for i in range(a, b + 1):\n    if i % 2 == 0:\n        yield i",
        "result": "failed: 'yield' outside function (<string>, line 14)",
        "similarities": [
            0.9922357201576233,
            0.987657368183136,
            0.9932857155799866,
            0.9932857155799866,
            0.9932857155799866,
            0.9926269054412842,
            0.9881594777107239,
            0.9926502704620361,
            0.9932550191879272,
            0.9881594777107239,
            0.9691897034645081,
            0.9932857155799866,
            0.9932857155799866,
            0.9932857155799866,
            0.9932857155799866,
            0.9917734861373901,
            0.9932857155799866,
            0.9821743369102478,
            0.9932857155799866,
            0.9846504926681519
        ]
    }
}