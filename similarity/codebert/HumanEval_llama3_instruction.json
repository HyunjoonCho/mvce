{
    "HumanEval/0": {
        "similarity": 0.9991090893745422,
        "body": "    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n            if abs(numbers[i] - numbers[j]) <= threshold:\n                return True\n    return False",
        "result": "passed",
        "similarities": [
            0.998371422290802,
            0.9987469911575317,
            0.9991071820259094,
            0.9964424967765808,
            0.9983270764350891,
            0.9981990456581116,
            0.9991071820259094,
            0.9991090893745422,
            0.9987420439720154,
            0.9991071820259094,
            0.9986599683761597,
            0.9987398386001587,
            0.9991071820259094,
            0.9991071820259094,
            0.9991071820259094,
            0.9990988373756409,
            0.9991090893745422,
            0.9989643096923828,
            0.9987398386001587,
            0.9987398386001587
        ]
    },
    "HumanEval/1": {
        "similarity": 0.997205913066864,
        "body": "    result = []\n    current_group = ''\n    group_stack = []\n    for char in paren_string:\n        if char == '(':\n            if not group_stack:\n                current_group += '('\n            group_stack.append('(')\n            current_group += '('\n        elif char == ')':\n            group_stack.pop()\n            current_group += ')'\n            if not group_stack:\n                result.append(current_group)\n                current_group = ''\n    return result",
        "result": "failed: ",
        "similarities": [
            0.9949595928192139,
            0.9965900778770447,
            0.9955840706825256,
            0.9959275126457214,
            0.9963539838790894,
            0.9941530823707581,
            0.9971686005592346,
            0.9967161417007446,
            0.9965190887451172,
            0.9964606761932373,
            0.9966251254081726,
            0.9968106150627136,
            0.9967328310012817,
            0.9965533018112183,
            0.997205913066864,
            0.9956880807876587,
            0.9964500069618225,
            0.9970105886459351,
            0.9843557476997375,
            0.9931175112724304
        ]
    },
    "HumanEval/2": {
        "similarity": 0.9976969361305237,
        "body": "    return number - int(number)",
        "result": "passed",
        "similarities": [
            0.9976969361305237,
            0.9960455894470215,
            0.9972556233406067,
            0.9962223768234253,
            0.9976969361305237,
            0.9976969361305237,
            0.9976969361305237,
            0.9962223768234253,
            0.9948586821556091,
            0.9971562623977661,
            0.9976969361305237,
            0.9976969361305237,
            0.9972556233406067,
            0.997234046459198,
            0.9962223768234253,
            0.9875181913375854,
            0.9976969361305237,
            0.9924449920654297,
            0.9976969361305237,
            0.9976969361305237
        ]
    },
    "HumanEval/3": {
        "similarity": 0.9924382567405701,
        "body": "    bal = 0\n    for op in operations:\n        bal += op\n        if bal < 0:\n            return True\n    return False",
        "result": "passed",
        "similarities": [
            0.991062343120575,
            0.991062343120575,
            0.991062343120575,
            0.991062343120575,
            0.9922341108322144,
            0.9924382567405701,
            0.9899290800094604,
            0.987912654876709,
            0.9910969138145447,
            0.9922341108322144,
            0.9922341108322144,
            0.9910568594932556,
            0.9713323712348938,
            0.9922341108322144,
            0.98674476146698,
            0.9903066754341125,
            0.9906873106956482,
            0.9922341108322144,
            0.9891138672828674,
            0.9909692406654358
        ]
    },
    "HumanEval/4": {
        "similarity": 0.9997133016586304,
        "body": "    return sum(abs(num - sum(numbers) / len(numbers)) for num in numbers) / len(numbers)",
        "result": "passed",
        "similarities": [
            0.9996946454048157,
            0.9990567564964294,
            0.9997133016586304,
            0.9997133016586304,
            0.9997133016586304,
            0.9997133016586304,
            0.9996946454048157,
            0.9990019798278809,
            0.9997133016586304,
            0.9996946454048157,
            0.9996946454048157,
            0.9997133016586304,
            0.9997133016586304,
            0.9996946454048157,
            0.9996946454048157,
            0.9990398287773132,
            0.9997133016586304,
            0.9989644885063171,
            0.9997133016586304,
            0.9997133016586304
        ]
    },
    "HumanEval/5": {
        "similarity": 0.9976679086685181,
        "body": "    result = [numbers[0]]\n    for i in range(1, len(numbers) - 1):\n        result.extend([numbers[i], delimeter])\n    if numbers:\n        result.append(numbers[-1])",
        "result": "failed: list index out of range",
        "similarities": [
            0.9927828907966614,
            0.997458815574646,
            0.9976415038108826,
            0.9969112277030945,
            0.9969112277030945,
            0.9922515749931335,
            0.9976415038108826,
            0.997458815574646,
            0.996201753616333,
            0.9908449053764343,
            0.9941602945327759,
            0.9971421957015991,
            0.9976354837417603,
            0.9976415038108826,
            0.9976035952568054,
            0.9976415038108826,
            0.9922515749931335,
            0.9976679086685181,
            0.9976415038108826,
            0.9969112277030945
        ]
    },
    "HumanEval/6": {
        "similarity": 0.9922112822532654,
        "body": "    stack = []\n    result = []\n    for char in paren_string:\n        if char == '(':\n            stack.append(1)\n        elif char == ')':\n            level = stack.pop()\n            result.append(level)\n    return result",
        "result": "failed: ",
        "similarities": [
            0.9917554259300232,
            0.9877426028251648,
            0.9895678162574768,
            0.9890503287315369,
            0.9914261698722839,
            0.9885980486869812,
            0.9906650185585022,
            0.9866090416908264,
            0.9918861389160156,
            0.9922112822532654,
            0.9872559309005737,
            0.9916175007820129,
            0.9902480244636536,
            0.9871085286140442,
            0.9913727641105652,
            0.9919644594192505,
            0.989801287651062,
            0.9139505624771118,
            0.9823029041290283,
            0.989068865776062
        ]
    },
    "HumanEval/7": {
        "similarity": 0.9960429668426514,
        "body": "    return [s for s in strings if substring in s]",
        "result": "passed",
        "similarities": [
            0.9960429668426514,
            0.9960118532180786,
            0.9960429668426514,
            0.98527991771698,
            0.9960118532180786,
            0.9956731200218201,
            0.9960429668426514,
            0.9960118532180786,
            0.9932606220245361,
            0.9960429668426514,
            0.9960429668426514,
            0.9960429668426514,
            0.9960429668426514,
            0.98527991771698,
            0.9960429668426514,
            0.9960429668426514,
            0.9741448760032654,
            0.9960429668426514,
            0.9960429668426514,
            0.9882077574729919
        ]
    },
    "HumanEval/8": {
        "similarity": 0.9926139712333679,
        "body": "    result = (sum(numbers), 1 if not numbers else functools.reduce(lambda x, y: x * y, numbers))",
        "result": "failed: ",
        "similarities": [
            0.9905851483345032,
            0.9901238679885864,
            0.9894706606864929,
            0.9910106658935547,
            0.9915719628334045,
            0.9911155700683594,
            0.9902424216270447,
            0.9910617470741272,
            0.9912396669387817,
            0.9912669658660889,
            0.9815736413002014,
            0.9913181662559509,
            0.9926139712333679,
            0.9926139712333679,
            0.9919188618659973,
            0.9896948933601379,
            0.9870156645774841,
            0.9892995953559875,
            0.9912669658660889,
            0.9854605793952942
        ]
    },
    "HumanEval/9": {
        "similarity": 0.9918927550315857,
        "body": "max_val = float('-inf')\nresult = []\nfor num in numbers:\n    if num > max_val:\n        max_val = num\n    result.append(max_val)",
        "result": "failed: name 'numbers' is not defined",
        "similarities": [
            0.9863040447235107,
            0.9916048645973206,
            0.9854746460914612,
            0.9746209979057312,
            0.9887680411338806,
            0.9887680411338806,
            0.9859783053398132,
            0.9918927550315857,
            0.9872759580612183,
            0.9918249249458313,
            0.9918249249458313,
            0.9883158802986145,
            0.9918249249458313,
            0.9887508749961853,
            0.9918249249458313,
            0.9885675311088562,
            0.9869167804718018,
            0.9599048495292664,
            0.9843799471855164,
            0.9853056073188782
        ]
    },
    "HumanEval/10": {
        "similarity": 0.9965412020683289,
        "body": "    if string == string[::-1]:\n        return string\n    for i in range(len(string), 0, -1):\n        if string[:i] + string[i:][::-1] == string:\n            return string[:i] + string[i:][::-1]\n    return string + string[::-1]",
        "result": "failed: ",
        "similarities": [
            0.9949969053268433,
            0.9923940300941467,
            0.996496319770813,
            0.9963022470474243,
            0.9955475330352783,
            0.9962166547775269,
            0.9965412020683289,
            0.9956824779510498,
            0.9954836964607239,
            0.9960638284683228,
            0.9957739114761353,
            0.9937244057655334,
            0.9962875843048096,
            0.9951623678207397,
            0.9963230490684509,
            0.9965015053749084,
            0.9962856769561768,
            0.9952973127365112,
            0.9961170554161072,
            0.9944366812705994
        ]
    },
    "HumanEval/11": {
        "similarity": 0.9940153360366821,
        "body": "    result = ''\n    for i in range(len(a)):\n        if int(a[i]) ^ int(b[i]):\n            result += '1'\n        else:\n            result += '0'",
        "result": "failed: ",
        "similarities": [
            0.9938852190971375,
            0.992179274559021,
            0.9929019808769226,
            0.9909150004386902,
            0.9886153340339661,
            0.9927045106887817,
            0.989984393119812,
            0.9925326108932495,
            0.992698073387146,
            0.9894888997077942,
            0.9903990030288696,
            0.9928462505340576,
            0.9930955171585083,
            0.9928053617477417,
            0.9930955171585083,
            0.9800574779510498,
            0.9777067303657532,
            0.9940153360366821,
            0.9854256510734558,
            0.9901929497718811
        ]
    },
    "HumanEval/12": {
        "similarity": 0.9919286966323853,
        "body": "    if not strings: \n        return None\n    longest_string = strings[0]\n    for s in strings:\n        if len(s) > len(longest_string):\n            longest_string = s\n    return longest_string",
        "result": "passed",
        "similarities": [
            0.9831446409225464,
            0.9909043908119202,
            0.9910103678703308,
            0.9860166311264038,
            0.9902229309082031,
            0.9908798933029175,
            0.9799631834030151,
            0.9751380085945129,
            0.9823135733604431,
            0.9910103678703308,
            0.9910103678703308,
            0.9919286966323853,
            0.9910404086112976,
            0.9910739064216614,
            0.9773276448249817,
            0.9909043908119202,
            0.9909043908119202,
            0.981097400188446,
            0.9818635582923889,
            0.9908264875411987
        ]
    },
    "HumanEval/13": {
        "similarity": 0.9958379864692688,
        "body": "    while b:\n        a, b = b, a % b\n    return a",
        "result": "passed",
        "similarities": [
            0.9952912926673889,
            0.9952912926673889,
            0.9956120252609253,
            0.9941760897636414,
            0.9952912926673889,
            0.9957209229469299,
            0.9952912926673889,
            0.9952912926673889,
            0.9906315207481384,
            0.9835898876190186,
            0.9952912926673889,
            0.9933496713638306,
            0.9929797649383545,
            0.9849874377250671,
            0.9952912926673889,
            0.9943347573280334,
            0.9896954894065857,
            0.9958379864692688,
            0.9896225333213806,
            0.9953151345252991
        ]
    },
    "HumanEval/14": {
        "similarity": 0.9971404075622559,
        "body": "    result = []\n    for i in range(len(string)):\n        result.append(string[:i+1])",
        "result": "failed: ",
        "similarities": [
            0.9971404075622559,
            0.9913623332977295,
            0.9960463643074036,
            0.9936987161636353,
            0.9971404075622559,
            0.9967581033706665,
            0.9969906210899353,
            0.9969906210899353,
            0.9971404075622559,
            0.9913623332977295,
            0.9969906210899353,
            0.9944642782211304,
            0.9878302216529846,
            0.9969906210899353,
            0.9870914816856384,
            0.9971404075622559,
            0.9966945648193359,
            0.9971404075622559,
            0.9969906210899353,
            0.9971404075622559
        ]
    },
    "HumanEval/15": {
        "similarity": 0.9974589347839355,
        "body": "    return ' '.join(map(str, range(n + 1)))",
        "result": "passed",
        "similarities": [
            0.9973224997520447,
            0.994624674320221,
            0.9973224997520447,
            0.9929714202880859,
            0.9974196553230286,
            0.9973224997520447,
            0.9973325133323669,
            0.9973224997520447,
            0.9949342608451843,
            0.9974589347839355,
            0.9970235228538513,
            0.9966502785682678,
            0.994624674320221,
            0.9974589347839355,
            0.9973224997520447,
            0.9965011477470398,
            0.9974196553230286,
            0.994624674320221,
            0.995965838432312,
            0.9929714202880859
        ]
    },
    "HumanEval/16": {
        "similarity": 0.9949224591255188,
        "body": "    return len(set(string.casefold()))",
        "result": "passed",
        "similarities": [
            0.9948238730430603,
            0.9921894073486328,
            0.9935368299484253,
            0.9949224591255188,
            0.9866961240768433,
            0.9948238730430603,
            0.9948238730430603,
            0.9880982637405396,
            0.9948238730430603,
            0.9948238730430603,
            0.9948238730430603,
            0.9894556999206543,
            0.9948238730430603,
            0.9866961240768433,
            0.9949224591255188,
            0.9949224591255188,
            0.9947350025177002,
            0.9949224591255188,
            0.9880982637405396,
            0.9949224591255188
        ]
    },
    "HumanEval/17": {
        "similarity": 0.9929307699203491,
        "body": "    if music_string[0] == 'o':\n        beats = [4] + parse_music(music_string[1:])\n    elif music_string[0:2] == 'o|':\n        beats = [2] + parse_music(music_string[2:])\n    elif music_string[0] == '.':\n        if len(music_string) > 1 and music_string[1] == '|':\n            beats = [1] + parse_music(music_string[2:])\n        else:\n            beats = [1]\n    else:\n        raise ValueError('Invalid note')\n    return beats",
        "result": "failed: string index out of range",
        "similarities": [
            0.9898885488510132,
            0.9910057783126831,
            0.9883047342300415,
            0.9877044558525085,
            0.9903448224067688,
            0.9853413105010986,
            0.982798159122467,
            0.9855682253837585,
            0.9927635192871094,
            0.9889496564865112,
            0.9916731119155884,
            0.9865738749504089,
            0.9890064597129822,
            0.9911175966262817,
            0.9894762635231018,
            0.9921793937683105,
            0.9927155375480652,
            0.9902177453041077,
            0.9929307699203491,
            0.9923123717308044
        ]
    },
    "HumanEval/18": {
        "similarity": 0.990912675857544,
        "body": "    return len([i for i in range(len(string)) if string.startswith(substring, i)])",
        "result": "passed",
        "similarities": [
            0.9808534383773804,
            0.9858611226081848,
            0.9808533191680908,
            0.9904893636703491,
            0.9691043496131897,
            0.9904893636703491,
            0.990912675857544,
            0.9873858094215393,
            0.9908002614974976,
            0.990912675857544,
            0.9895206093788147,
            0.9903064370155334,
            0.9863963723182678,
            0.9807793498039246,
            0.976301908493042,
            0.9903305768966675,
            0.990912675857544,
            0.9858611226081848,
            0.9808533191680908,
            0.9804437756538391
        ]
    },
    "HumanEval/19": {
        "similarity": 0.9907698631286621,
        "body": "        nums = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, \n                'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n        result = sorted([nums[i] for i in numbers.split()], key=lambda x: x)\n        return ' '.join(map(str, [k for k, v in zip(nums.keys(), result)]))",
        "result": "failed: unexpected indent (<string>, line 11)",
        "similarities": [
            0.989387035369873,
            0.9907698631286621,
            0.9867223501205444,
            0.985599935054779,
            0.9897428154945374,
            0.9884072542190552,
            0.9899792075157166,
            0.9895310997962952,
            0.9665008187294006,
            0.9867223501205444,
            0.9868341088294983,
            0.9859042763710022,
            0.9896592497825623,
            0.9853824973106384,
            0.9873197674751282,
            0.9847819805145264,
            0.9819522500038147,
            0.9853824973106384,
            0.9806609749794006,
            0.9874048829078674
        ]
    },
    "HumanEval/20": {
        "similarity": 0.9979507327079773,
        "body": "    min_diff = float('inf')\n    closest_pair = ()\n    for i in range(len(numbers)):\n        for j in range(i+1, len(numbers)):\n            diff = abs(numbers[j] - numbers[i])\n            if diff < min_diff:\n                min_diff = diff\n                closest_pair = (numbers[i], numbers[j])",
        "result": "failed: ",
        "similarities": [
            0.9973258972167969,
            0.9974183440208435,
            0.997533917427063,
            0.9956038594245911,
            0.9845958352088928,
            0.997900128364563,
            0.997414231300354,
            0.9978706240653992,
            0.9979248046875,
            0.9979144930839539,
            0.9979353547096252,
            0.9976441264152527,
            0.9949933290481567,
            0.9979507327079773,
            0.9973546862602234,
            0.9948652386665344,
            0.9978916049003601,
            0.997414231300354,
            0.9979248046875,
            0.9950231313705444
        ]
    },
    "HumanEval/21": {
        "similarity": 0.9959044456481934,
        "body": "    return [(x - min(numbers)) / (max(numbers) - min(numbers)) for x in numbers]",
        "result": "passed",
        "similarities": [
            0.9935706257820129,
            0.993583083152771,
            0.9959044456481934,
            0.9954280853271484,
            0.9955812096595764,
            0.982997477054596,
            0.992898166179657,
            0.993583083152771,
            0.9959044456481934,
            0.9959044456481934,
            0.9959044456481934,
            0.9959044456481934,
            0.993583083152771,
            0.9932361245155334,
            0.9959044456481934,
            0.9955812096595764,
            0.9956889748573303,
            0.9959044456481934,
            0.9955812096595764,
            0.9959044456481934
        ]
    },
    "HumanEval/22": {
        "similarity": 0.9924396872520447,
        "body": "    return [x for x in values if isinstance(x, int)]",
        "result": "passed",
        "similarities": [
            0.9894626140594482,
            0.9923627972602844,
            0.9845770001411438,
            0.9876413941383362,
            0.9881055951118469,
            0.9899745583534241,
            0.9924396872520447,
            0.9923627972602844,
            0.9876413941383362,
            0.9912728071212769,
            0.9878497123718262,
            0.9882826805114746,
            0.9876413941383362,
            0.9911199808120728,
            0.9896366596221924,
            0.9923627972602844,
            0.9899745583534241,
            0.9876413941383362,
            0.9923627972602844,
            0.978031575679779
        ]
    },
    "HumanEval/23": {
        "similarity": 0.9999998211860657,
        "body": "    return len(string)",
        "result": "passed",
        "similarities": [
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657,
            0.9999998211860657
        ]
    },
    "HumanEval/24": {
        "similarity": 0.998070478439331,
        "body": "    i = n - 1\n    while i > 0:\n        if n % i == 0:\n            return i\n        i -= 1",
        "result": "passed",
        "similarities": [
            0.9964669942855835,
            0.9968416094779968,
            0.9965701699256897,
            0.9980567097663879,
            0.9975034594535828,
            0.9966810345649719,
            0.9979479908943176,
            0.9979111552238464,
            0.998070478439331,
            0.9955841898918152,
            0.998070478439331,
            0.986814022064209,
            0.998070478439331,
            0.9980567097663879,
            0.998070478439331,
            0.998070478439331,
            0.9966810345649719,
            0.9979479908943176,
            0.9979479908943176,
            0.9951148629188538
        ]
    },
    "HumanEval/25": {
        "similarity": 0.9920516014099121,
        "body": "    result = []\n    i = 2\n    while i * i <= n:\n        count = 0\n        while n % i == 0:\n            n //= i\n            count += 1\n        if count > 0:\n            result.extend([i] * count)\n        i += 1\n    if n > 1:\n        result.append(n)",
        "result": "failed: ",
        "similarities": [
            0.9910848736763,
            0.9886346459388733,
            0.9912316203117371,
            0.9907234907150269,
            0.9906755089759827,
            0.991189181804657,
            0.9109964966773987,
            0.9908176064491272,
            0.9920516014099121,
            0.9879001975059509,
            0.9888018369674683,
            0.9914227724075317,
            0.9888063669204712,
            0.9910646080970764,
            0.9902666807174683,
            0.9913230538368225,
            0.9912716746330261,
            0.9879584312438965,
            0.9896527528762817,
            0.9898982644081116
        ]
    },
    "HumanEval/26": {
        "similarity": 0.9952588677406311,
        "body": "    seen = set()\n    result = []\n    for num in numbers:\n        if num not in seen:\n            seen.add(num)\n            result.append(num)",
        "result": "failed: ",
        "similarities": [
            0.9952588677406311,
            0.9952588677406311,
            0.9952588677406311,
            0.9952588677406311,
            0.9870846271514893,
            0.9850032329559326,
            0.9952588677406311,
            0.9952588677406311,
            0.9952588677406311,
            0.9920491576194763,
            0.9829707741737366,
            0.9952588677406311,
            0.9888988137245178,
            0.9952588677406311,
            0.9952588677406311,
            0.9866248965263367,
            0.9952588677406311,
            0.9952588677406311,
            0.9952588677406311,
            0.9952588677406311
        ]
    },
    "HumanEval/27": {
        "similarity": 0.991855800151825,
        "body": "    result = \"\"\n    for char in string:\n        if char.islower():\n            result += char.upper()\n        else:\n            result += char.lower()",
        "result": "failed: ",
        "similarities": [
            0.9824007749557495,
            0.990861713886261,
            0.9828976988792419,
            0.981573224067688,
            0.990861713886261,
            0.9807963967323303,
            0.990861713886261,
            0.991855800151825,
            0.9816078543663025,
            0.990861713886261,
            0.9907878041267395,
            0.9827262759208679,
            0.990861713886261,
            0.9866477847099304,
            0.9819387197494507,
            0.990861713886261,
            0.9865943789482117,
            0.990861713886261,
            0.9866477847099304,
            0.9918056130409241
        ]
    },
    "HumanEval/28": {
        "similarity": 0.9894292950630188,
        "body": "    result = ''.join(strings)",
        "result": "failed: ",
        "similarities": [
            0.9894292950630188,
            0.9826146364212036,
            0.9798793792724609,
            0.9894292950630188,
            0.9894292950630188,
            0.9894292950630188,
            0.9840730428695679,
            0.9798793792724609,
            0.9781014323234558,
            0.9894292950630188,
            0.9801785349845886,
            0.9894292950630188,
            0.9840437173843384,
            0.9840730428695679,
            0.9894292950630188,
            0.9840730428695679,
            0.9840730428695679,
            0.9894292950630188,
            0.9826146364212036,
            0.9894292950630188
        ]
    },
    "HumanEval/29": {
        "similarity": 0.9976118206977844,
        "body": "    return [s for s in strings if s.startswith(prefix)]",
        "result": "passed",
        "similarities": [
            0.9976118206977844,
            0.9976118206977844,
            0.9976118206977844,
            0.9976118206977844,
            0.9976118206977844,
            0.9976118206977844,
            0.9875718951225281,
            0.9949377775192261,
            0.9949377775192261,
            0.9976118206977844,
            0.9976118206977844,
            0.9976118206977844,
            0.9949377775192261,
            0.9972010254859924,
            0.9976118206977844,
            0.9923585653305054,
            0.9976118206977844,
            0.9910172820091248,
            0.9976118206977844,
            0.9976118206977844
        ]
    },
    "HumanEval/30": {
        "similarity": 0.9955927133560181,
        "body": "    return [num for num in l if num > 0]",
        "result": "passed",
        "similarities": [
            0.9955927133560181,
            0.9954012036323547,
            0.9955153465270996,
            0.9955927133560181,
            0.9885202050209045,
            0.9955152273178101,
            0.9950119853019714,
            0.9955152273178101,
            0.9913510680198669,
            0.9911598563194275,
            0.9948571920394897,
            0.992947518825531,
            0.9954012036323547,
            0.9954012036323547,
            0.9953588247299194,
            0.9910989999771118,
            0.9920713305473328,
            0.9887601733207703,
            0.992560625076294,
            0.9886656403541565
        ]
    },
    "HumanEval/31": {
        "similarity": 0.997977614402771,
        "body": "    if n <= 1: \n        return False \n    for i in range(2, int(n**0.5) + 1): \n        if n % i == 0: \n            return False \n    return True",
        "result": "passed",
        "similarities": [
            0.997977614402771,
            0.9975330829620361,
            0.9979591369628906,
            0.9979591369628906,
            0.997977614402771,
            0.9975330829620361,
            0.9976176023483276,
            0.997977614402771,
            0.9974305033683777,
            0.9979591369628906,
            0.9906736612319946,
            0.9961254596710205,
            0.9976176023483276,
            0.9947282671928406,
            0.997977614402771,
            0.9975596070289612,
            0.9907899498939514,
            0.9947282671928406,
            0.9976291656494141,
            0.9952398538589478
        ]
    },
    "HumanEval/32": {
        "similarity": 0.9928940534591675,
        "body": "    if len(xs) % 2 != 0:\n        raise ValueError(\"xs must have an even number of coefficients\")\n    root = -xs[1] / xs[3]\n    return round(root, 2)",
        "result": "failed: list index out of range",
        "similarities": [
            0.987697422504425,
            0.9891158938407898,
            0.9869783520698547,
            0.9908409118652344,
            0.9897776246070862,
            0.989398181438446,
            0.9884267449378967,
            0.9917429685592651,
            0.9928940534591675,
            0.9900872111320496,
            0.992631196975708,
            0.9872904419898987,
            0.9868603944778442,
            0.992118239402771,
            0.9919025897979736,
            0.9898139834403992,
            0.9782290458679199,
            0.9869110584259033,
            0.9877018332481384,
            0.9919461011886597
        ]
    },
    "HumanEval/33": {
        "similarity": 0.9950772523880005,
        "body": "    result = []\n    for i, x in enumerate(l):\n        if i % 3 == 0:\n            result.append(sorted([y for y in l if i % 3 == 0])[0])\n        else:\n            result.append(x)\n    return result",
        "result": "failed: ",
        "similarities": [
            0.9899133443832397,
            0.9870362877845764,
            0.9947961568832397,
            0.9949088096618652,
            0.9883530139923096,
            0.988280177116394,
            0.9948030114173889,
            0.9949021935462952,
            0.9947623014450073,
            0.9856529235839844,
            0.9860247373580933,
            0.9939631223678589,
            0.9950772523880005,
            0.9920479655265808,
            0.9946096539497375,
            0.9924272298812866,
            0.9949650168418884,
            0.9938222765922546,
            0.9946014881134033,
            0.9937805533409119
        ]
    },
    "HumanEval/34": {
        "similarity": 0.9908576011657715,
        "body": "if len(l) == 0: \n    return [] \nelse: \n    return sorted(set(l))",
        "result": "failed: 'return' outside function (<string>, line 9)",
        "similarities": [
            0.9900047183036804,
            0.9900047183036804,
            0.9900047183036804,
            0.9900047183036804,
            0.9900047183036804,
            0.9900047183036804,
            0.9900047183036804,
            0.9799838662147522,
            0.9900047183036804,
            0.9747416973114014,
            0.9885528087615967,
            0.9900047183036804,
            0.9885528087615967,
            0.9839187264442444,
            0.9899442791938782,
            0.9908576011657715,
            0.9900047183036804,
            0.9870690107345581,
            0.971185564994812,
            0.9765221476554871
        ]
    },
    "HumanEval/35": {
        "similarity": 0.9857972860336304,
        "body": "max = l[0]\nfor i in l:\n    if i > max:\n        max = i",
        "result": "failed: name 'l' is not defined",
        "similarities": [
            0.9831039309501648,
            0.9769863486289978,
            0.9769863486289978,
            0.9831039309501648,
            0.9769863486289978,
            0.9839075803756714,
            0.9836990237236023,
            0.9808710813522339,
            0.9857972860336304,
            0.9831039309501648,
            0.9836990237236023,
            0.9769863486289978,
            0.9660255312919617,
            0.9754421710968018,
            0.9836990237236023,
            0.9762431979179382,
            0.9749788045883179,
            0.9823907613754272,
            0.9769863486289978,
            0.9667522311210632
        ]
    },
    "HumanEval/36": {
        "similarity": 0.9971492290496826,
        "body": "    result = 0\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            str_i = str(i)\n            result += str_i.count('7')",
        "result": "failed: ",
        "similarities": [
            0.9971492290496826,
            0.9941049218177795,
            0.9960985779762268,
            0.9969764351844788,
            0.989740788936615,
            0.9969764351844788,
            0.9969764351844788,
            0.9969764351844788,
            0.9969764351844788,
            0.9937083721160889,
            0.9899508953094482,
            0.9888564944267273,
            0.9971492290496826,
            0.9971492290496826,
            0.9971492290496826,
            0.9939131736755371,
            0.9969764351844788,
            0.9971492290496826,
            0.9937083721160889,
            0.9956681132316589
        ]
    },
    "HumanEval/37": {
        "similarity": 0.9938663840293884,
        "body": "    even_values = sorted([i for i in l[1::2]])\n    return [i if i % 2 != 0 else j for i, j in zip(l, even_values)]",
        "result": "failed: ",
        "similarities": [
            0.991746187210083,
            0.9933127164840698,
            0.99107825756073,
            0.9723737835884094,
            0.9885225892066956,
            0.9916049838066101,
            0.9897634387016296,
            0.9898112416267395,
            0.9909452199935913,
            0.9873976707458496,
            0.9930936098098755,
            0.993007242679596,
            0.9934260845184326,
            0.991460919380188,
            0.9890807271003723,
            0.9895663857460022,
            0.9912305474281311,
            0.9896817803382874,
            0.9938663840293884,
            0.9895533323287964
        ]
    },
    "HumanEval/38": {
        "similarity": 0.9887444376945496,
        "body": "    result = \"\"\n    i = 0\n    while i < len(s):\n        group = s[i:i+3]\n        if len(group) == 2:\n            result += group[1] + group[0]\n        else:\n            result += group\n        i += 3",
        "result": "failed: ",
        "similarities": [
            0.9541176557540894,
            0.9831854104995728,
            0.9853768944740295,
            0.9862877726554871,
            0.9811244606971741,
            0.9803563952445984,
            0.9856095910072327,
            0.9803368449211121,
            0.9879848957061768,
            0.984137773513794,
            0.9787195920944214,
            0.9886583089828491,
            0.9814979434013367,
            0.986880362033844,
            0.9887444376945496,
            0.9882252216339111,
            0.9859061241149902,
            0.9861620664596558,
            0.9861924052238464,
            0.9864447712898254
        ]
    },
    "HumanEval/39": {
        "similarity": 0.9982673525810242,
        "body": "        if m <= 1:\n            return False\n        for i in range(2, int(m ** 0.5) + 1):\n            if m % i == 0:\n                return False\n        return True\n\n    a, b = 0, 1\n    result = None\n    while n > 1:\n        a, b = b, a + b\n        if is_prime(b):\n            result = b\n            break",
        "result": "failed: unexpected indent (<string>, line 17)",
        "similarities": [
            0.9955522418022156,
            0.9980976581573486,
            0.9981848001480103,
            0.9972085356712341,
            0.9982022047042847,
            0.9979790449142456,
            0.9982673525810242,
            0.9978178143501282,
            0.9960363507270813,
            0.9981468915939331,
            0.9945028424263,
            0.9975830912590027,
            0.9981125593185425,
            0.9979721903800964,
            0.9920278787612915,
            0.9961454272270203,
            0.997504472732544,
            0.998173177242279,
            0.9972042441368103,
            0.9979614615440369
        ]
    },
    "HumanEval/40": {
        "similarity": 0.9916399717330933,
        "body": "    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] in (k for k in l if k != l[i] and k != l[j]):\n                return True\n    return False",
        "result": "failed: ",
        "similarities": [
            0.9856521487236023,
            0.9910018444061279,
            0.9910627603530884,
            0.9910627603530884,
            0.9910018444061279,
            0.9838921427726746,
            0.9852714538574219,
            0.9833641052246094,
            0.9849608540534973,
            0.9896934032440186,
            0.9841426014900208,
            0.9910872578620911,
            0.9861331582069397,
            0.9909288287162781,
            0.9916399717330933,
            0.9839138388633728,
            0.9787637591362,
            0.9858322143554688,
            0.9850044250488281,
            0.9794970154762268
        ]
    },
    "HumanEval/41": {
        "similarity": 0.9883961081504822,
        "body": "    if n == 0:\n        return 0\n    else:\n        return n * (n - 1) // 2",
        "result": "failed: ",
        "similarities": [
            0.9871490001678467,
            0.9777372479438782,
            0.9880614280700684,
            0.9707738161087036,
            0.9861360788345337,
            0.9873617887496948,
            0.9883961081504822,
            0.9866216778755188,
            0.9788554310798645,
            0.9792959094047546,
            0.9867647886276245,
            0.9834998250007629,
            0.9784601926803589,
            0.9759540557861328,
            0.9875784516334534,
            0.9820894002914429,
            0.9558280110359192,
            0.9867259860038757,
            0.9872912168502808,
            0.9802232980728149
        ]
    },
    "HumanEval/42": {
        "similarity": 0.9989289045333862,
        "body": "    return [i+1 for i in l]",
        "result": "passed",
        "similarities": [
            0.9988975524902344,
            0.9873380064964294,
            0.9988975524902344,
            0.9989289045333862,
            0.9986494183540344,
            0.9988685250282288,
            0.9943994283676147,
            0.9989289045333862,
            0.9988975524902344,
            0.998906672000885,
            0.9986121654510498,
            0.9989289045333862,
            0.9989289045333862,
            0.9988685250282288,
            0.9988685250282288,
            0.9989066123962402,
            0.998906672000885,
            0.9988685250282288,
            0.9988975524902344,
            0.9986494183540344
        ]
    },
    "HumanEval/43": {
        "similarity": 0.9949842691421509,
        "body": "    seen = set()\n    for num in l:\n        if -num in seen:\n            return True\n        seen.add(num)\n    return False",
        "result": "passed",
        "similarities": [
            0.9947491884231567,
            0.9921941161155701,
            0.9946504235267639,
            0.9946504235267639,
            0.9946504235267639,
            0.9947491884231567,
            0.9946504235267639,
            0.9946504235267639,
            0.9926247000694275,
            0.9946504235267639,
            0.9948954582214355,
            0.9918730854988098,
            0.9947491884231567,
            0.9949842691421509,
            0.9939706921577454,
            0.9876094460487366,
            0.9648501873016357,
            0.9880731701850891,
            0.9948954582214355,
            0.9913964867591858
        ]
    },
    "HumanEval/44": {
        "similarity": 0.9960756897926331,
        "body": "    if base == 1:\n        return str(x)\n    result = ''\n    while x > 0:\n        result = str(x % base) + result\n        x //= base\n    return result",
        "result": "passed",
        "similarities": [
            0.9902371764183044,
            0.9938392639160156,
            0.9957659840583801,
            0.9923081994056702,
            0.9940249919891357,
            0.9940267205238342,
            0.992099940776825,
            0.9937047362327576,
            0.995031476020813,
            0.9959036111831665,
            0.9959036111831665,
            0.9959036111831665,
            0.9958276152610779,
            0.9929118156433105,
            0.9941484332084656,
            0.9946969747543335,
            0.9930595755577087,
            0.9907147288322449,
            0.9958143830299377,
            0.9960756897926331
        ]
    },
    "HumanEval/45": {
        "similarity": 0.9989086985588074,
        "body": "    return 0.5 * a * h",
        "result": "passed",
        "similarities": [
            0.9989086985588074,
            0.9970393776893616,
            0.9989086985588074,
            0.9989086985588074,
            0.996966540813446,
            0.9982838034629822,
            0.9976808428764343,
            0.9989086985588074,
            0.9989086985588074,
            0.9989086985588074,
            0.9989086985588074,
            0.996067225933075,
            0.9989086985588074,
            0.9933714866638184,
            0.9976807832717896,
            0.9989086985588074,
            0.9989086985588074,
            0.9989086985588074,
            0.9989086985588074,
            0.9989086985588074
        ]
    },
    "HumanEval/46": {
        "similarity": 0.9955919981002808,
        "body": "    if n < 0 or n > 3:\n        return 0\n    a, b, c = 0, 2, 0\n    for _ in range(4, n + 1):\n        a, b, c = b, c, b + c\n    return c",
        "result": "failed: ",
        "similarities": [
            0.9950935244560242,
            0.9955425262451172,
            0.9933469891548157,
            0.9955159425735474,
            0.9907824993133545,
            0.9920338988304138,
            0.9909250140190125,
            0.9888547658920288,
            0.9955919981002808,
            0.9943859577178955,
            0.9951390027999878,
            0.9930288195610046,
            0.9860673546791077,
            0.9931951761245728,
            0.9953076243400574,
            0.9950935244560242,
            0.9950802326202393,
            0.9925420880317688,
            0.9902527332305908,
            0.9918596148490906
        ]
    },
    "HumanEval/47": {
        "similarity": 0.9961066246032715,
        "body": "    sorted_l = sorted(l)\n    n = len(sorted_l)\n    if n % 2 == 1:\n        return sorted_l[n // 2]\n    else:\n        i = (n // 2) - 1\n        return (sorted_l[i] + sorted_l[i + 1]) / 2",
        "result": "passed",
        "similarities": [
            0.9935854077339172,
            0.991037905216217,
            0.9874719381332397,
            0.9912495017051697,
            0.9930931925773621,
            0.9952894449234009,
            0.9960096478462219,
            0.9814376831054688,
            0.9950928092002869,
            0.9961066246032715,
            0.9952906370162964,
            0.993316650390625,
            0.9954391121864319,
            0.9950037598609924,
            0.9950326681137085,
            0.9925886392593384,
            0.994714617729187,
            0.9956942200660706,
            0.9934735894203186,
            0.9946739673614502
        ]
    },
    "HumanEval/48": {
        "similarity": 0.9946818351745605,
        "body": "    text = text.lower()\n    return text == ''.join(reversed(text))",
        "result": "passed",
        "similarities": [
            0.9755188822746277,
            0.9946194887161255,
            0.9923139214515686,
            0.9923981428146362,
            0.9946194887161255,
            0.992488443851471,
            0.9940329194068909,
            0.9929519295692444,
            0.9777573943138123,
            0.9929134249687195,
            0.9942409992218018,
            0.9946818351745605,
            0.9933967590332031,
            0.9933967590332031,
            0.9946818351745605,
            0.992612361907959,
            0.993491530418396,
            0.9942895770072937,
            0.993491530418396,
            0.9942409992218018
        ]
    },
    "HumanEval/49": {
        "similarity": 0.9916095733642578,
        "body": "    return pow(2, n, p)",
        "result": "passed",
        "similarities": [
            0.9916095733642578,
            0.9916095733642578,
            0.9885808825492859,
            0.9788699150085449,
            0.9916094541549683,
            0.9734824299812317,
            0.9916095733642578,
            0.9916095733642578,
            0.9895743131637573,
            0.9694095253944397,
            0.9916095733642578,
            0.9916095733642578,
            0.9908228516578674,
            0.9916094541549683,
            0.9887168407440186,
            0.9916094541549683,
            0.9916095733642578,
            0.9916095733642578,
            0.9706121683120728,
            0.9916095733642578
        ]
    },
    "HumanEval/50": {
        "similarity": 0.9994519948959351,
        "body": "    return \"\".join([chr(((ord(ch) - 5 - ord(\"a\")) % 26) + ord(\"a\")) for ch in s])",
        "result": "passed",
        "similarities": [
            0.9992653727531433,
            0.997639536857605,
            0.9990370869636536,
            0.9994519948959351,
            0.9991171956062317,
            0.9993688464164734,
            0.9994519948959351,
            0.9991517663002014,
            0.998919665813446,
            0.9994162321090698,
            0.9994519948959351,
            0.9992872476577759,
            0.9992872476577759,
            0.9994519948959351,
            0.9992024302482605,
            0.9992872476577759,
            0.9994519948959351,
            0.9992653727531433,
            0.9994519948959351,
            0.9994519948959351
        ]
    },
    "HumanEval/51": {
        "similarity": 0.9962413311004639,
        "body": "    return \"\".join(char for char in text if not any(c.isalpha() and c.lower() in \"aeiou\"))",
        "result": "failed: name 'c' is not defined",
        "similarities": [
            0.9952964782714844,
            0.9927548170089722,
            0.9962238669395447,
            0.9962413311004639,
            0.9960756897926331,
            0.9956700205802917,
            0.9962238669395447,
            0.9956700205802917,
            0.9940266013145447,
            0.9962238669395447,
            0.9960909485816956,
            0.991377592086792,
            0.9911684989929199,
            0.991377592086792,
            0.9954483509063721,
            0.9958881735801697,
            0.9960909485816956,
            0.9952732920646667,
            0.9957759380340576,
            0.991377592086792
        ]
    },
    "HumanEval/52": {
        "similarity": 0.9993073344230652,
        "body": "    all(x < t for x in l)",
        "result": "failed: ",
        "similarities": [
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9874526858329773,
            0.9993073344230652,
            0.9983680248260498,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652,
            0.9993073344230652
        ]
    },
    "HumanEval/53": {
        "similarity": 0.9987361431121826,
        "body": "    return x + y",
        "result": "passed",
        "similarities": [
            0.9978895783424377,
            0.9987361431121826,
            0.9978895783424377,
            0.9978895783424377,
            0.9983564615249634,
            0.9987361431121826,
            0.9987361431121826,
            0.9987361431121826,
            0.9987361431121826,
            0.9987361431121826,
            0.9987361431121826,
            0.9978895783424377,
            0.9924494028091431,
            0.9978895783424377,
            0.9987361431121826,
            0.9987361431121826,
            0.9987361431121826,
            0.9987361431121826,
            0.9978895783424377,
            0.9987361431121826
        ]
    },
    "HumanEval/54": {
        "similarity": 0.9986070394515991,
        "body": "    return sorted(s0) == sorted(s1)",
        "result": "failed: ",
        "similarities": [
            0.9963667988777161,
            0.9963667988777161,
            0.9986070394515991,
            0.9986070394515991,
            0.9966123700141907,
            0.9986070394515991,
            0.9966123700141907,
            0.9986070394515991,
            0.9986070394515991,
            0.9986070394515991,
            0.9986070394515991,
            0.9937322735786438,
            0.9986070394515991,
            0.9986070394515991,
            0.990936279296875,
            0.9986070394515991,
            0.9978083372116089,
            0.9986070394515991,
            0.9986070394515991,
            0.9986070394515991
        ]
    },
    "HumanEval/55": {
        "similarity": 0.9953780770301819,
        "body": "if n <= 1:\n    return n\nelse:\n    a, b = 0, 1\n    for _ in range(2, n + 1):\n        a, b = b, a + b\n    return b",
        "result": "failed: 'return' outside function (<string>, line 13)",
        "similarities": [
            0.995123028755188,
            0.9950414896011353,
            0.9922147989273071,
            0.9922147989273071,
            0.9939783811569214,
            0.9939244985580444,
            0.9903835654258728,
            0.9935517907142639,
            0.9922495484352112,
            0.9953780770301819,
            0.9934970736503601,
            0.992197573184967,
            0.9950414896011353,
            0.9939783811569214,
            0.9950274229049683,
            0.9914370179176331,
            0.9885410666465759,
            0.9935852885246277,
            0.9922147989273071,
            0.9932729601860046
        ]
    },
    "HumanEval/56": {
        "similarity": 0.9979432821273804,
        "body": "    stack = []\n    for char in brackets:\n        if char == \"<\":\n            stack.append(char)\n        elif char == \">\":\n            if not stack or stack.pop() != \"<\":\n                return False\n    return not stack",
        "result": "passed",
        "similarities": [
            0.9799226522445679,
            0.9975435137748718,
            0.9949889183044434,
            0.9978480339050293,
            0.99791419506073,
            0.996738612651825,
            0.9979432821273804,
            0.9978864789009094,
            0.9978055357933044,
            0.9969020485877991,
            0.9978480339050293,
            0.997813880443573,
            0.9969863891601562,
            0.9969755411148071,
            0.9979192018508911,
            0.9969452619552612,
            0.9979432821273804,
            0.9978055357933044,
            0.9978480339050293,
            0.9978480339050293
        ]
    },
    "HumanEval/57": {
        "similarity": 0.9931369423866272,
        "body": "    for i in range(1, len(l)):\n        if (l[i-1] <= l[i]) != (l[0] <= l[i]):\n            return False\n    return True",
        "result": "failed: ",
        "similarities": [
            0.989573061466217,
            0.9901668429374695,
            0.9879733920097351,
            0.9902390241622925,
            0.9931129813194275,
            0.9912649393081665,
            0.9854925274848938,
            0.9907388091087341,
            0.9840007424354553,
            0.991990864276886,
            0.9864189624786377,
            0.9906535744667053,
            0.9877200722694397,
            0.9910097718238831,
            0.9883080720901489,
            0.990822434425354,
            0.9831075072288513,
            0.9931369423866272,
            0.9892153739929199,
            0.9889511466026306
        ]
    },
    "HumanEval/58": {
        "similarity": 0.9960361123085022,
        "body": "    return sorted(set(l1) & set(l2))",
        "result": "passed",
        "similarities": [
            0.9960361123085022,
            0.9960361123085022,
            0.9960361123085022,
            0.9880962371826172,
            0.9960361123085022,
            0.9960361123085022,
            0.9945670962333679,
            0.9921421408653259,
            0.9934450387954712,
            0.9948828816413879,
            0.991298258304596,
            0.9818485975265503,
            0.9960361123085022,
            0.993721604347229,
            0.9960361123085022,
            0.9926874041557312,
            0.9960361123085022,
            0.9953752160072327,
            0.9960361123085022,
            0.9926874041557312
        ]
    },
    "HumanEval/59": {
        "similarity": 0.9901213645935059,
        "body": "    i = 2\n    while i * i <= n:\n        while n % i:\n            i += 1\n        n //= i\n    return n",
        "result": "passed",
        "similarities": [
            0.990014910697937,
            0.9884039163589478,
            0.9809703826904297,
            0.9872885346412659,
            0.990014910697937,
            0.9892335534095764,
            0.9901213645935059,
            0.988292396068573,
            0.9827824831008911,
            0.9875928163528442,
            0.9901213645935059,
            0.9443859457969666,
            0.9837839007377625,
            0.9897101521492004,
            0.9877520203590393,
            0.9817317128181458,
            0.9884039163589478,
            0.9795791506767273,
            0.9892311096191406,
            0.9443859457969666
        ]
    },
    "HumanEval/60": {
        "similarity": 0.9998313784599304,
        "body": "    result = 0\n    for i in range(1, n+1):\n        result += i",
        "result": "failed: ",
        "similarities": [
            0.9998307824134827,
            0.9998307824134827,
            0.9998307824134827,
            0.9998313784599304,
            0.9996104836463928,
            0.9997000694274902,
            0.9998307824134827,
            0.9998307824134827,
            0.9982543587684631,
            0.9998307824134827,
            0.9998307824134827,
            0.9998307824134827,
            0.9998307824134827,
            0.9997000694274902,
            0.9998313784599304,
            0.9998307824134827,
            0.9998307824134827,
            0.9998313784599304,
            0.999714732170105,
            0.9997026324272156
        ]
    },
    "HumanEval/61": {
        "similarity": 0.9984864592552185,
        "body": "    stack = []\n    for char in brackets:\n        if char == \"(\":\n            stack.append(char)\n        elif char == \")\":\n            if not stack or stack.pop() != \"(\":\n                return False\n    return not stack",
        "result": "passed",
        "similarities": [
            0.9980884194374084,
            0.9981905221939087,
            0.9972902536392212,
            0.9968920350074768,
            0.9984864592552185,
            0.9980978965759277,
            0.9980695843696594,
            0.9980734586715698,
            0.9981294274330139,
            0.9984864592552185,
            0.9979091286659241,
            0.9983354210853577,
            0.9980695843696594,
            0.9979445934295654,
            0.998152494430542,
            0.9984864592552185,
            0.9969941973686218,
            0.9981828927993774,
            0.9978675842285156,
            0.9979445934295654
        ]
    },
    "HumanEval/62": {
        "similarity": 0.9932429790496826,
        "body": "    return [i * (x + 1) for i, x in zip(xs[1:], xs)]",
        "result": "failed: ",
        "similarities": [
            0.9927428364753723,
            0.9890086650848389,
            0.9867497682571411,
            0.982094407081604,
            0.9894525408744812,
            0.9917377829551697,
            0.9931793212890625,
            0.9917114973068237,
            0.9911320209503174,
            0.9900942444801331,
            0.9927428364753723,
            0.9931793212890625,
            0.9859297871589661,
            0.9900527000427246,
            0.9927428364753723,
            0.9903028607368469,
            0.9900673627853394,
            0.9932429790496826,
            0.9902833700180054,
            0.9841806292533875
        ]
    },
    "HumanEval/63": {
        "similarity": 0.9964605569839478,
        "body": "    if n <= 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(3, n + 1):\n            a, b = b, a + b\n        return b",
        "result": "failed: ",
        "similarities": [
            0.9947152733802795,
            0.9963911175727844,
            0.98861163854599,
            0.9959807991981506,
            0.994207501411438,
            0.9964110851287842,
            0.9964605569839478,
            0.9948039054870605,
            0.996192455291748,
            0.9954700469970703,
            0.9951240420341492,
            0.9946960806846619,
            0.9895318746566772,
            0.9889171123504639,
            0.9884312152862549,
            0.9962159991264343,
            0.9962208271026611,
            0.9962208271026611,
            0.9964110851287842,
            0.9948357939720154
        ]
    },
    "HumanEval/64": {
        "similarity": 0.9956375956535339,
        "body": "        s = s.lower()\n        count = 0\n        for char in s:\n            if char in 'aeiouy' and (char == 'y' or not s.endswith('y')):\n                count += 1\n        return count",
        "result": "failed: unexpected indent (<string>, line 18)",
        "similarities": [
            0.9909111857414246,
            0.9874092936515808,
            0.9943596720695496,
            0.9945842623710632,
            0.9947006702423096,
            0.9910786151885986,
            0.9917771220207214,
            0.9930183291435242,
            0.9905765056610107,
            0.9955828785896301,
            0.9919884204864502,
            0.9909647703170776,
            0.9905270338058472,
            0.9956375956535339,
            0.9929164052009583,
            0.9909045696258545,
            0.9919775724411011,
            0.9954625964164734,
            0.9889382123947144,
            0.9955406188964844
        ]
    },
    "HumanEval/65": {
        "similarity": 0.9895039796829224,
        "body": "    s = str(x)\n    if shift >= len(s):\n        return s[::-1]\n    return s[-shift:] + s[:-shift]",
        "result": "failed: ",
        "similarities": [
            0.9823921918869019,
            0.9799285531044006,
            0.9889611005783081,
            0.9851362109184265,
            0.9883995056152344,
            0.9876540303230286,
            0.9785823822021484,
            0.9890905022621155,
            0.971441388130188,
            0.9816266894340515,
            0.9853355288505554,
            0.9804154634475708,
            0.9873027801513672,
            0.9877966046333313,
            0.9770570397377014,
            0.9879461526870728,
            0.9776128530502319,
            0.9864170551300049,
            0.9895039796829224,
            0.9895038604736328
        ]
    },
    "HumanEval/66": {
        "similarity": 0.9940962791442871,
        "body": "    sum = 0\n    for char in s:\n        if 'A' <= char <= 'Z':\n            sum += ord(char) - 55",
        "result": "failed: Error",
        "similarities": [
            0.9924302697181702,
            0.9928474426269531,
            0.9924306273460388,
            0.9924302697181702,
            0.9924302697181702,
            0.9924480319023132,
            0.9924302697181702,
            0.992289125919342,
            0.9921738505363464,
            0.9924302697181702,
            0.9920923113822937,
            0.9921738505363464,
            0.9918271899223328,
            0.9923830628395081,
            0.9921738505363464,
            0.9905824065208435,
            0.9925774931907654,
            0.9924302697181702,
            0.9917023181915283,
            0.9940962791442871
        ]
    },
    "HumanEval/67": {
        "similarity": 0.9944689869880676,
        "body": "    s=s.replace('apples ','').replace('and ','').replace('oranges ','').split() \n    return int(n)-int(s[0].replace(' ',))-int(s[-1].replace(' ','))",
        "result": "failed: EOL while scanning string literal (<string>, line 16)",
        "similarities": [
            0.9931504130363464,
            0.9932100176811218,
            0.9927778840065002,
            0.9890751242637634,
            0.9908075928688049,
            0.9921295046806335,
            0.9922878742218018,
            0.9892148375511169,
            0.9917640686035156,
            0.9869129657745361,
            0.993841290473938,
            0.9822688102722168,
            0.9910605549812317,
            0.9927560091018677,
            0.9931215047836304,
            0.9944689869880676,
            0.9930997490882874,
            0.9902679324150085,
            0.9925364255905151,
            0.9909594655036926
        ]
    },
    "HumanEval/68": {
        "similarity": 0.9940444827079773,
        "body": "    min_even = float('inf')\n    min_idx = -1\n    for i, x in enumerate(arr):\n        if x % 2 == 0 and x < min_even:\n            min_even = x\n            min_idx = i\n    return [min_even, min_idx] if min_even != float('inf') else []",
        "result": "passed",
        "similarities": [
            0.9940444827079773,
            0.9932731986045837,
            0.9929652214050293,
            0.9868423938751221,
            0.9939643740653992,
            0.9930931925773621,
            0.9927432537078857,
            0.9920435547828674,
            0.9851164817810059,
            0.9939802289009094,
            0.9914894104003906,
            0.9908187389373779,
            0.9903035759925842,
            0.9932284951210022,
            0.9914394021034241,
            0.9915003776550293,
            0.9925276041030884,
            0.987872302532196,
            0.9863229990005493,
            0.9930179119110107
        ]
    },
    "HumanEval/69": {
        "similarity": 0.9946497678756714,
        "body": "    max_num = -1\n    for num in set(lst):\n        if lst.count(num) >= num and num > 0:\n            max_num = num\n            break\n    return max_num",
        "result": "failed: ",
        "similarities": [
            0.9927610158920288,
            0.9946497678756714,
            0.994415819644928,
            0.9945359826087952,
            0.9923965334892273,
            0.9886893033981323,
            0.9927765727043152,
            0.9812878370285034,
            0.9917207956314087,
            0.9929426312446594,
            0.9915251731872559,
            0.991233229637146,
            0.9926071166992188,
            0.990146815776825,
            0.9915347099304199,
            0.9905367493629456,
            0.9911928772926331,
            0.9812878370285034,
            0.9945340752601624,
            0.9929888844490051
        ]
    },
    "HumanEval/70": {
        "similarity": 0.9932681918144226,
        "body": "    result = []\n    while lst:\n        min_val = min(lst)\n        max_val = max(lst)\n        if len(lst) % 2 == 1:\n            result.append(min_val)\n        lst.remove(min_val)\n        if lst:\n            result.append(max_val)\n            lst.remove(max_val)\n    return result",
        "result": "failed: ",
        "similarities": [
            0.9898191690444946,
            0.9926326274871826,
            0.9891079664230347,
            0.9890910983085632,
            0.9920555949211121,
            0.9912165403366089,
            0.9898095726966858,
            0.9928741455078125,
            0.9928711652755737,
            0.9922164082527161,
            0.991237223148346,
            0.9921483397483826,
            0.9862123727798462,
            0.9921355247497559,
            0.9807589650154114,
            0.9880544543266296,
            0.9883509278297424,
            0.9932681918144226,
            0.9924023151397705,
            0.9876017570495605
        ]
    },
    "HumanEval/71": {
        "similarity": 0.9970076680183411,
        "body": "    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round((s*(s-a)*(s-b)*(s-c))**0.5, 2)\n    else:\n        return -1",
        "result": "passed",
        "similarities": [
            0.9969247579574585,
            0.9964156150817871,
            0.9911221861839294,
            0.9969170093536377,
            0.9967617392539978,
            0.9934754967689514,
            0.9963069558143616,
            0.9918745160102844,
            0.9948808550834656,
            0.994806706905365,
            0.9951931834220886,
            0.9952608346939087,
            0.9940891265869141,
            0.9959166646003723,
            0.9944488406181335,
            0.9970076680183411,
            0.9902144074440002,
            0.9968157410621643,
            0.9947549700737,
            0.9969247579574585
        ]
    },
    "HumanEval/72": {
        "similarity": 0.9976775646209717,
        "body": "    return len(str(q)) == len(str(q))[::-1] and sum(q) <= w",
        "result": "failed: 'int' object is not subscriptable",
        "similarities": [
            0.9971377849578857,
            0.9966895580291748,
            0.9967135190963745,
            0.996658444404602,
            0.9976545572280884,
            0.9972698092460632,
            0.9966741800308228,
            0.996658444404602,
            0.9959281086921692,
            0.9971377849578857,
            0.9971377849578857,
            0.9966741800308228,
            0.9966895580291748,
            0.9959782958030701,
            0.9959842562675476,
            0.9966895580291748,
            0.9976775646209717,
            0.9976775646209717,
            0.9959842562675476,
            0.9959782958030701
        ]
    },
    "HumanEval/73": {
        "similarity": 0.9907352924346924,
        "body": "    arr = list(set(arr))\n    left_to_right = [x for x in arr]\n    right_to_left = left_to_right[::-1]\n\n    min_changes = 0\n    i = j = 0\n\n    while i < len(left_to_right) and j < len(right_to_left):\n        if left_to_right[i] == right_to_left[j]:\n            i += 1\n            j += 1\n        else:\n            min_changes += 1\n            j += 1\n\n    return min_changes",
        "result": "failed: ",
        "similarities": [
            0.9857886433601379,
            0.987422525882721,
            0.9906620383262634,
            0.9902543425559998,
            0.9788791537284851,
            0.9852080345153809,
            0.9725730419158936,
            0.9875037670135498,
            0.9900899529457092,
            0.9809485077857971,
            0.9846882224082947,
            0.984869122505188,
            0.9907352924346924,
            0.9850877523422241,
            0.9776440858840942,
            0.9793410897254944,
            0.990106463432312,
            0.9901847839355469,
            0.9795718193054199,
            0.9804958701133728
        ]
    },
    "HumanEval/74": {
        "similarity": 0.9934230446815491,
        "body": "    if sum(len(i) for i in lst1) <= sum(len(i) for i in lst2):\n        return lst1\n    else:\n        return lst2",
        "result": "passed",
        "similarities": [
            0.9933128356933594,
            0.99107825756073,
            0.9903793334960938,
            0.988709032535553,
            0.9934230446815491,
            0.9884428977966309,
            0.9934230446815491,
            0.9889491200447083,
            0.986435055732727,
            0.9897043108940125,
            0.9878438711166382,
            0.9887312650680542,
            0.9934230446815491,
            0.9934230446815491,
            0.9909371137619019,
            0.9879491925239563,
            0.9911139607429504,
            0.9921668171882629,
            0.9893713593482971,
            0.988434374332428
        ]
    },
    "HumanEval/75": {
        "similarity": 0.9943680167198181,
        "body": "            if b < 2:\n                return False\n            for i in range(2, int(b**0.5) + 1):\n                if b % i == 0:\n                    return False\n            return True\n        primes = [i for i in range(2, a//3+1) if is_prime(i)]\n        for p1 in primes:\n            for p2 in primes:\n                for p3 in primes:\n                    if p1 * p2 * p3 == a:\n                        return True\n        return False",
        "result": "failed: unexpected indent (<string>, line 10)",
        "similarities": [
            0.9877225160598755,
            0.9929212331771851,
            0.9896741509437561,
            0.9881487488746643,
            0.9920080304145813,
            0.9910547137260437,
            0.9943520426750183,
            0.9943680167198181,
            0.9757457375526428,
            0.9892394542694092,
            0.9936662912368774,
            0.9900025129318237,
            0.9918842315673828,
            0.9936327934265137,
            0.9894824028015137,
            0.9939107298851013,
            0.9922916293144226,
            0.9927850365638733,
            0.9943159818649292,
            0.9928399324417114
        ]
    },
    "HumanEval/76": {
        "similarity": 0.9931106567382812,
        "body": "    if n == 0: \n        return x == 1 \n    return pow(n, int(math.log(x, n))) == x",
        "result": "failed: name 'math' is not defined",
        "similarities": [
            0.9931106567382812,
            0.9895738363265991,
            0.9879496693611145,
            0.9913376569747925,
            0.9930030703544617,
            0.9859107136726379,
            0.9926890134811401,
            0.991007387638092,
            0.9604130983352661,
            0.9920561909675598,
            0.9908970594406128,
            0.9914470314979553,
            0.9908970594406128,
            0.9929342865943909,
            0.9875299334526062,
            0.9930604696273804,
            0.9928832650184631,
            0.9915010333061218,
            0.9913705587387085,
            0.9825146198272705
        ]
    },
    "HumanEval/77": {
        "similarity": 0.9960845112800598,
        "body": "    n = int(a ** (1./3.))\n    return n * n * n == a",
        "result": "failed: can't convert complex to int",
        "similarities": [
            0.9958640933036804,
            0.9901884198188782,
            0.9960159659385681,
            0.9935808777809143,
            0.992195725440979,
            0.9939607381820679,
            0.9951636791229248,
            0.9935239553451538,
            0.9937390685081482,
            0.9935258626937866,
            0.9895954132080078,
            0.9951395988464355,
            0.9954349994659424,
            0.9957792162895203,
            0.9928163290023804,
            0.9960845112800598,
            0.9957792162895203,
            0.9957237243652344,
            0.9917852282524109,
            0.9955275654792786
        ]
    },
    "HumanEval/78": {
        "similarity": 0.9950318932533264,
        "body": "        primes = {2, 3, 5, 7, 11, 13, 17}\n        count = 0\n        for digit in num.upper():\n            if digit.isdigit() or (digit >= 'A' and digit <= 'F'):\n                if int(digit, 16) in primes:\n                    count += 1",
        "result": "failed: unexpected indent (<string>, line 20)",
        "similarities": [
            0.9942183494567871,
            0.9907279014587402,
            0.9918909668922424,
            0.9863153696060181,
            0.989822268486023,
            0.9903279542922974,
            0.9930293560028076,
            0.9903962016105652,
            0.9884169697761536,
            0.9942713379859924,
            0.994248628616333,
            0.9936451315879822,
            0.9950318932533264,
            0.994340181350708,
            0.9923121929168701,
            0.9929707050323486,
            0.9939236044883728,
            0.9885350465774536,
            0.992750346660614,
            0.9903945922851562
        ]
    },
    "HumanEval/79": {
        "similarity": 0.9947861433029175,
        "body": "    binary = \"\"\n    while decimal > 0:\n        binary = str(decimal % 2) + binary\n        decimal //= 2\n    return \"db\" + (\"1\" * len(binary)) + \"db\"",
        "result": "failed: ",
        "similarities": [
            0.9947861433029175,
            0.9920216798782349,
            0.9874701499938965,
            0.9944755434989929,
            0.9947861433029175,
            0.9885125756263733,
            0.9937838315963745,
            0.9892004132270813,
            0.9867549538612366,
            0.9936814904212952,
            0.9936055541038513,
            0.9947861433029175,
            0.9858599305152893,
            0.9902383685112,
            0.9818743467330933,
            0.994033694267273,
            0.9947861433029175,
            0.9919980764389038,
            0.9891759157180786,
            0.9930924773216248
        ]
    },
    "HumanEval/80": {
        "similarity": 0.9924778342247009,
        "body": "    return len(s) >= 3 and len(set([s[i:i+3] for i in range(len(s)-2)])) == (len(s)-2)//3 + 1",
        "result": "failed: abcd",
        "similarities": [
            0.9899700880050659,
            0.9894413352012634,
            0.9915407299995422,
            0.9906185865402222,
            0.9893503785133362,
            0.9896262288093567,
            0.9899700880050659,
            0.9904271364212036,
            0.9845533967018127,
            0.9898529052734375,
            0.9923812747001648,
            0.9913093447685242,
            0.9910027384757996,
            0.9899700880050659,
            0.9898529052734375,
            0.9906865954399109,
            0.9902039766311646,
            0.9924778342247009,
            0.9909666180610657,
            0.9859225749969482
        ]
    },
    "HumanEval/81": {
        "similarity": 0.9861210584640503,
        "body": "    if len(grades) == 0:\n        return []\n    letter_grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E']\n    threshold_gpas = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0]\n    result = []\n    for g in grades:\n        if g >= threshold_gpas[12]:\n            result.append(letter_grades[13])\n        elif g >= threshold_gpas[11]:\n            result.append(letter_grades[10])\n        elif g >= threshold_gpas[9]:\n            result.append(letter_grades[8])\n        elif g >= threshold_gpas[7]:\n            result.append(letter_grades[6])\n        elif g >= threshold_gpas[5]:\n            result.append(letter_grades[4])\n        elif g >= threshold_gpas[3]:\n            result.append(letter_grades[2])\n        elif g >= threshold_gpas[1]:\n            result.append(letter_grades[0])",
        "result": "failed: list index out of range",
        "similarities": [
            0.9701158404350281,
            0.9793976545333862,
            0.9849947690963745,
            0.981467604637146,
            0.9844904541969299,
            0.9846967458724976,
            0.9732686877250671,
            0.9794594645500183,
            0.9840818047523499,
            0.9812110066413879,
            0.9806203246116638,
            0.9852617383003235,
            0.9830508232116699,
            0.9848695993423462,
            0.9861210584640503,
            0.9824783205986023,
            0.9748348593711853,
            0.9848966002464294,
            0.9572932720184326,
            0.984291672706604
        ]
    },
    "HumanEval/82": {
        "similarity": 0.9989475607872009,
        "body": "        if n < 2:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n        return is_prime(len(string))",
        "result": "failed: unexpected indent (<string>, line 11)",
        "similarities": [
            0.998839259147644,
            0.998906672000885,
            0.9988383054733276,
            0.9989475607872009,
            0.9983831644058228,
            0.9989475607872009,
            0.998906672000885,
            0.9967771768569946,
            0.9980101585388184,
            0.9989475607872009,
            0.9987536072731018,
            0.9987900257110596,
            0.9989466667175293,
            0.9930851459503174,
            0.9983419179916382,
            0.9983725547790527,
            0.9987703561782837,
            0.9983419179916382,
            0.998839259147644,
            0.9981420636177063
        ]
    },
    "HumanEval/83": {
        "similarity": 0.9965307116508484,
        "body": "    count = 0\n    for i in range(10**(n-1), 10**n):\n        if str(i)[0] == '1' or str(i)[-1] == '1':\n            count += 1",
        "result": "failed: ",
        "similarities": [
            0.9964910745620728,
            0.9962271451950073,
            0.9904406666755676,
            0.9959514141082764,
            0.9962586760520935,
            0.9853534698486328,
            0.9963873028755188,
            0.9899625182151794,
            0.9964032769203186,
            0.9964614510536194,
            0.9844201803207397,
            0.9964614510536194,
            0.9957765340805054,
            0.9947826862335205,
            0.9965307116508484,
            0.9962800741195679,
            0.9964614510536194,
            0.99181067943573,
            0.9936954379081726,
            0.9963346719741821
        ]
    },
    "HumanEval/84": {
        "similarity": 0.992020845413208,
        "body": "    total = 0\n    while N > 0:\n        total += N % 2\n        N //= 2\n    return bin(total)[2:]",
        "result": "failed: Error",
        "similarities": [
            0.9896800518035889,
            0.9902799725532532,
            0.9874507784843445,
            0.9895641207695007,
            0.9882722496986389,
            0.9906483888626099,
            0.9902396202087402,
            0.9843897819519043,
            0.992020845413208,
            0.9891474843025208,
            0.9905554056167603,
            0.9877863526344299,
            0.9868656992912292,
            0.9869817495346069,
            0.9875780344009399,
            0.9901881814002991,
            0.9865577220916748,
            0.9821913838386536,
            0.9902396202087402,
            0.9874507784843445
        ]
    },
    "HumanEval/85": {
        "similarity": 0.9973909258842468,
        "body": "    result = sum(i for i in lst[1::2] if i % 2 == 0)",
        "result": "failed: ",
        "similarities": [
            0.9967538714408875,
            0.9960684776306152,
            0.9961776733398438,
            0.9944339394569397,
            0.9973909258842468,
            0.9961776733398438,
            0.9960684776306152,
            0.9858546257019043,
            0.9973909258842468,
            0.9958837628364563,
            0.9972085356712341,
            0.9963603615760803,
            0.9971188902854919,
            0.9951258301734924,
            0.9960684776306152,
            0.9961776733398438,
            0.9928663372993469,
            0.9973909258842468,
            0.9973909258842468,
            0.9973909258842468
        ]
    },
    "HumanEval/86": {
        "similarity": 0.9932584166526794,
        "body": "    return ' '.join([ ''.join(sorted(word)) if word else ' ' for word in s.split()])",
        "result": "passed",
        "similarities": [
            0.9925011396408081,
            0.9925408959388733,
            0.9932422637939453,
            0.9928544759750366,
            0.9925011396408081,
            0.9850726127624512,
            0.9887570738792419,
            0.992775559425354,
            0.9813776612281799,
            0.9920443296432495,
            0.9903897047042847,
            0.9826503396034241,
            0.9932584166526794,
            0.9932422637939453,
            0.9826504588127136,
            0.9928452372550964,
            0.992775559425354,
            0.9925011396408081,
            0.9928544759750366,
            0.992775559425354
        ]
    },
    "HumanEval/87": {
        "similarity": 0.9939647316932678,
        "body": "    for i, row in enumerate(lst):\n        x_coords = [(i, j) for j, val in enumerate(row) if val == x]\n        result.extend(sorted(x_coords, key=lambda coord: (-coord[1], coord[0])))\n    return result",
        "result": "failed: name 'result' is not defined",
        "similarities": [
            0.9871115684509277,
            0.9939647316932678,
            0.9920432567596436,
            0.9881921410560608,
            0.9918513298034668,
            0.9906629323959351,
            0.9915086627006531,
            0.9914756417274475,
            0.9901056885719299,
            0.9912034869194031,
            0.9899924397468567,
            0.9880773425102234,
            0.9926862120628357,
            0.9926862120628357,
            0.9893507957458496,
            0.9926862120628357,
            0.9893507957458496,
            0.9827284812927246,
            0.9884097576141357,
            0.993500292301178
        ]
    },
    "HumanEval/88": {
        "similarity": 0.9953388571739197,
        "body": "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array)[::-1]\n    else:\n        return sorted(array)",
        "result": "failed: list index out of range",
        "similarities": [
            0.9943149089813232,
            0.9943149089813232,
            0.9943149089813232,
            0.9820194244384766,
            0.9950764179229736,
            0.9943149089813232,
            0.9923449158668518,
            0.9943149089813232,
            0.9906855225563049,
            0.995094895362854,
            0.993476152420044,
            0.9897340536117554,
            0.9917649030685425,
            0.9943149089813232,
            0.9895517230033875,
            0.9927608966827393,
            0.9953388571739197,
            0.9881294965744019,
            0.9943149089813232,
            0.992743968963623
        ]
    },
    "HumanEval/89": {
        "similarity": 0.9970758557319641,
        "body": "    result = \"\"\n    for char in s:\n        if char.isalpha():\n            ascii_offset = 65 if char.isupper() else 97\n            encrypted_char = chr((ord(char) - ascii_offset + (2 * 2)) % 26 + ascii_offset)\n            result += encrypted_char\n        else:\n            result += char",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9969438314437866,
            0.9967466592788696,
            0.9915941953659058,
            0.9961237907409668,
            0.9968693256378174,
            0.9936100840568542,
            0.9961280822753906,
            0.997059166431427,
            0.9970758557319641,
            0.9953583478927612,
            0.9963425397872925,
            0.9966731667518616,
            0.9953472018241882,
            0.993619441986084,
            0.9964326620101929,
            0.9967981576919556,
            0.9954113364219666,
            0.9852731823921204,
            0.9963887929916382,
            0.9961251616477966
        ]
    },
    "HumanEval/90": {
        "similarity": 0.9952952861785889,
        "body": "\tif len(lst) < 2 or min(lst) > max(lst):\n\t\treturn None\n\tlst.sort()\n\treturn lst[1] if lst[0] != lst[1] else None",
        "result": "failed: inconsistent use of tabs and spaces in indentation (<string>, line 13)",
        "similarities": [
            0.9939292073249817,
            0.9949296712875366,
            0.9930434226989746,
            0.9950674176216125,
            0.9943241477012634,
            0.9941211342811584,
            0.9914261698722839,
            0.9950674176216125,
            0.9942477345466614,
            0.9945237040519714,
            0.9899623394012451,
            0.9950674176216125,
            0.993247389793396,
            0.9950674176216125,
            0.993821918964386,
            0.9941211342811584,
            0.9941211342811584,
            0.9948363304138184,
            0.9952952861785889,
            0.9916867613792419
        ]
    },
    "HumanEval/91": {
        "similarity": 0.9939671754837036,
        "body": "    for sentence in S.split('.|?|! '): \n        if sentence.strip() and sentence.lower().startswith('i'): \n            yield 1",
        "result": "failed: Test 1",
        "similarities": [
            0.982319712638855,
            0.9892704486846924,
            0.9935134053230286,
            0.9835062623023987,
            0.9900505542755127,
            0.9926539063453674,
            0.9916612505912781,
            0.9921401143074036,
            0.9847140312194824,
            0.9923447370529175,
            0.9925692677497864,
            0.9911006093025208,
            0.992591381072998,
            0.9939671754837036,
            0.9909616112709045,
            0.9922760725021362,
            0.990930438041687,
            0.9922804832458496,
            0.9869117736816406,
            0.9907407164573669
        ]
    },
    "HumanEval/92": {
        "similarity": 0.9966047406196594,
        "body": "    if isinstance(x, int) and isinstance(y, int) and isinstance(z, int):\n        return x == y + z or x == z + y or y == z + x",
        "result": "failed: This prints if this assert fails 2 (good for debugging!)",
        "similarities": [
            0.9966047406196594,
            0.994430422782898,
            0.9958650469779968,
            0.9965677857398987,
            0.9933047890663147,
            0.9947248101234436,
            0.9933047890663147,
            0.9957656860351562,
            0.9961515665054321,
            0.9925333261489868,
            0.995606005191803,
            0.9948950409889221,
            0.9965677857398987,
            0.994534432888031,
            0.9962326884269714,
            0.9946638345718384,
            0.9939491748809814,
            0.9939300417900085,
            0.9961515665054321,
            0.9964486956596375
        ]
    },
    "HumanEval/93": {
        "similarity": 0.9918265342712402,
        "body": "    result = \"\"\n    for char in message:\n        if char.isalpha():\n            if char.lower() in \"aeiou\":\n                result += chr((ord(char) - 97 + 3) % 26 + 97)\n            elif char.upper() in \"AEIOU\":\n                result += chr((ord(char) - 65 + 3) % 26 + 65)\n            else:\n                if char.isupper():\n                    result += char.upper()\n                else:\n                    result += char.lower()\n        else:\n            result += char\n    return result",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9854685068130493,
            0.9918265342712402,
            0.9891989827156067,
            0.9881134033203125,
            0.9881423115730286,
            0.9870150685310364,
            0.9914677143096924,
            0.9908897280693054,
            0.9907228350639343,
            0.9872673749923706,
            0.9914343953132629,
            0.991615891456604,
            0.9429214000701904,
            0.9916942119598389,
            0.9866170287132263,
            0.9853692650794983,
            0.9865732789039612,
            0.9917200803756714,
            0.9906343221664429,
            0.9855837821960449
        ]
    },
    "HumanEval/94": {
        "similarity": 0.9972327351570129,
        "body": "        if n < 2:\n            return False\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    max_prime = max((x for x in lst if is_prime(x)), default=0)\n    return sum(int(digit) for digit in str(max_prime))",
        "result": "failed: unexpected indent (<string>, line 15)",
        "similarities": [
            0.9970319867134094,
            0.9962400197982788,
            0.9951607584953308,
            0.9970301389694214,
            0.9970390796661377,
            0.9965298175811768,
            0.9969586730003357,
            0.9969257712364197,
            0.9833751320838928,
            0.9938147664070129,
            0.9969832897186279,
            0.9970672130584717,
            0.9960742592811584,
            0.9969257712364197,
            0.9966709613800049,
            0.990809977054596,
            0.9969567656517029,
            0.9965704083442688,
            0.9972327351570129,
            0.9927846193313599
        ]
    },
    "HumanEval/95": {
        "similarity": 0.9948234558105469,
        "body": "    if not dict:\n        return False\n    all_lower = all(isinstance(k, str) and k.islower() for k in dict)\n    all_upper = all(isinstance(k, str) and k.isupper() for k in dict)\n    return all_lower or all_upper",
        "result": "passed",
        "similarities": [
            0.9892470836639404,
            0.9937673211097717,
            0.9935521483421326,
            0.9925331473350525,
            0.9928226470947266,
            0.9912534952163696,
            0.9935604929924011,
            0.9934437274932861,
            0.9947556257247925,
            0.9948234558105469,
            0.9936747550964355,
            0.993136465549469,
            0.9943826794624329,
            0.9895713329315186,
            0.992731511592865,
            0.9797813296318054,
            0.9907258749008179,
            0.9926945567131042,
            0.9943826794624329,
            0.9932014346122742
        ]
    },
    "HumanEval/96": {
        "similarity": 0.9987096190452576,
        "body": "        if k < 2:\n            return False\n        for i in range(2, int(k**0.5) + 1):\n            if k % i == 0:\n                return False\n        return True\n\n    result = []\n    i = 2\n    while len(result) < n and i <= n:\n        if is_prime(i):\n            result.append(i)\n        i += 1",
        "result": "failed: unexpected indent (<string>, line 13)",
        "similarities": [
            0.9953179955482483,
            0.9981458783149719,
            0.9956779479980469,
            0.9984572529792786,
            0.9976102113723755,
            0.9985074400901794,
            0.9978013634681702,
            0.9979044198989868,
            0.998116135597229,
            0.9981450438499451,
            0.9981886148452759,
            0.9982446432113647,
            0.9980260729789734,
            0.9985427856445312,
            0.9969350099563599,
            0.9987096190452576,
            0.9984779357910156,
            0.998458981513977,
            0.9976552724838257,
            0.9980396628379822
        ]
    },
    "HumanEval/97": {
        "similarity": 0.9974954724311829,
        "body": "    return (a % 10) * (b % 10)",
        "result": "passed",
        "similarities": [
            0.9974954724311829,
            0.9974954724311829,
            0.9974954724311829,
            0.9964436888694763,
            0.9974954724311829,
            0.9974954724311829,
            0.996772289276123,
            0.995182454586029,
            0.9961673617362976,
            0.9839345812797546,
            0.9885041117668152,
            0.9964436292648315,
            0.9974954724311829,
            0.9974954724311829,
            0.9974954724311829,
            0.9974954724311829,
            0.9972856640815735,
            0.9974954724311829,
            0.9961673617362976,
            0.9974954724311829
        ]
    },
    "HumanEval/98": {
        "similarity": 0.996279776096344,
        "body": "    for i in range(0, len(s), 2): \n        if s[i].upper() in 'AOUE': \n            yield 1",
        "result": "failed: ",
        "similarities": [
            0.9940316081047058,
            0.9957269430160522,
            0.993566632270813,
            0.9951491355895996,
            0.9951918721199036,
            0.9956893920898438,
            0.9947652220726013,
            0.9947652220726013,
            0.9955722689628601,
            0.9951521158218384,
            0.995232343673706,
            0.9937812685966492,
            0.9948058128356934,
            0.9953951835632324,
            0.9953951835632324,
            0.9934810996055603,
            0.9953026175498962,
            0.9953026175498962,
            0.9936730265617371,
            0.996279776096344
        ]
    },
    "HumanEval/99": {
        "similarity": 0.9945036172866821,
        "body": "    if isinstance(value, str):\n        value = float(value)\n    return round(value) if abs(value - int(round(value))) < 0.5 else int(round(value)) if value >= 0 else int(round(-value)) - 1",
        "result": "failed: Test 2",
        "similarities": [
            0.9908748269081116,
            0.9882392883300781,
            0.9945036172866821,
            0.9930886030197144,
            0.9887686371803284,
            0.9915475249290466,
            0.9913894534111023,
            0.9874946475028992,
            0.9829029440879822,
            0.9935766458511353,
            0.9912352561950684,
            0.9908049702644348,
            0.9913074374198914,
            0.9938774108886719,
            0.9925644397735596,
            0.9898910522460938,
            0.9901115894317627,
            0.989814281463623,
            0.991036593914032,
            0.9923186898231506
        ]
    },
    "HumanEval/100": {
        "similarity": 0.9933839440345764,
        "body": "    if n % 2 == 0:\n        pile = [n]\n        for _ in range(n - 1):\n            pile.append(pile[-1] + 2)\n    else:\n        pile = [n]\n        for _ in range(n - 1):\n            pile.append(pile[-1] + 1)",
        "result": "failed: Test 3",
        "similarities": [
            0.9878455996513367,
            0.9917335510253906,
            0.9918429851531982,
            0.9921616315841675,
            0.9917722940444946,
            0.9859552979469299,
            0.9931092858314514,
            0.9878431558609009,
            0.9909547567367554,
            0.9923390746116638,
            0.9873079061508179,
            0.9911841154098511,
            0.9921204447746277,
            0.9933839440345764,
            0.9933737516403198,
            0.9904510378837585,
            0.9926163554191589,
            0.9924232959747314,
            0.9919621348381042,
            0.9898860454559326
        ]
    },
    "HumanEval/101": {
        "similarity": 0.9969893097877502,
        "body": "    return [x.strip() for x in s.replace(\",\", \" \").split()]",
        "result": "passed",
        "similarities": [
            0.9955417513847351,
            0.9963091015815735,
            0.9911043047904968,
            0.9963091015815735,
            0.9955417513847351,
            0.99577796459198,
            0.9967595338821411,
            0.9969726204872131,
            0.9955417513847351,
            0.9955417513847351,
            0.9900649189949036,
            0.9954901337623596,
            0.9960981607437134,
            0.9969726204872131,
            0.9955417513847351,
            0.9961267113685608,
            0.9955417513847351,
            0.9968701601028442,
            0.9969893097877502,
            0.9872857928276062
        ]
    },
    "HumanEval/102": {
        "similarity": 0.9941420555114746,
        "body": "    if x % 2 == 0 and y % 2 == 0:\n        return max(x, y)\n    else:\n        for i in range(max(x, y), min(x, y) - 1, -1):\n            if i % 2 == 0:\n                return i\n        return -1",
        "result": "failed: ",
        "similarities": [
            0.9933773875236511,
            0.9854134321212769,
            0.9938486814498901,
            0.9934017658233643,
            0.9938679933547974,
            0.9934156537055969,
            0.9750848412513733,
            0.9941420555114746,
            0.9926502704620361,
            0.9915284514427185,
            0.9898079633712769,
            0.9941291809082031,
            0.9933072328567505,
            0.9934095144271851,
            0.9885140657424927,
            0.9926090240478516,
            0.9919387698173523,
            0.9933453798294067,
            0.9901182055473328,
            0.9923698306083679
        ]
    },
    "HumanEval/103": {
        "similarity": 0.9970307946205139,
        "body": "    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(round(avg)).replace(\"0b\", \"\")",
        "result": "failed: ",
        "similarities": [
            0.9952327609062195,
            0.9964605569839478,
            0.995536208152771,
            0.9950742125511169,
            0.9968635439872742,
            0.9954984784126282,
            0.9963442087173462,
            0.9968643188476562,
            0.9968635439872742,
            0.9960495829582214,
            0.9964736104011536,
            0.9962694048881531,
            0.9966368675231934,
            0.9966368675231934,
            0.995630145072937,
            0.9970307946205139,
            0.9970307946205139,
            0.9940578937530518,
            0.9964282512664795,
            0.9955026507377625
        ]
    },
    "HumanEval/104": {
        "similarity": 0.9935727715492249,
        "body": "        return sorted([num for num in x if not any(int(digit) % 2 == 0 for digit in str(num))])",
        "result": "failed: unexpected indent (<string>, line 14)",
        "similarities": [
            0.9928117990493774,
            0.9793686270713806,
            0.9656542539596558,
            0.9935727715492249,
            0.9895173907279968,
            0.9935512542724609,
            0.9843334555625916,
            0.9894939064979553,
            0.9833335876464844,
            0.9930158257484436,
            0.9934783577919006,
            0.9935001730918884,
            0.9935429096221924,
            0.9928106069564819,
            0.9935727715492249,
            0.9935001730918884,
            0.9871836304664612,
            0.9935001730918884,
            0.9890435934066772,
            0.9869195818901062
        ]
    },
    "HumanEval/105": {
        "similarity": 0.9942194223403931,
        "body": "    names = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    result = [names[i-1] for i in reversed(sorted([i for i in arr if 1 <= i <= 9]))]\n    return result",
        "result": "passed",
        "similarities": [
            0.9922184348106384,
            0.9874354004859924,
            0.9906965494155884,
            0.9932968020439148,
            0.9942194223403931,
            0.9931961894035339,
            0.9925248026847839,
            0.9907998442649841,
            0.9908927083015442,
            0.9929096698760986,
            0.9907320737838745,
            0.9914421439170837,
            0.9930317401885986,
            0.992608904838562,
            0.9915376305580139,
            0.991481363773346,
            0.9922686219215393,
            0.9922916293144226,
            0.9898288249969482,
            0.9925488233566284
        ]
    },
    "HumanEval/106": {
        "similarity": 0.9962499737739563,
        "body": "if n < 1:\n    return []\nresult = []\nfor i in range(1, n + 1):\n    if i % 2 == 0:\n        result.append(fact(i))\n    else:\n        result.append(sum(range(1, i + 1)))",
        "result": "failed: 'return' outside function (<string>, line 12)",
        "similarities": [
            0.9948790669441223,
            0.99544757604599,
            0.9954436421394348,
            0.9959403872489929,
            0.994199275970459,
            0.9936339855194092,
            0.9957082867622375,
            0.9954127073287964,
            0.9960746765136719,
            0.9901441335678101,
            0.9962370991706848,
            0.9931818246841431,
            0.9874688982963562,
            0.9962041974067688,
            0.9863292574882507,
            0.9962499737739563,
            0.9962205290794373,
            0.995715320110321,
            0.9897676706314087,
            0.9954085946083069
        ]
    },
    "HumanEval/107": {
        "similarity": 0.9930183291435242,
        "body": "    even_count = sum(1 for i in range(1, n+1) if str(i) == str(i)[::-1] and i % 2 == 0)\n    odd_count = sum(1 for i in range(1, n+1) if str(i) == str(i)[::-1] and i % 2 != 0)\n    return even_count, odd_count",
        "result": "passed",
        "similarities": [
            0.9855917096138,
            0.9873518943786621,
            0.9862660765647888,
            0.9929247498512268,
            0.986826479434967,
            0.9924569725990295,
            0.9873518943786621,
            0.991513192653656,
            0.9865379333496094,
            0.9866688251495361,
            0.9890066385269165,
            0.991513192653656,
            0.9930183291435242,
            0.9889253377914429,
            0.9875551462173462,
            0.9855917096138,
            0.9924892783164978,
            0.9920373558998108,
            0.9870011210441589,
            0.9918454885482788
        ]
    },
    "HumanEval/108": {
        "similarity": 0.993678629398346,
        "body": "    return sum(1 for num in arr if sum(int(digit) if digit > '0' else -int(digit[1:]) for digit in str(abs(num))) > 0)",
        "result": "failed: invalid literal for int() with base 10: ''",
        "similarities": [
            0.9931979775428772,
            0.9846549034118652,
            0.9902141094207764,
            0.9925187826156616,
            0.9927382469177246,
            0.9928829669952393,
            0.9931369423866272,
            0.9853154420852661,
            0.9933359026908875,
            0.9931391477584839,
            0.9902141094207764,
            0.9905295372009277,
            0.993678629398346,
            0.9931910634040833,
            0.9933527708053589,
            0.9884188771247864,
            0.9930325746536255,
            0.9874460101127625,
            0.9931391477584839,
            0.9859551787376404
        ]
    },
    "HumanEval/109": {
        "similarity": 0.9937789440155029,
        "body": "    if len(arr) == 0 or all(arr[i] <= arr[i+1] for i in range(len(arr)-1)):\n        return True\n    else:\n        return False",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9915938377380371,
            0.9937789440155029,
            0.9922996163368225,
            0.9886718392372131,
            0.9909406304359436,
            0.9919235110282898,
            0.9937789440155029,
            0.9885576963424683,
            0.9916614890098572,
            0.9910922050476074,
            0.979561448097229,
            0.9902321696281433,
            0.9912571310997009,
            0.9893766045570374,
            0.9896985292434692,
            0.9905632734298706,
            0.9918186068534851,
            0.9893378019332886,
            0.9922216534614563,
            0.9889040589332581
        ]
    },
    "HumanEval/110": {
        "similarity": 0.9958020448684692,
        "body": "    if not all(num % 2 == 0 for num in lst1):\n        return \"NO\" if any(num % 2 != 0 for num in lst2) else \"YES\"\n    return \"NO\"",
        "result": "failed: ",
        "similarities": [
            0.9900898337364197,
            0.9947726726531982,
            0.9949946999549866,
            0.9958020448684692,
            0.9903283715248108,
            0.9950794577598572,
            0.9949145317077637,
            0.9938878417015076,
            0.9936754107475281,
            0.9917528033256531,
            0.9838431477546692,
            0.9918761849403381,
            0.9950794577598572,
            0.989102303981781,
            0.9949997663497925,
            0.9934947490692139,
            0.9953089356422424,
            0.9939804077148438,
            0.9947212934494019,
            0.9915526509284973
        ]
    },
    "HumanEval/111": {
        "similarity": 0.9939510822296143,
        "body": "    d = {}\n    for letter in test.split():\n        if letter not in d:\n            d[letter] = 1\n        else:\n            d[letter] += 1\n    max_count = max(d.values())\n    most_common_letters = [k for k, v in d.items() if v == max_count]\n    return {k: max_count for k in most_common_letters}",
        "result": "failed: max() arg is an empty sequence",
        "similarities": [
            0.9926890134811401,
            0.9905776977539062,
            0.9841962456703186,
            0.9919732809066772,
            0.993605375289917,
            0.9924637675285339,
            0.9828457236289978,
            0.9923380017280579,
            0.9939510822296143,
            0.9930204153060913,
            0.9738816022872925,
            0.9911695122718811,
            0.9926842451095581,
            0.9889551401138306,
            0.9914000630378723,
            0.9929195046424866,
            0.9914563894271851,
            0.9929227232933044,
            0.9938782453536987,
            0.987440824508667
        ]
    },
    "HumanEval/112": {
        "similarity": 0.9972409605979919,
        "body": "    result = ''.join([i for i in s if i not in c])\n    return (result, result != result[::-1])",
        "result": "failed: ",
        "similarities": [
            0.9950118064880371,
            0.9968970417976379,
            0.9954074025154114,
            0.9967679381370544,
            0.9954487681388855,
            0.9967492818832397,
            0.9971919655799866,
            0.9910048246383667,
            0.9942148923873901,
            0.9952915906906128,
            0.9941240549087524,
            0.9951137900352478,
            0.9972409605979919,
            0.9967038035392761,
            0.9943299889564514,
            0.9961477518081665,
            0.994887113571167,
            0.9900285601615906,
            0.9972288012504578,
            0.9960046410560608
        ]
    },
    "HumanEval/113": {
        "similarity": 0.9959058165550232,
        "body": "        return [f\"the number of odd elements {'n' if i == '1' else ''}{str(i)}n the str{str(i)}ng {i} of the input.\" for i in ''.join(map(str, lst[0])).split()]",
        "result": "failed: unexpected indent (<string>, line 14)",
        "similarities": [
            0.9923505187034607,
            0.9947789907455444,
            0.9936677813529968,
            0.9950290322303772,
            0.9932945966720581,
            0.9941439628601074,
            0.9954368472099304,
            0.9937669038772583,
            0.9955599904060364,
            0.9959058165550232,
            0.9951075315475464,
            0.9953570365905762,
            0.9951440691947937,
            0.9929679036140442,
            0.9953004717826843,
            0.9951271414756775,
            0.9956381916999817,
            0.9935469627380371,
            0.9958956837654114,
            0.9958174824714661
        ]
    },
    "HumanEval/114": {
        "similarity": 0.9958635568618774,
        "body": "    total_sum = float('inf')\n    current_sum = 0\n    left = 0\n    \n    for right in range(len(nums)):\n        current_sum += nums[right]\n        \n        while current_sum >= min(nums):\n            total_sum = min(total_sum, current_sum)\n            current_sum -= nums[left]\n            left += 1",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9945666790008545,
            0.9921879172325134,
            0.993640124797821,
            0.9953776001930237,
            0.9949676990509033,
            0.9957339763641357,
            0.9935659170150757,
            0.9949046969413757,
            0.9939786195755005,
            0.992805004119873,
            0.9939486980438232,
            0.9934852123260498,
            0.9946078062057495,
            0.9930399656295776,
            0.9954715371131897,
            0.9958635568618774,
            0.985176682472229,
            0.9941520690917969,
            0.9857089519500732,
            0.99558025598526
        ]
    },
    "HumanEval/115": {
        "similarity": 0.9919877648353577,
        "body": "    total_water = sum(sum(row) for row in grid)\n    buckets_needed = math.ceil(total_water / float(capacity))\n    return buckets_needed",
        "result": "failed: Error",
        "similarities": [
            0.9873900413513184,
            0.9881864786148071,
            0.979533851146698,
            0.9803004264831543,
            0.9822205305099487,
            0.9873713254928589,
            0.9882268309593201,
            0.9868369698524475,
            0.9891489744186401,
            0.988237202167511,
            0.98888099193573,
            0.9883211255073547,
            0.9820462465286255,
            0.9829867482185364,
            0.9896194338798523,
            0.9917445778846741,
            0.9919877648353577,
            0.9884999990463257,
            0.9873900413513184,
            0.9875313639640808
        ]
    },
    "HumanEval/116": {
        "similarity": 0.9997990131378174,
        "body": "    arr.sort(key=lambda x: (bin(x).count('1'), x))",
        "result": "failed: ",
        "similarities": [
            0.9997990131378174,
            0.9990577697753906,
            0.9997990131378174,
            0.999161958694458,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174,
            0.999161958694458,
            0.9997990131378174,
            0.9997990131378174,
            0.999161958694458,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174,
            0.9997990131378174
        ]
    },
    "HumanEval/117": {
        "similarity": 0.9973160624504089,
        "body": "        words = s.split()\n        result = []\n        for word in words:\n            consonants = sum(1 for char in word if not char.isalpha() or char.lower() not in 'aeiou')\n            if consonants == n:\n                result.append(word)\n        return result",
        "result": "failed: unexpected indent (<string>, line 15)",
        "similarities": [
            0.9970653057098389,
            0.9905000925064087,
            0.9970402121543884,
            0.9969351887702942,
            0.9923431277275085,
            0.9926539063453674,
            0.9970085620880127,
            0.9973160624504089,
            0.9963291883468628,
            0.9970085620880127,
            0.995762050151825,
            0.9863331317901611,
            0.9971333742141724,
            0.9964906573295593,
            0.9957533478736877,
            0.9972746968269348,
            0.9954368472099304,
            0.9966913461685181,
            0.997150719165802,
            0.9966617226600647
        ]
    },
    "HumanEval/118": {
        "similarity": 0.9963773488998413,
        "body": "    for i in range(len(word) - 2, -1, -1):\n        if word[i].lower() in 'aeiou':\n            for j in range(i-1, -1, -1):\n                if not word[j].lower() in 'aeiou':\n                    return word[i]\n            return ''\n    return ''",
        "result": "failed: ",
        "similarities": [
            0.9963226318359375,
            0.9961653351783752,
            0.9902782440185547,
            0.9938451051712036,
            0.9963773488998413,
            0.9962590932846069,
            0.9922376275062561,
            0.9942454099655151,
            0.9948711395263672,
            0.9952784180641174,
            0.9962515830993652,
            0.9963145852088928,
            0.9946786761283875,
            0.9958006143569946,
            0.9949254393577576,
            0.9948844909667969,
            0.9956017732620239,
            0.9962760806083679,
            0.9945023059844971,
            0.9947752952575684
        ]
    },
    "HumanEval/119": {
        "similarity": 0.9968032836914062,
        "body": "    stack = 0\n    for s in lst:\n        for c in s:\n            if c == '(':\n                stack += 1\n            elif c == ')':\n                stack -= 1\n            if stack < 0:\n                return 'No'\n    return 'Yes' if stack == 0 else 'No'",
        "result": "failed: ",
        "similarities": [
            0.9968032836914062,
            0.9968032836914062,
            0.9966161847114563,
            0.9967482686042786,
            0.9953674674034119,
            0.9942516684532166,
            0.9958359599113464,
            0.9959704875946045,
            0.9948708415031433,
            0.9962511658668518,
            0.992561936378479,
            0.9942632913589478,
            0.9966161847114563,
            0.9966956973075867,
            0.9959444999694824,
            0.9739347100257874,
            0.9967597126960754,
            0.9956019520759583,
            0.9962493777275085,
            0.996695876121521
        ]
    },
    "HumanEval/120": {
        "similarity": 0.9915036559104919,
        "body": "sorted([x for x in arr], reverse=True)[:k]",
        "result": "failed: name 'arr' is not defined",
        "similarities": [
            0.9900954365730286,
            0.9885287880897522,
            0.9908410310745239,
            0.9859239459037781,
            0.9885287880897522,
            0.9915036559104919,
            0.9885287880897522,
            0.9885287880897522,
            0.9915036559104919,
            0.967743456363678,
            0.9915036559104919,
            0.9915036559104919,
            0.967743456363678,
            0.9871745705604553,
            0.9885287880897522,
            0.9915036559104919,
            0.9907301664352417,
            0.9911999106407166,
            0.991129457950592,
            0.9885287880897522
        ]
    },
    "HumanEval/121": {
        "similarity": 0.9943456053733826,
        "body": "    sum_odd_in_even_positions = 0\n    for i in range(1, len(lst)):\n        if lst[i-1] % 2 != 0 and i % 2 == 0:\n            sum_odd_in_even_positions += lst[i]\n    return sum_odd_in_even_positions",
        "result": "failed: ",
        "similarities": [
            0.9937185049057007,
            0.9938417077064514,
            0.9924466013908386,
            0.9920017123222351,
            0.9915643334388733,
            0.9940380454063416,
            0.9936681389808655,
            0.9923987984657288,
            0.9940380454063416,
            0.993624746799469,
            0.9930101633071899,
            0.9920017123222351,
            0.9943456053733826,
            0.9925469756126404,
            0.9917587637901306,
            0.9919198751449585,
            0.9897274374961853,
            0.9918529391288757,
            0.9918755292892456,
            0.9930101633071899
        ]
    },
    "HumanEval/122": {
        "similarity": 0.9946818947792053,
        "body": "    sum = sum(i for i in arr[:k] if 10 > i >= -10)",
        "result": "failed: local variable 'sum' referenced before assignment",
        "similarities": [
            0.9939990043640137,
            0.9941051006317139,
            0.9940543174743652,
            0.9940543174743652,
            0.9924841523170471,
            0.9946818947792053,
            0.9925657510757446,
            0.9909923076629639,
            0.9874393939971924,
            0.9946237206459045,
            0.99405437707901,
            0.99405437707901,
            0.9943929314613342,
            0.9885514974594116,
            0.9863042235374451,
            0.992215633392334,
            0.9902628660202026,
            0.9787720441818237,
            0.9924841523170471,
            0.9940499067306519
        ]
    },
    "HumanEval/123": {
        "similarity": 0.9972028136253357,
        "body": "        sequence = [n]\n        while n != 1:\n            if n % 2 == 0:\n                n = n // 2\n            else:\n                n = 3*n + 1\n            if n % 2 != 0:\n                sequence.append(n)\n        return sorted([i for i in sequence if i % 2 != 0])",
        "result": "failed: unexpected indent (<string>, line 19)",
        "similarities": [
            0.9966527819633484,
            0.9930856823921204,
            0.9971636533737183,
            0.9952340722084045,
            0.9924485087394714,
            0.9969021677970886,
            0.9965646862983704,
            0.9949293732643127,
            0.9963679909706116,
            0.9963898062705994,
            0.9953921437263489,
            0.9971374869346619,
            0.9971374869346619,
            0.9966175556182861,
            0.9922196269035339,
            0.9970492124557495,
            0.9962292909622192,
            0.9972028136253357,
            0.9892403483390808,
            0.997009813785553
        ]
    },
    "HumanEval/124": {
        "similarity": 0.9955593943595886,
        "body": "    date_parts = date.split('-')\n    if len(date_parts) != 3:\n        return False\n    month, day, year = map(int, date_parts)\n    if not (1 <= month <= 12):\n        return False\n    days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    if month == 2:\n        days_in_month[1] = 29\n    if not (1 <= day <= days_in_month[month-1]):\n        return False",
        "result": "failed: ",
        "similarities": [
            0.9934199452400208,
            0.9939322471618652,
            0.9918453693389893,
            0.9939733743667603,
            0.9935911297798157,
            0.995012104511261,
            0.9870163798332214,
            0.9949142932891846,
            0.9938111901283264,
            0.9944695234298706,
            0.9955593943595886,
            0.9942707419395447,
            0.9935684204101562,
            0.993445873260498,
            0.9927419424057007,
            0.9943333864212036,
            0.9938279986381531,
            0.9946755170822144,
            0.9917630553245544,
            0.992563784122467
        ]
    },
    "HumanEval/125": {
        "similarity": 0.9946802854537964,
        "body": "    words = txt.split()\n    result = []\n    for w in words:\n        if ',' in w:\n            result.append(w)\n        else:\n            break\n    if not result and len(txt.replace(' ', '')) % 2 == 1:\n        result = [str(len([c for c in txt.lower() if ord(c) - ord('a') % 26]))]\n    return result",
        "result": "failed: ",
        "similarities": [
            0.990443766117096,
            0.9946802854537964,
            0.9939820170402527,
            0.9924119710922241,
            0.9923136830329895,
            0.9907873272895813,
            0.9928034543991089,
            0.9931650757789612,
            0.9857611656188965,
            0.9922806620597839,
            0.9887524843215942,
            0.9857670664787292,
            0.988187313079834,
            0.9905349612236023,
            0.9946154356002808,
            0.990703284740448,
            0.984000563621521,
            0.9932710528373718,
            0.9940779805183411,
            0.988362193107605
        ]
    },
    "HumanEval/126": {
        "similarity": 0.9974734783172607,
        "body": "    for i in range(len(lst) - 1):\n        if lst[i] >= lst[i + 1]:\n            if len(set(lst)) != len(lst):\n                return False\n            return True\n    return True",
        "result": "failed: ",
        "similarities": [
            0.9972132444381714,
            0.9950067400932312,
            0.9974152445793152,
            0.995511531829834,
            0.9973920583724976,
            0.9974734783172607,
            0.996744692325592,
            0.9960260987281799,
            0.9963836669921875,
            0.9965895414352417,
            0.9969237446784973,
            0.9965884685516357,
            0.996357798576355,
            0.9961696267127991,
            0.9967058897018433,
            0.9950372576713562,
            0.9922194480895996,
            0.9918513298034668,
            0.9943391680717468,
            0.9969369769096375
        ]
    },
    "HumanEval/127": {
        "similarity": 0.9982723593711853,
        "body": "    if interval1[1] < interval2[0] or interval2[1] < interval1[0]:\n        return \"NO\"\n    start = max(interval1[0], interval2[0])\n    end = min(interval1[1], interval2[1])\n    length = end - start + 1\n        if n < 2:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n    return \"YES\" if is_prime(length) else \"NO\"",
        "result": "failed: unexpected indent (<string>, line 27)",
        "similarities": [
            0.9968581199645996,
            0.9981842041015625,
            0.9977617859840393,
            0.9980503916740417,
            0.9970711469650269,
            0.9970659017562866,
            0.9977679252624512,
            0.9967944622039795,
            0.9971004128456116,
            0.9978554248809814,
            0.9977013468742371,
            0.9975854754447937,
            0.9975756406784058,
            0.9978311657905579,
            0.9965723752975464,
            0.9964873790740967,
            0.9974894523620605,
            0.9955589175224304,
            0.9982723593711853,
            0.9970685243606567
        ]
    },
    "HumanEval/128": {
        "similarity": 0.9944946765899658,
        "body": "if not arr: \n    return None \nsign_product = 1 \nfor num in arr: \n    sign_product *= -1 if num < 0 else 1 if num == 0 else -2 \nreturn sum(abs(num) for num in arr) * sign_product",
        "result": "failed: 'return' outside function (<string>, line 15)",
        "similarities": [
            0.9928948283195496,
            0.9929357767105103,
            0.9891292452812195,
            0.9928125143051147,
            0.9885264039039612,
            0.9928281903266907,
            0.9936662912368774,
            0.9919732809066772,
            0.9918949007987976,
            0.9894991517066956,
            0.9910753965377808,
            0.9923227429389954,
            0.9918779134750366,
            0.9916940331459045,
            0.9928562641143799,
            0.9935132265090942,
            0.993355393409729,
            0.9944946765899658,
            0.9920570254325867,
            0.9906102418899536
        ]
    },
    "HumanEval/129": {
        "similarity": 0.9966609477996826,
        "body": "    n = len(grid)\n    memo = {}\n        if (i, j) in visited: return\n        if len(path) == k:\n            val = tuple(sorted((grid[i][j] for j in range(n))))\n            if val not in memo:\n                memo[val] = path\n            else:\n                path[:] = memo[val]\n            return\n        visited.add((i, j))\n        for di, dj in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n            ni, nj = i + di, j + dj\n            if 0 <= ni < n and 0 <= nj < n:\n                dfs(ni, nj, path + [grid[i][j]], visited)\n        visited.remove((i, j))",
        "result": "failed: unexpected indent (<string>, line 34)",
        "similarities": [
            0.9958628416061401,
            0.9961273074150085,
            0.9965431690216064,
            0.99542635679245,
            0.9955652952194214,
            0.9949589967727661,
            0.994831383228302,
            0.9955117106437683,
            0.9959728717803955,
            0.9925227761268616,
            0.9928622841835022,
            0.992811918258667,
            0.9966609477996826,
            0.9938979148864746,
            0.996271014213562,
            0.9952306151390076,
            0.9966367483139038,
            0.994390606880188,
            0.9948992729187012,
            0.9950993061065674
        ]
    },
    "HumanEval/130": {
        "similarity": 0.9967926740646362,
        "body": "    if n == 0:\n        return [3]\n    elif n == 1:\n        return [3, 1]\n    else:\n        result = [3, 1]\n        for _ in range(2, n + 1):\n            if result[-1] % 2 == 0:\n                result.append(int(result[-1] / 2) + 1)\n            else:\n                prev3 = result[-1] - result[-2] - result[-3]\n                result.extend([prev3, int(prev3 / 2) + 1])\n        return result",
        "result": "failed: list index out of range",
        "similarities": [
            0.996239423751831,
            0.9944833517074585,
            0.9955593943595886,
            0.9964855909347534,
            0.9961313009262085,
            0.9948758482933044,
            0.9932564496994019,
            0.9967926740646362,
            0.9959445595741272,
            0.9942156076431274,
            0.9967387318611145,
            0.9965704083442688,
            0.9946349263191223,
            0.996240496635437,
            0.9960306286811829,
            0.9962290525436401,
            0.9943969249725342,
            0.9945420026779175,
            0.9950401782989502,
            0.9946975708007812
        ]
    },
    "HumanEval/131": {
        "similarity": 0.993638813495636,
        "body": "    product = 1\n    for digit in str(n):\n        if int(digit) % 2 != 0:\n            product *= int(digit)\n    return product",
        "result": "failed: ",
        "similarities": [
            0.9934738874435425,
            0.9886892437934875,
            0.9934738874435425,
            0.9880315065383911,
            0.9913683533668518,
            0.9934738874435425,
            0.9934738874435425,
            0.9934738874435425,
            0.9926611185073853,
            0.9934526681900024,
            0.9921129941940308,
            0.993638813495636,
            0.9912788271903992,
            0.9850317239761353,
            0.9910957217216492,
            0.9901368021965027,
            0.9915637969970703,
            0.9910820722579956,
            0.9873683452606201,
            0.9910696148872375
        ]
    },
    "HumanEval/132": {
        "similarity": 0.9965398907661438,
        "body": "    stack = []\n    for char in string:\n        if char == '[':\n            stack.append(char)\n        elif char == ']':\n            if len(stack) < 1:\n                return False\n            stack.pop()\n    return len(stack) > 0",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9961034059524536,
            0.9948782920837402,
            0.9941551089286804,
            0.9946990609169006,
            0.9952250123023987,
            0.9965398907661438,
            0.99443519115448,
            0.9951294660568237,
            0.9961734414100647,
            0.99443519115448,
            0.9836321473121643,
            0.9946356415748596,
            0.9934380054473877,
            0.9859161376953125,
            0.9964056611061096,
            0.9951294660568237,
            0.9951625466346741,
            0.9948139190673828,
            0.9963113069534302,
            0.9956666827201843
        ]
    },
    "HumanEval/133": {
        "similarity": 0.9946742653846741,
        "body": "    total = sum(math.ceil(i) ** 2 for i in lst)",
        "result": "failed: name 'math' is not defined",
        "similarities": [
            0.9921781420707703,
            0.993727445602417,
            0.9933179616928101,
            0.9920634031295776,
            0.9935548901557922,
            0.9876638054847717,
            0.9896655678749084,
            0.9872470498085022,
            0.994465172290802,
            0.993554949760437,
            0.988005518913269,
            0.9927083849906921,
            0.9946742653846741,
            0.9935466647148132,
            0.9926374554634094,
            0.9935548901557922,
            0.9939491748809814,
            0.9937244057655334,
            0.9939491748809814,
            0.9938137531280518
        ]
    },
    "HumanEval/134": {
        "similarity": 0.9956158995628357,
        "body": "    return txt and not txt[:-1].replace(' ', '').isalnum()",
        "result": "failed: ",
        "similarities": [
            0.9956158995628357,
            0.9854991436004639,
            0.976811945438385,
            0.9946030378341675,
            0.9946811199188232,
            0.9944086670875549,
            0.994870662689209,
            0.9956158995628357,
            0.9934686422348022,
            0.9929589033126831,
            0.9946030378341675,
            0.9946030378341675,
            0.9946030378341675,
            0.9944086670875549,
            0.9946030378341675,
            0.9953400492668152,
            0.9904653429985046,
            0.9946030378341675,
            0.9946030378341675,
            0.9843186140060425
        ]
    },
    "HumanEval/135": {
        "similarity": 0.9989959597587585,
        "body": "    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return i-1\n    return -1",
        "result": "failed: ",
        "similarities": [
            0.9989959597587585,
            0.9989935159683228,
            0.9977757334709167,
            0.9981681704521179,
            0.998623788356781,
            0.9968798756599426,
            0.9989959597587585,
            0.9974138140678406,
            0.998623788356781,
            0.9985681176185608,
            0.9977928996086121,
            0.9976264834403992,
            0.9984098076820374,
            0.9989959597587585,
            0.9989959597587585,
            0.9989959597587585,
            0.998623788356781,
            0.998958170413971,
            0.998958170413971,
            0.9978581666946411
        ]
    },
    "HumanEval/136": {
        "similarity": 0.990932047367096,
        "body": "    max_negative = max((x for x in lst if x < 0), default=None)\n    min_positive = min((x for x in lst if x > 0), default=None)\n    return (max_negative, min_positive) if max_negative is not None and min_positive is not None else ((None, None))",
        "result": "failed: ",
        "similarities": [
            0.9878349304199219,
            0.9896678924560547,
            0.9893102049827576,
            0.9895798563957214,
            0.989648699760437,
            0.9904963970184326,
            0.9849916100502014,
            0.9864086508750916,
            0.9832565188407898,
            0.9895948171615601,
            0.9894835948944092,
            0.9871407747268677,
            0.9869738221168518,
            0.9878139495849609,
            0.990932047367096,
            0.9871407747268677,
            0.9870380759239197,
            0.9870446920394897,
            0.9834731221199036,
            0.9849159121513367
        ]
    },
    "HumanEval/137": {
        "similarity": 0.9949375987052917,
        "body": "    if isinstance(a, str):\n        a = float(str.replace(',', '.').replace('.', ''))\n    if isinstance(b, str):\n        b = float(str.replace(',', '.').replace('.', ''))\n\n    if a > b:\n        return a\n    elif a < b:\n        return b\n    else:\n        return None",
        "result": "failed: replace expected at least 2 arguments, got 1",
        "similarities": [
            0.9939183592796326,
            0.9876309633255005,
            0.9941263794898987,
            0.9942976236343384,
            0.9888787865638733,
            0.9939202666282654,
            0.9814754128456116,
            0.9949375987052917,
            0.9872788190841675,
            0.9899752736091614,
            0.9933175444602966,
            0.9878510236740112,
            0.9918092489242554,
            0.9936043620109558,
            0.9942512512207031,
            0.9885438680648804,
            0.9947268962860107,
            0.9948516488075256,
            0.9948678612709045,
            0.9910799264907837
        ]
    },
    "HumanEval/138": {
        "similarity": 0.9924445152282715,
        "body": "    for i in range(1, 1000):\n        sum_val = 0\n        for j in range(4):\n            if i - sum_val >= 2 * (i - sum_val) and i - sum_val % 2 == 0:\n                sum_val += 2 * (i - sum_val)\n            else:\n                break\n        if sum_val == i: \n            return True\n    return False",
        "result": "failed: ",
        "similarities": [
            0.983642578125,
            0.987210750579834,
            0.9817063212394714,
            0.9921807050704956,
            0.9921641945838928,
            0.9908027648925781,
            0.9884276390075684,
            0.9842043519020081,
            0.9901860952377319,
            0.9842043519020081,
            0.9852868318557739,
            0.9866924285888672,
            0.9919473528862,
            0.9873464703559875,
            0.9842043519020081,
            0.9924445152282715,
            0.9919427633285522,
            0.9869917035102844,
            0.9903016686439514,
            0.9838110208511353
        ]
    },
    "HumanEval/139": {
        "similarity": 0.9954474568367004,
        "body": "    if n < 1:\n        return 0\n    result = 1\n    for i in range(n, 0, -1):\n        result *= math.factorial(i)",
        "result": "failed: name 'math' is not defined",
        "similarities": [
            0.9918908476829529,
            0.9947901368141174,
            0.9918908476829529,
            0.9918908476829529,
            0.9905080199241638,
            0.9944576621055603,
            0.9950996041297913,
            0.9954474568367004,
            0.9875988364219666,
            0.9918908476829529,
            0.991216778755188,
            0.9948872327804565,
            0.9948872327804565,
            0.9913731813430786,
            0.9898368716239929,
            0.9949493408203125,
            0.9918908476829529,
            0.9951711893081665,
            0.9842988848686218,
            0.9950920939445496
        ]
    },
    "HumanEval/140": {
        "similarity": 0.990810215473175,
        "body": "    text = text.replace(' ', '_')\n    while '_' in text and '--' not in text:\n        text = text.replace('_ _', '_-_').replace('__', '_')",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9884769916534424,
            0.9878843426704407,
            0.9830785989761353,
            0.9790131449699402,
            0.9880216717720032,
            0.990810215473175,
            0.975894033908844,
            0.9906060099601746,
            0.9886292815208435,
            0.9866984486579895,
            0.9886664152145386,
            0.9879982471466064,
            0.9868748188018799,
            0.9820142984390259,
            0.9896242022514343,
            0.98747718334198,
            0.9784137606620789,
            0.9871055483818054,
            0.9748684763908386,
            0.9887965321540833
        ]
    },
    "HumanEval/141": {
        "similarity": 0.9947974681854248,
        "body": "    if len([c for c in file_name if c.isdigit()]) > 3:\n        return 'No'\n    if file_name.count('.') != 1 or file_name.split('.')[0].lstrip() == '' or not file_name.split('.')[0][0].isalpha():\n        return 'No'\n    ext = file_name.split('.')[1]\n    if ext not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'",
        "result": "passed",
        "similarities": [
            0.9939548969268799,
            0.9872360229492188,
            0.9947974681854248,
            0.9946799874305725,
            0.9823662638664246,
            0.9860906004905701,
            0.9924215078353882,
            0.9916243553161621,
            0.993923008441925,
            0.989643931388855,
            0.9945022463798523,
            0.9915391802787781,
            0.9930586814880371,
            0.9938337206840515,
            0.9946938753128052,
            0.9940782785415649,
            0.9902030825614929,
            0.99383944272995,
            0.9916826486587524,
            0.9910231232643127
        ]
    },
    "HumanEval/142": {
        "similarity": 0.9930992126464844,
        "body": "    result = sum([x**3 if i%12==0 else x**2 if i%4==0 and i%3!=0 else x for i,x in enumerate(lst)])",
        "result": "failed: ",
        "similarities": [
            0.9912981986999512,
            0.9886371493339539,
            0.9930413961410522,
            0.9851180911064148,
            0.9886371493339539,
            0.9883816242218018,
            0.9917750358581543,
            0.9926468729972839,
            0.9886371493339539,
            0.988785982131958,
            0.989979088306427,
            0.9908168315887451,
            0.9907041192054749,
            0.9930992126464844,
            0.9929954409599304,
            0.9913892149925232,
            0.9918122887611389,
            0.988278865814209,
            0.9921468496322632,
            0.9928864240646362
        ]
    },
    "HumanEval/143": {
        "similarity": 0.9930823445320129,
        "body": "    result = []\n    words = sentence.split()\n    for word in words:\n        if all(c.isalpha() for c in word):\n            if is_prime(len(word)):\n                result.append(word)\n    return ' '.join(result)",
        "result": "failed: name 'is_prime' is not defined",
        "similarities": [
            0.9904252290725708,
            0.99193274974823,
            0.9865007996559143,
            0.9890459775924683,
            0.9905459880828857,
            0.9930823445320129,
            0.9926963448524475,
            0.99193274974823,
            0.9911739826202393,
            0.9860170483589172,
            0.9904355406761169,
            0.9900374412536621,
            0.9862331748008728,
            0.9845491647720337,
            0.9914958477020264,
            0.9918023347854614,
            0.9892306327819824,
            0.9922654032707214,
            0.9908684492111206,
            0.9924240112304688
        ]
    },
    "HumanEval/144": {
        "similarity": 0.9909989237785339,
        "body": "    a, b = map(int, x.split('/')) \n    c, d = map(int, n.split('/')) \n    return a * d == b * c",
        "result": "failed: test1",
        "similarities": [
            0.9854841828346252,
            0.9869982004165649,
            0.99041748046875,
            0.9869982004165649,
            0.9901789426803589,
            0.9855485558509827,
            0.9758382439613342,
            0.9901535511016846,
            0.9869982004165649,
            0.9906366467475891,
            0.9863466024398804,
            0.9896438121795654,
            0.9869982004165649,
            0.9901732206344604,
            0.9909989237785339,
            0.9889729022979736,
            0.9851178526878357,
            0.969958484172821,
            0.9858468770980835,
            0.9869982004165649
        ]
    },
    "HumanEval/145": {
        "similarity": 0.9953882098197937,
        "body": "    nums.sort(key=lambda x: (sum(int(digit) for digit in str(abs(x))), nums.index(x)))",
        "result": "failed: 1 is not in list",
        "similarities": [
            0.9937763214111328,
            0.9928034543991089,
            0.9949986338615417,
            0.9949324727058411,
            0.995161771774292,
            0.9953882098197937,
            0.9916186332702637,
            0.991987943649292,
            0.9950180053710938,
            0.9925767779350281,
            0.991241455078125,
            0.9947819113731384,
            0.9918068647384644,
            0.9934064745903015,
            0.9931457042694092,
            0.9949324727058411,
            0.9941896200180054,
            0.9863979816436768,
            0.9950180053710938,
            0.995161771774292
        ]
    },
    "HumanEval/146": {
        "similarity": 0.9944930076599121,
        "body": "    result = 0\n    for num in nums:\n        if abs(num) > 10 and str(abs(num))[-1] % 2 != 0 and str(abs(num))[0] % 2 != 0:\n            result += 1",
        "result": "failed: ",
        "similarities": [
            0.99210125207901,
            0.99221271276474,
            0.9936573505401611,
            0.9936208128929138,
            0.9919861555099487,
            0.9876663088798523,
            0.991829514503479,
            0.9923372864723206,
            0.9935937523841858,
            0.9944930076599121,
            0.9900227785110474,
            0.9838073253631592,
            0.9940153360366821,
            0.9930939078330994,
            0.986952543258667,
            0.9944930076599121,
            0.9930028319358826,
            0.9901118278503418,
            0.9911667704582214,
            0.9940750002861023
        ]
    },
    "HumanEval/147": {
        "similarity": 0.9913230538368225,
        "body": "    result = sum(1 for i in range(n) for j in range(i + 1, n) \n                 for k in range(j + 1, n) \n                 if (i * i - i + 1) + (j * j - j + 1) + (k * k - k + 1) % 3 == 0)",
        "result": "failed: ",
        "similarities": [
            0.9800888895988464,
            0.9907624125480652,
            0.990761935710907,
            0.985027015209198,
            0.9849467873573303,
            0.9851629137992859,
            0.9875369668006897,
            0.9897039532661438,
            0.9851629137992859,
            0.9913230538368225,
            0.9876199960708618,
            0.9899064898490906,
            0.9814966320991516,
            0.9818137288093567,
            0.9875369668006897,
            0.9814966320991516,
            0.9872696399688721,
            0.9875369668006897,
            0.9878900647163391,
            0.987481951713562
        ]
    },
    "HumanEval/148": {
        "similarity": 0.9946784973144531,
        "body": "    if set(planet1) & {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"} != set([planet1]) or set(planet2) & {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"} != set([planet2]):\n        return ()\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index2 < index1:\n        index1, index2 = index2, index1\n    return tuple(sorted([planets[i] for i in range(index1+1, index2)]))",
        "result": "failed: First test error: 0",
        "similarities": [
            0.9921176433563232,
            0.9927775859832764,
            0.993920087814331,
            0.9913585186004639,
            0.9933081269264221,
            0.9934705495834351,
            0.9946784973144531,
            0.988580584526062,
            0.9835817217826843,
            0.994085431098938,
            0.9940486550331116,
            0.9926405549049377,
            0.9849244952201843,
            0.9934059977531433,
            0.9916973114013672,
            0.9906033277511597,
            0.9927995800971985,
            0.9934532046318054,
            0.9917711019515991,
            0.9848700165748596
        ]
    },
    "HumanEval/149": {
        "similarity": 0.9951878786087036,
        "body": "    return sorted([x for x in set(lst) if len(x) % 2 == 0], key=lambda x: (len(x), x))",
        "result": "passed",
        "similarities": [
            0.9951878786087036,
            0.993427574634552,
            0.994992196559906,
            0.9909642934799194,
            0.9951878786087036,
            0.9911972880363464,
            0.993240237236023,
            0.9883180260658264,
            0.9886265993118286,
            0.9915673136711121,
            0.9879724383354187,
            0.994992196559906,
            0.9930742383003235,
            0.9886663556098938,
            0.9951878786087036,
            0.9915205240249634,
            0.9928556084632874,
            0.9908561706542969,
            0.9864949584007263,
            0.9918603301048279
        ]
    },
    "HumanEval/150": {
        "similarity": 0.9946252703666687,
        "body": "    if n > 1: \n        for p in range(2, int(n**0.5)+1): \n            if n % p == 0: \n                return y \n        return x",
        "result": "failed: ",
        "similarities": [
            0.9945684671401978,
            0.9906854033470154,
            0.9936147928237915,
            0.9945684671401978,
            0.9437973499298096,
            0.9859012961387634,
            0.9946001768112183,
            0.9944742918014526,
            0.9945696592330933,
            0.9858896136283875,
            0.9945684671401978,
            0.9940332174301147,
            0.9929433465003967,
            0.9902336597442627,
            0.9945684671401978,
            0.9942537546157837,
            0.9940072298049927,
            0.9946252703666687,
            0.9945696592330933,
            0.9932761192321777
        ]
    },
    "HumanEval/151": {
        "similarity": 0.9971717000007629,
        "body": "    sum((i ** 2 for i in (x for x in lst if isinstance(x, int) and x >= 0)))",
        "result": "failed: This prints if this assert fails 1 (good for debugging!)",
        "similarities": [
            0.9926424622535706,
            0.9971457123756409,
            0.9971717000007629,
            0.9951145052909851,
            0.9969931244850159,
            0.9953416585922241,
            0.9948448538780212,
            0.9971078634262085,
            0.9934388995170593,
            0.997078537940979,
            0.9971457123756409,
            0.99272620677948,
            0.9970739483833313,
            0.9849823713302612,
            0.9969931244850159,
            0.9971717000007629,
            0.9967736005783081,
            0.9970861077308655,
            0.9970942139625549,
            0.9971717000007629
        ]
    },
    "HumanEval/152": {
        "similarity": 0.9965230822563171,
        "body": "    return [abs(guess - score) if guess != score else 0 for score, guess in zip(game, guesses)]",
        "result": "failed: name 'guesses' is not defined",
        "similarities": [
            0.995753824710846,
            0.9928069710731506,
            0.9964478015899658,
            0.995753824710846,
            0.9945644736289978,
            0.995753824710846,
            0.9937663078308105,
            0.9941691160202026,
            0.9928457140922546,
            0.994657039642334,
            0.9965230822563171,
            0.995753824710846,
            0.9916903972625732,
            0.9937031269073486,
            0.9939212799072266,
            0.9949371218681335,
            0.9928457140922546,
            0.995745837688446,
            0.9928352236747742,
            0.9943464994430542
        ]
    },
    "HumanEval/153": {
        "similarity": 0.9912856221199036,
        "body": "    strongest = (extensions[0], extensions[0].upper().count() - extensions[0].lower().count()) \n    for ext in extensions[1:]: \n        temp = (ext, ext.upper().count() - ext.lower().count()) \n        if temp[1] > strongest[1] or (temp[1] == strongest[1] and extensions.index(ext) < extensions.index(strongest[0])): \n            strongest = temp",
        "result": "failed: count() takes at least 1 argument (0 given)",
        "similarities": [
            0.9894198179244995,
            0.9894589781761169,
            0.9893031716346741,
            0.9907776713371277,
            0.9893264770507812,
            0.9874489307403564,
            0.9899856448173523,
            0.9851072430610657,
            0.9907475709915161,
            0.9895967245101929,
            0.9910268187522888,
            0.9912856221199036,
            0.9907433390617371,
            0.9889522194862366,
            0.9897889494895935,
            0.9894791841506958,
            0.9901121258735657,
            0.9833235740661621,
            0.9861962199211121,
            0.9903426170349121
        ]
    },
    "HumanEval/154": {
        "similarity": 0.9969283938407898,
        "body": "    if b in a or any(b[i:] + b[:i] in a for i in range(len(b))): \n        return True \n    return False",
        "result": "passed",
        "similarities": [
            0.9957715272903442,
            0.9936785697937012,
            0.9941269755363464,
            0.9964653849601746,
            0.9941269755363464,
            0.9941269755363464,
            0.9957715272903442,
            0.9961519837379456,
            0.9969283938407898,
            0.9951542615890503,
            0.9920315146446228,
            0.9945086240768433,
            0.9967946410179138,
            0.9957332611083984,
            0.9961519837379456,
            0.9957715272903442,
            0.9961519837379456,
            0.9968602061271667,
            0.9955191612243652,
            0.9968602061271667
        ]
    },
    "HumanEval/155": {
        "similarity": 0.994094729423523,
        "body": "    count = {'even': 0, 'odd': 0}\n    for digit in str(abs(num)):\n        if int(digit) % 2 == 0: count['even'] += 1\n        else: count['odd'] += 1\n    return (count['even'], count['odd'])",
        "result": "passed",
        "similarities": [
            0.9878208637237549,
            0.9895901083946228,
            0.994094729423523,
            0.9897551536560059,
            0.9928638935089111,
            0.9894325733184814,
            0.9931508898735046,
            0.9920822978019714,
            0.9914888143539429,
            0.991256833076477,
            0.9920052289962769,
            0.9885761737823486,
            0.9833086729049683,
            0.991256833076477,
            0.9920052289962769,
            0.9920052289962769,
            0.9920052289962769,
            0.9859728813171387,
            0.9937511086463928,
            0.9922372102737427
        ]
    },
    "HumanEval/156": {
        "similarity": 0.9924448728561401,
        "body": "        roman = ''\n        thousands = number // 1000\n        if thousands > 0:\n            roman += 'm' * thousands\n            number %= 1000\n        hundreds = number // 100\n        if hundreds > 0:\n            roman += ('c' if hundreds > 1 else 'c') + ('i' if hundreds % 4 == 1 else '')\n            number %= 100\n        tens = number // 10\n        if tens > 3:\n            roman += {'34': 'xxxiv', '9': 'ix', '40': 'xl', '50': 'l', '90': 'xc'}[str(tens)[0] + str(tens)[1]]\n            number %= 10\n        else:\n            roman += 'x' * tens\n        ones = number % 10\n        roman += {'20': 'xx', '4': 'iv', '40': 'xl', '5': 'v', '9': 'ix'}[str(ones) + str((ones // 1) % 10)[0]]\n        return roman.lower()",
        "result": "failed: unexpected indent (<string>, line 13)",
        "similarities": [
            0.9710313677787781,
            0.9897899627685547,
            0.9861133098602295,
            0.9897007346153259,
            0.9913477897644043,
            0.9840712547302246,
            0.9873979687690735,
            0.9836315512657166,
            0.9918782114982605,
            0.9869999289512634,
            0.9919992685317993,
            0.9904089570045471,
            0.991851806640625,
            0.9832780957221985,
            0.9875887632369995,
            0.9884175658226013,
            0.9924448728561401,
            0.981339693069458,
            0.9907658100128174,
            0.9912575483322144
        ]
    },
    "HumanEval/157": {
        "similarity": 0.9945033192634583,
        "body": "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or c**2 + a**2 == b**2",
        "result": "passed",
        "similarities": [
            0.9945033192634583,
            0.9868385195732117,
            0.992276132106781,
            0.9925955533981323,
            0.992276132106781,
            0.9940669536590576,
            0.9792702198028564,
            0.9894981384277344,
            0.9934895038604736,
            0.9934895038604736,
            0.9896057844161987,
            0.9940669536590576,
            0.9932063221931458,
            0.9889987111091614,
            0.9932063221931458,
            0.9934895038604736,
            0.9932063221931458,
            0.989160418510437,
            0.9932063221931458,
            0.9942898154258728
        ]
    },
    "HumanEval/158": {
        "similarity": 0.9949609637260437,
        "body": "    max_word = None\n    max_unique_chars = 0\n    for word in words:\n        unique_chars = set(word)\n        if len(unique_chars) > max_unique_chars or (len(unique_chars) == max_unique_chars and not max_word or word < max_word):\n            max_word = word\n            max_unique_chars = len(unique_chars)\n    return max_word",
        "result": "failed: t8",
        "similarities": [
            0.9942857623100281,
            0.9923397898674011,
            0.9946573972702026,
            0.9945114850997925,
            0.9944564700126648,
            0.9929805397987366,
            0.9941287040710449,
            0.9912571310997009,
            0.9934093952178955,
            0.9933662414550781,
            0.9937525391578674,
            0.9947647452354431,
            0.9894471764564514,
            0.9848725199699402,
            0.9933096170425415,
            0.9949609637260437,
            0.9901483654975891,
            0.9914827942848206,
            0.9945845603942871,
            0.987125813961029
        ]
    },
    "HumanEval/159": {
        "similarity": 0.9959583282470703,
        "body": "    total = number + max(need - (remaining + number), 0)\n    return [total, min(remaining, need - total)]",
        "result": "failed: Error",
        "similarities": [
            0.9953016042709351,
            0.9940314292907715,
            0.9945876598358154,
            0.9952012896537781,
            0.9922050833702087,
            0.995674729347229,
            0.9949374794960022,
            0.9952781200408936,
            0.9945269227027893,
            0.9941237568855286,
            0.9936808347702026,
            0.995684802532196,
            0.9959583282470703,
            0.9957365989685059,
            0.9823305010795593,
            0.9954617023468018,
            0.9950181841850281,
            0.9764543175697327,
            0.9943467974662781,
            0.9952207207679749
        ]
    },
    "HumanEval/160": {
        "similarity": 0.9885873198509216,
        "body": "    if len(operator) != len(operand) - 1:\n        raise ValueError(\"Invalid input\")\n    expression = str(operand[0])\n    for i in range(len(operator)):\n        expression += operator[i]\n        expression += str(operand[i + 1])\n    result = eval(expression)\n    return result",
        "result": "passed",
        "similarities": [
            0.9802360534667969,
            0.9798529744148254,
            0.9846647381782532,
            0.9878634214401245,
            0.9873987436294556,
            0.9879168272018433,
            0.9877309203147888,
            0.985461413860321,
            0.9782694578170776,
            0.9777757525444031,
            0.9778298735618591,
            0.9876754283905029,
            0.9871978759765625,
            0.9774804711341858,
            0.9885873198509216,
            0.9753118753433228,
            0.9856966733932495,
            0.9864427447319031,
            0.9831315279006958,
            0.9873846769332886
        ]
    },
    "HumanEval/161": {
        "similarity": 0.999149739742279,
        "body": "    result = \"\"\n    for c in s:\n        if c.isalpha():\n            result += c.swapcase()\n        else:\n            result += c\n    return result[::-1] if not any(c.isalpha() for c in s) else result",
        "result": "passed",
        "similarities": [
            0.9991223216056824,
            0.9991223216056824,
            0.9991223216056824,
            0.997750461101532,
            0.9991286396980286,
            0.9961034655570984,
            0.999149739742279,
            0.9972365498542786,
            0.9990992546081543,
            0.999149739742279,
            0.9991477131843567,
            0.9991286396980286,
            0.999149739742279,
            0.999149739742279,
            0.9991224408149719,
            0.9933059215545654,
            0.9991286396980286,
            0.9991223216056824,
            0.9978929758071899,
            0.9991286396980286
        ]
    },
    "HumanEval/162": {
        "similarity": 0.9961702227592468,
        "body": "    import hashlib\n    if not text:\n        return None\n    md5_hash = hashlib.md5(text.encode())\n    return md5_hash.hexdigest()",
        "result": "passed",
        "similarities": [
            0.9954715371131897,
            0.9958602786064148,
            0.9879325032234192,
            0.9961702227592468,
            0.9938406944274902,
            0.9954217672348022,
            0.9903650879859924,
            0.9954217672348022,
            0.9848731160163879,
            0.9954715371131897,
            0.993072509765625,
            0.986219584941864,
            0.995792806148529,
            0.9954217672348022,
            0.9954716563224792,
            0.9954716563224792,
            0.9932884573936462,
            0.9960281252861023,
            0.9954715371131897,
            0.9956951141357422
        ]
    },
    "HumanEval/163": {
        "similarity": 0.9948086142539978,
        "body": "    result = []\n    for i in range(min(a, b), max(a, b) + 1):\n        if str(i).isdigit() and int(str(i)) % 2 == 0:\n            result.append(int(str(i)))",
        "result": "failed: Test 1",
        "similarities": [
            0.990736722946167,
            0.9910932183265686,
            0.9899759888648987,
            0.994806170463562,
            0.9948086142539978,
            0.9945696592330933,
            0.9887620806694031,
            0.9944444894790649,
            0.9938822388648987,
            0.9923170804977417,
            0.9923698306083679,
            0.9874201416969299,
            0.9946881532669067,
            0.9923726320266724,
            0.9925939440727234,
            0.9923698306083679,
            0.9937547445297241,
            0.9908849000930786,
            0.9921352863311768,
            0.9948086142539978
        ]
    }
}