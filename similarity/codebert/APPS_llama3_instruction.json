{
    "4693": {
        "similarity": 0.9994938373565674,
        "body": "    a = int(input())\n    b = int(input())\n    if a + b >= 10:\n        print('error')\n    else:\n        print(a+b)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9994628429412842,
            0.9994628429412842,
            0.9994474649429321,
            0.9994628429412842,
            0.9994938373565674,
            0.9984522461891174,
            0.9994938373565674,
            0.9994628429412842,
            0.998288631439209,
            0.9994938373565674,
            0.9968879222869873,
            0.9994474649429321,
            0.9993798136711121,
            0.9985430836677551,
            0.9994628429412842,
            0.9994938373565674,
            0.9994628429412842,
            0.9994938373565674,
            0.9994474649429321,
            0.9994628429412842
        ]
    },
    "4077": {
        "similarity": 0.997787594795227,
        "body": "    n,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    ans = 0\n    for l in range(n):\n        for r in range(l,n+1):\n            b = sorted(a[l:r+1])\n            if b[len(b)//2] == m:\n                ans += 1\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9975262880325317,
            0.9921622276306152,
            0.9964194297790527,
            0.997787594795227,
            0.9966162443161011,
            0.9977052807807922,
            0.9966936707496643,
            0.9968659281730652,
            0.9976499676704407,
            0.9975273609161377,
            0.9972062706947327,
            0.9977320432662964,
            0.9941139221191406,
            0.9970386028289795,
            0.9976499676704407,
            0.9945857524871826,
            0.9969896078109741,
            0.9964416027069092,
            0.9976309537887573,
            0.9968151450157166
        ]
    },
    "4006": {
        "similarity": 0.9970306754112244,
        "body": "    while str(x).endswith('0'):\n        x = int(str(x)[:-1])\n    return x + 1\n\n    seen = set()\n    for _ in range(100):  # arbitrary max iterations\n        n = f(n)\n        if n not in seen:\n            seen.add(n)\n        else:\n            break\n    return len(seen)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9967573881149292,
            0.9968984723091125,
            0.9969727396965027,
            0.9947810173034668,
            0.9958299398422241,
            0.9925890564918518,
            0.9958028197288513,
            0.9960305094718933,
            0.9966198801994324,
            0.9969532489776611,
            0.9968861937522888,
            0.9960880279541016,
            0.9956544637680054,
            0.9968178272247314,
            0.9910286664962769,
            0.9970306754112244,
            0.9947993755340576,
            0.9955291748046875,
            0.9958999156951904,
            0.9967004060745239
        ]
    },
    "4556": {
        "similarity": 0.9976398944854736,
        "body": "    s = input()\n    x = s[0].upper()\n    print(x + \"C\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9972601532936096,
            0.9967091083526611,
            0.9953956604003906,
            0.997393786907196,
            0.9970098733901978,
            0.997627854347229,
            0.995885968208313,
            0.9954087138175964,
            0.9974626302719116,
            0.9976398944854736,
            0.9975716471672058,
            0.9971917867660522,
            0.9964802265167236,
            0.9969403147697449,
            0.9976398944854736,
            0.9951943159103394,
            0.997393786907196,
            0.9942214488983154,
            0.9967233538627625,
            0.9972930550575256
        ]
    },
    "4571": {
        "similarity": 0.9953404664993286,
        "body": "    n,m=map(int,input().split())\n    return sum([1900*(2**i)/((2**i)) for i in range(1,m+1)])",
        "result": "failed: testcase 0",
        "similarities": [
            0.9932355284690857,
            0.9937596917152405,
            0.9940552115440369,
            0.992477297782898,
            0.9937600493431091,
            0.9940707683563232,
            0.9946097135543823,
            0.9953404664993286,
            0.9941179156303406,
            0.9945254325866699,
            0.9915614724159241,
            0.9893314838409424,
            0.9941080808639526,
            0.9940672516822815,
            0.9947088360786438,
            0.9943720102310181,
            0.9948859214782715,
            0.9940362572669983,
            0.9941167235374451,
            0.9933982491493225
        ]
    },
    "4019": {
        "similarity": 0.9963940978050232,
        "body": "    n,m,D = map(int,input().split())\n    g = [[] for _ in range(n+1)]\n    for _ in range(m):\n        v,u = map(int,input().split())\n        g[v].append(u)\n        g[u].append(v)\n    visited = [False]*(n+1)\n    parent = [-1]* (n+1)\n        visited[v] = True\n        for child in g[v]:\n            if not visited[child]:\n                parent[child] = v\n                dfs(child)\n    dfs(1)\n    if parent[1] == -1:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        for i in range(2,n+1):\n            print(parent[i],\"1\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9899397492408752,
            0.9962270855903625,
            0.9947998523712158,
            0.9950483441352844,
            0.9959405660629272,
            0.9957461953163147,
            0.9962859153747559,
            0.9945688843727112,
            0.9947927594184875,
            0.9868931174278259,
            0.9940687417984009,
            0.9941350221633911,
            0.9948242902755737,
            0.9938079714775085,
            0.9951978325843811,
            0.9952480792999268,
            0.9961472749710083,
            0.9963940978050232,
            0.994840145111084,
            0.9953653216362
        ]
    },
    "4265": {
        "similarity": 0.993943989276886,
        "body": "    S = input().strip()\n    T = input().strip()\n    m = 0\n    for i in range(len(S)):\n        if S[i] != T[i]:\n            diff = list(T).count(T[i])\n            m += len(S) - diff\n    print(m)",
        "result": "timed out",
        "similarities": [
            0.9828857779502869,
            0.9924760460853577,
            0.9853917360305786,
            0.9929178953170776,
            0.9891921877861023,
            0.9899020791053772,
            0.9934971332550049,
            0.984588623046875,
            0.9927125573158264,
            0.9924964904785156,
            0.9820508360862732,
            0.9934971332550049,
            0.9885671734809875,
            0.9933795928955078,
            0.9934971332550049,
            0.993943989276886,
            0.9927125573158264,
            0.992721676826477,
            0.9922447204589844,
            0.9930785298347473
        ]
    },
    "4657": {
        "similarity": 0.9954243898391724,
        "body": "    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    if any(sum(a[i:j+1]) % 2 == 0 for i in range(n) for j in range(i+n-1)):\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1, n):\n            if sum(a[:i+1]) % 2 != sum(a[i:]) % 2:\n                print(*list(range(1, i+1)) + [i+1])\n                break\n        else: print(n)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9953259229660034,
            0.9953610301017761,
            0.99120032787323,
            0.9952306151390076,
            0.9942789673805237,
            0.9929845929145813,
            0.990614652633667,
            0.9948791861534119,
            0.9933086037635803,
            0.9946004152297974,
            0.9943998456001282,
            0.9933229088783264,
            0.9929733276367188,
            0.9947881102561951,
            0.992622971534729,
            0.9904361367225647,
            0.9954243898391724,
            0.9941102862358093,
            0.9942783713340759,
            0.9929242730140686
        ]
    },
    "4599": {
        "similarity": 0.9963091015815735,
        "body": "    N = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    alice = sum(a[:N//2+1])\n    bob = sum(a[N//2:])\n    return alice - bob",
        "result": "failed: testcase 0",
        "similarities": [
            0.9961090087890625,
            0.9961823225021362,
            0.996052622795105,
            0.995429277420044,
            0.9958098530769348,
            0.9818145632743835,
            0.9962049722671509,
            0.9947711825370789,
            0.9960989952087402,
            0.9948947429656982,
            0.996038556098938,
            0.9930452108383179,
            0.996012270450592,
            0.9963091015815735,
            0.9932714104652405,
            0.9944993853569031,
            0.990818440914154,
            0.9946783185005188,
            0.9907447695732117,
            0.9933158755302429
        ]
    },
    "4774": {
        "similarity": 0.9958372712135315,
        "body": "    a, b, c, d = map(int, input().split())\n    ops = ['+', '-', '*', '/']\n    for op1 in ops:\n        for op2 in ops:\n            if eval(f'{a} {op1} {b} == {c} {op2} {d}'):\n                print(f'{a} {op1} {b} = {c} {op2} {d}')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9945815205574036,
            0.9949172139167786,
            0.9958011507987976,
            0.9921266436576843,
            0.9955610036849976,
            0.9891481995582581,
            0.9874364733695984,
            0.9957761168479919,
            0.9951027631759644,
            0.9862856864929199,
            0.9887092113494873,
            0.9901914000511169,
            0.989851713180542,
            0.9958372712135315,
            0.9945042133331299,
            0.9945510029792786,
            0.9890238046646118,
            0.9958372712135315,
            0.9952216744422913,
            0.9942835569381714
        ]
    },
    "4851": {
        "similarity": 0.9958086609840393,
        "body": "    n = int(input())\n    while True:\n        if sum(int(digit) for digit in str(n+1)) % (n+1) == 0:\n            break\n        n += 1\n    print(n+1)",
        "result": "timed out",
        "similarities": [
            0.9947436451911926,
            0.9957126975059509,
            0.9938461780548096,
            0.9928348064422607,
            0.9948859214782715,
            0.9954694509506226,
            0.9939055442810059,
            0.9930359721183777,
            0.9933769106864929,
            0.9950976371765137,
            0.9909617900848389,
            0.995310366153717,
            0.9954694509506226,
            0.9958086609840393,
            0.9937503337860107,
            0.9953091144561768,
            0.992802083492279,
            0.9938386678695679,
            0.9871370196342468,
            0.9951487183570862
        ]
    },
    "4655": {
        "similarity": 0.9966451525688171,
        "body": "    q = int(input())\n    for _ in range(q):\n        a, b, c = map(int, input().split())\n        d = min(a, (b + c) // 2)\n        e = max(0, a - d)\n        print(min(d + e, (a + b + c) // 3))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9954918622970581,
            0.9906178712844849,
            0.9963023662567139,
            0.9966451525688171,
            0.9921794533729553,
            0.9957649111747742,
            0.9963559508323669,
            0.9966019988059998,
            0.9938892722129822,
            0.9960498809814453,
            0.9964331388473511,
            0.9962106347084045,
            0.9963861107826233,
            0.993121325969696,
            0.9961456656455994,
            0.9954219460487366,
            0.995139479637146,
            0.9951643943786621,
            0.9818472862243652,
            0.9948500394821167
        ]
    },
    "4132": {
        "similarity": 0.9948491454124451,
        "body": "    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    return min((A[i-1] - 1) % len(A) for i in range(2, N)) + 1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9912490844726562,
            0.9944837689399719,
            0.9944787621498108,
            0.9944387674331665,
            0.9843845367431641,
            0.9942581653594971,
            0.9912226796150208,
            0.9936991333961487,
            0.9945665001869202,
            0.9930046796798706,
            0.9939545392990112,
            0.9943304657936096,
            0.990043044090271,
            0.9937474131584167,
            0.986535906791687,
            0.9935116171836853,
            0.9939183592796326,
            0.9902930855751038,
            0.9948491454124451,
            0.9905381798744202
        ]
    },
    "4085": {
        "similarity": 0.9980924725532532,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        divisors = list(map(int, input().split()))\n        divisors.sort()\n        x = 1\n        while True:\n            if all(i % x == 0 or i not in divisors for i in range(2, x+1)):\n                print(x)\n                break\n            x += 1\n            if x == min(divisors):\n                print(-1)\n                break",
        "result": "failed: testcase 0",
        "similarities": [
            0.9969323873519897,
            0.9973884224891663,
            0.9980418682098389,
            0.9962288737297058,
            0.9976382851600647,
            0.9980924725532532,
            0.9978353381156921,
            0.9978065490722656,
            0.9966320395469666,
            0.9974737763404846,
            0.9974467754364014,
            0.998024582862854,
            0.9970807433128357,
            0.9964053630828857,
            0.9968648552894592,
            0.9978762269020081,
            0.9973858594894409,
            0.9972711801528931,
            0.9971666932106018,
            0.9976102709770203
        ]
    },
    "4399": {
        "similarity": 0.9931536316871643,
        "body": "any_A = S.count('A')\nany_B = S.count('B')\n\nif any_A > 0 and any_B > 0:\n    print('Yes')\nelse:\n    print('No')",
        "result": "failed: testcase 0",
        "similarities": [
            0.981347918510437,
            0.991058349609375,
            0.992014467716217,
            0.9912200570106506,
            0.9915546774864197,
            0.9885464906692505,
            0.9870298504829407,
            0.9909300804138184,
            0.9901852011680603,
            0.9861968159675598,
            0.9931536316871643,
            0.9923782348632812,
            0.9928320646286011,
            0.9916263222694397,
            0.9927179217338562,
            0.9917658567428589,
            0.9892975687980652,
            0.9897431135177612,
            0.9860764741897583,
            0.9906355142593384
        ]
    },
    "4999": {
        "similarity": 0.9969024658203125,
        "body": "    a, b = map(int, input().split())\n    res = 0\n    while a != b:\n        if a < b:\n            b -= a\n            a += 1\n        elif not a & 1:\n            a //= 2\n        else:\n            a -= 1\n        res += 1\n    print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9964436292648315,
            0.996509850025177,
            0.9940223693847656,
            0.9950401186943054,
            0.9951739311218262,
            0.9938944578170776,
            0.9955011606216431,
            0.996262788772583,
            0.9899013042449951,
            0.9917638897895813,
            0.9950401186943054,
            0.9948868155479431,
            0.992917001247406,
            0.9950401186943054,
            0.9969024658203125,
            0.9938269257545471,
            0.996834933757782,
            0.9950401186943054,
            0.9953007102012634,
            0.9938557147979736
        ]
    },
    "4727": {
        "similarity": 0.9969102740287781,
        "body": "    grid = [list(map(int, input().split())) for _ in range(4)]\n    move = int(input())\n    if move == 0:\n        return '\\n'.join([' '.join(map(str, row)) for row in grid])\n    new_grid = [[0] * 4 for _ in range(4)]\n    if move == 1:\n        for i in range(4):\n            for j in range(4):\n                new_grid[i][j] = grid[j][i]\n    elif move == 2:\n        transposed_grid = list(map(list, zip(*grid)))\n        for i in range(4):\n            for j in range(4):\n                new_grid[i][j] = transposed_grid[j][i]\n    else:\n        rotated_grid = list(zip(*[row[::-1] for row in grid]))\n        for i in range(4):\n            for j in range(4):\n                new_grid[i][j] = rotated_grid[j][i]\n    merged_grid = []\n    for row in new_grid:\n        merged_row = [cell for cell in row if cell != 0]\n        while len(merged_row) > 1 and (len(merged_row) % 2 == 0 or merged_row[0] == merged_row[-1]):\n            merged_row = [2 * x for x in merged_row[:-1]] + [0]\n        merged_grid.append([0] * (4 - len(merged_row)) + merged_row)\n    return '\\n'.join([' '.join(map(str, row)) for row in merged_grid])",
        "result": "timed out",
        "similarities": [
            0.9958428740501404,
            0.9960977435112,
            0.9967354536056519,
            0.9953665733337402,
            0.9966879487037659,
            0.9954414367675781,
            0.9963669180870056,
            0.9915103912353516,
            0.9957908987998962,
            0.9956289529800415,
            0.9960268139839172,
            0.9956020712852478,
            0.9969102740287781,
            0.9945725202560425,
            0.9953325390815735,
            0.9963092803955078,
            0.9963264465332031,
            0.9948264956474304,
            0.9968896508216858,
            0.9964683055877686
        ]
    },
    "4906": {
        "similarity": 0.9975764751434326,
        "body": "    x = input().strip()\n    if x[0] == 'E':\n        res = ''\n        i = 1\n        while i <= len(x):\n            c = x[i-1]\n            count = 0\n            while i < len(x) and x[i] == c:\n                i += 1\n                count += 1\n            if count > 0:\n                res += str(count)\n                res += c\n        print(res)\n    elif x[0] == 'D':\n        res = ''\n        i = 1\n        while i < len(x):\n            count = int(x[i-1])\n            c = x[i]\n            res += str(count*c)\n            i += 2",
        "result": "timed out",
        "similarities": [
            0.9970253705978394,
            0.9970823526382446,
            0.9969693422317505,
            0.9956578016281128,
            0.9972119927406311,
            0.9961044192314148,
            0.9975273013114929,
            0.9962853193283081,
            0.9965011477470398,
            0.9952631592750549,
            0.997371256351471,
            0.9972032308578491,
            0.9972749352455139,
            0.9957644939422607,
            0.9970107674598694,
            0.9971711039543152,
            0.9975405335426331,
            0.9966828227043152,
            0.9951605796813965,
            0.9975764751434326
        ]
    },
    "4011": {
        "similarity": 0.9951694011688232,
        "body": "    n = int(input())\n    a = str(input())\n    f_values = list(map(int, [input() for _ in range(9)]))\n    max_num = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            temp_str = ''.join(str(f_values[d-1]) if a[d-1] == str(d) else a[d-1] for d in range(i, j))\n            max_num = max(max_num, int(temp_str)) if int(temp_str) > max_num else max_num\n    print(max_num)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9947413206100464,
            0.9946684837341309,
            0.9937530159950256,
            0.9947221875190735,
            0.9936190247535706,
            0.9907124042510986,
            0.9895824790000916,
            0.9908433556556702,
            0.994884192943573,
            0.9929805397987366,
            0.9944344758987427,
            0.9898838400840759,
            0.9912174940109253,
            0.9933146238327026,
            0.9912322163581848,
            0.9937055706977844,
            0.9919371604919434,
            0.994090735912323,
            0.9951694011688232,
            0.9934533834457397
        ]
    },
    "4099": {
        "similarity": 0.9979356527328491,
        "body": "    n,k,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    s = sum(a)\n    if len(a) > 0:\n        t = (m*(len(a)+1)-s)//(len(a)+1)\n        return max(0,min(k,t))\n    else:\n        return -1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9971646070480347,
            0.9978231191635132,
            0.9961903095245361,
            0.996972918510437,
            0.9972096681594849,
            0.9958099722862244,
            0.9974570274353027,
            0.9978646636009216,
            0.9972177147865295,
            0.9979356527328491,
            0.9958092570304871,
            0.99737948179245,
            0.996608555316925,
            0.9967029094696045,
            0.9971795678138733,
            0.9967563152313232,
            0.9975971579551697,
            0.9957488179206848,
            0.9973620176315308,
            0.9972291588783264
        ]
    },
    "4465": {
        "similarity": 0.998127818107605,
        "body": "    a, b = map(int, input().split())\n    return (a-2)*(b-2)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9966678619384766,
            0.9980502724647522,
            0.9980502724647522,
            0.9980813264846802,
            0.998127818107605,
            0.9967402219772339,
            0.9980813264846802,
            0.9972752332687378,
            0.9943962097167969,
            0.9980813264846802,
            0.9966859221458435,
            0.9980769157409668,
            0.998127818107605,
            0.9968903064727783,
            0.9980813264846802,
            0.9966859221458435,
            0.9966860413551331,
            0.993330180644989,
            0.9965018033981323,
            0.9980813264846802
        ]
    },
    "4315": {
        "similarity": 0.9949880838394165,
        "body": "    R = int(input())\n    C = 2*R*3.14159265359\n    print(\"{:.5f}\".format(C))",
        "result": "passed",
        "similarities": [
            0.9921949505805969,
            0.9949880838394165,
            0.9928331971168518,
            0.9918831586837769,
            0.9933031797409058,
            0.9933031797409058,
            0.9933031797409058,
            0.9932891726493835,
            0.9932891726493835,
            0.9928598999977112,
            0.9895463585853577,
            0.9934108257293701,
            0.9932891726493835,
            0.9948523640632629,
            0.9932361245155334,
            0.9933031797409058,
            0.9943720102310181,
            0.9932891726493835,
            0.9906083941459656,
            0.9888603687286377
        ]
    },
    "4633": {
        "similarity": 0.999424159526825,
        "body": "    t = int(input())\n    for _ in range(t):\n        n, s = map(int, input().split())\n        ans = 0\n        while sum(int(digit) for digit in str(n)) > s:\n            n += 1\n            ans += 1\n        print(ans)",
        "result": "timed out",
        "similarities": [
            0.999424159526825,
            0.9993637800216675,
            0.9986363649368286,
            0.9993450045585632,
            0.999424159526825,
            0.999424159526825,
            0.9993637800216675,
            0.9993637800216675,
            0.9993711113929749,
            0.9986363649368286,
            0.9987881183624268,
            0.9993450045585632,
            0.9981685280799866,
            0.9994240999221802,
            0.999364972114563,
            0.9961998462677002,
            0.9993650317192078,
            0.9993450045585632,
            0.999345064163208,
            0.999424159526825
        ]
    },
    "4734": {
        "similarity": 0.9985160827636719,
        "body": "    if y.endswith('e'):\n        return y + 'x' + p\n    elif any(vowel in y for vowel in 'aiou'):\n        return y[:-1] + 'ex' + p\n    else:\n        return y + p",
        "result": "failed: testcase 0",
        "similarities": [
            0.9979036450386047,
            0.9976993203163147,
            0.998063325881958,
            0.9976993203163147,
            0.9973929524421692,
            0.9980185627937317,
            0.9985160827636719,
            0.9973769187927246,
            0.9984148144721985,
            0.9976730346679688,
            0.9980591535568237,
            0.9974250793457031,
            0.9983265399932861,
            0.9981468915939331,
            0.9984453320503235,
            0.9978864789009094,
            0.9978864789009094,
            0.9984895586967468,
            0.9985160827636719,
            0.9985160827636719
        ]
    },
    "4229": {
        "similarity": 0.9972377419471741,
        "body": "    N = int(input())\n    total = 0\n    for i in range(1, N+1):\n        if i % 3 == 0 and i % 5 == 0:\n            total += 0\n        elif i % 3 == 0:\n            total += 0\n        elif i % 5 == 0:\n            total += 0\n        else:\n            total += i\n    print(total)",
        "result": "passed",
        "similarities": [
            0.9833635091781616,
            0.9971705079078674,
            0.9972377419471741,
            0.9952693581581116,
            0.9959028959274292,
            0.9971705079078674,
            0.995456874370575,
            0.9971705079078674,
            0.9959028959274292,
            0.9972377419471741,
            0.9965097308158875,
            0.9972377419471741,
            0.9972377419471741,
            0.9971705079078674,
            0.9965097308158875,
            0.9970279335975647,
            0.9829660058021545,
            0.9952470064163208,
            0.9970279335975647,
            0.9972377419471741
        ]
    },
    "4321": {
        "similarity": 0.9987160563468933,
        "body": "    n, k = map(int, input().split())\n    for _ in range(k):\n        if n % 10 == 0:\n            n //= 10\n        else:\n            n -= 1\n    print(n)",
        "result": "passed",
        "similarities": [
            0.9987160563468933,
            0.9972074627876282,
            0.9987160563468933,
            0.998681902885437,
            0.9986982941627502,
            0.9940294027328491,
            0.9986982941627502,
            0.9987160563468933,
            0.9983267784118652,
            0.9987160563468933,
            0.9987160563468933,
            0.9987160563468933,
            0.9940294027328491,
            0.9986982941627502,
            0.9946029186248779,
            0.9986982941627502,
            0.9987160563468933,
            0.998681902885437,
            0.9980920553207397,
            0.9983267784118652
        ]
    },
    "4503": {
        "similarity": 0.9983181357383728,
        "body": "    H, N = map(int, input().split())\n    A = list(map(int, input().split()))\n    used = set()\n    for a in sorted(A):\n        while H > 0:\n            if a not in used:\n                H -= a\n                used.add(a)\n                break\n            H -= 1\n    print('Yes' if H <= 0 else 'No')",
        "result": "passed",
        "similarities": [
            0.9977772235870361,
            0.9966546297073364,
            0.9977923035621643,
            0.9978768229484558,
            0.9977732300758362,
            0.9978335499763489,
            0.9982889294624329,
            0.9972943663597107,
            0.9975997805595398,
            0.9983181357383728,
            0.9975732564926147,
            0.9978229999542236,
            0.9980400800704956,
            0.9967686533927917,
            0.9977723956108093,
            0.9978872537612915,
            0.9976788759231567,
            0.9971029162406921,
            0.9975641965866089,
            0.9973139762878418
        ]
    },
    "4855": {
        "similarity": 0.9977023601531982,
        "body": "    A, I = map(int, input().split())\n    return round(I * A) - A",
        "result": "failed: testcase 0",
        "similarities": [
            0.9976906180381775,
            0.9940416216850281,
            0.9976906180381775,
            0.9968211650848389,
            0.9976906180381775,
            0.9931097626686096,
            0.9972215294837952,
            0.9977023601531982,
            0.9963067770004272,
            0.9941111207008362,
            0.9850664734840393,
            0.9976906180381775,
            0.9966443777084351,
            0.9977023601531982,
            0.9976893067359924,
            0.9976906180381775,
            0.9918572306632996,
            0.9977023601531982,
            0.9976906180381775,
            0.9944000244140625
        ]
    },
    "4704": {
        "similarity": 0.9974784851074219,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = float('inf')\n    for i in range(n//2+1):\n        x = sum(a[:i])\n        y = sum(a[i:])\n        res = min(res, abs(x-y))\n    print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9969335198402405,
            0.9974784851074219,
            0.9972708821296692,
            0.9947803020477295,
            0.9954632520675659,
            0.9974784851074219,
            0.9972132444381714,
            0.9969444274902344,
            0.9951339364051819,
            0.9974784851074219,
            0.9969444274902344,
            0.9972708821296692,
            0.9901825785636902,
            0.9970825910568237,
            0.9971796274185181,
            0.9974216818809509,
            0.9973359704017639,
            0.9972132444381714,
            0.9958576560020447,
            0.9881898164749146
        ]
    },
    "4829": {
        "similarity": 0.9986355304718018,
        "body": "    left, right = map(int, input().split())\n    if left == right:\n        print(f\"Even {left*2}\")\n    elif max(left, right) * 2 <= 20:\n        print(f\"Odd {max(left, right)*2}\")\n    else:\n        print(\"Not a moose\")",
        "result": "failed: testcase 2",
        "similarities": [
            0.9985697865486145,
            0.9985502362251282,
            0.9985945820808411,
            0.9985811114311218,
            0.9981876015663147,
            0.9978712201118469,
            0.9970927834510803,
            0.9974513053894043,
            0.9980515241622925,
            0.9984006285667419,
            0.9976397156715393,
            0.998604416847229,
            0.99862140417099,
            0.9982560873031616,
            0.997755765914917,
            0.9986345171928406,
            0.997748613357544,
            0.9986355304718018,
            0.9976987242698669,
            0.9985502362251282
        ]
    },
    "4730": {
        "similarity": 0.9971862435340881,
        "body": "    L = int(input())\n    P = list(input().strip())\n    stack = []\n    for i, p in enumerate(P):\n        if p in ['(', '[', '{']:\n            stack.append((p, i))\n        elif p in [')', ']', '}']:\n            if not stack:\n                print(f\"{p} {i}\")\n            else:\n                o, _ = stack.pop()\n                if (o == '(' and p != ')') or (o == '[' and p != ']') or (o == '{' and p != '}'):\n                    print(f\"{p} {_}\")\n    elif len(P) > 0:\n        print(\"ok so far\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9955567717552185,
            0.9944211840629578,
            0.9955131411552429,
            0.9948254823684692,
            0.9971098899841309,
            0.9969357848167419,
            0.9943698048591614,
            0.9968280792236328,
            0.9954414367675781,
            0.9965567588806152,
            0.9971503019332886,
            0.9962121844291687,
            0.9961084127426147,
            0.9966530203819275,
            0.9950910806655884,
            0.9971862435340881,
            0.9968857169151306,
            0.9964640736579895,
            0.9933499693870544,
            0.9969614744186401
        ]
    },
    "4729": {
        "similarity": 0.9935756325721741,
        "body": "    password = input().upper()\n    message = input().upper()\n    for i in range(len(password)):\n        found = False\n        for j in range(i, len(message)):\n            if message[j] == password[i]:\n                found = True\n                break\n        if not found:\n            print(\"FAIL\")\n            return\n    print(\"PASS\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9838554263114929,
            0.9920945763587952,
            0.9911943078041077,
            0.9895409345626831,
            0.9835222363471985,
            0.9915957450866699,
            0.9897539019584656,
            0.9922875165939331,
            0.9913257956504822,
            0.992992103099823,
            0.9886050224304199,
            0.9920856952667236,
            0.9871875643730164,
            0.9906925559043884,
            0.9927385449409485,
            0.9909752607345581,
            0.9935756325721741,
            0.9909597635269165,
            0.9871181845664978,
            0.9896425008773804
        ]
    },
    "4582": {
        "similarity": 0.9959584474563599,
        "body": "    a = input().strip()\n    b = input().strip()\n    if a == 'H' and b == 'H':\n        print('H')\n    elif a == 'D' and b == 'D':\n        print('D')\n    else:\n        print('D' if a == 'H' else 'H')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9928392171859741,
            0.9951151013374329,
            0.9949138164520264,
            0.9959584474563599,
            0.9873969554901123,
            0.991926372051239,
            0.9923627972602844,
            0.9951022267341614,
            0.9938051104545593,
            0.993011474609375,
            0.9953280091285706,
            0.9945286512374878,
            0.992899477481842,
            0.9928392171859741,
            0.9957363605499268,
            0.9954288005828857,
            0.9957363605499268,
            0.9912364482879639,
            0.9951460957527161,
            0.993011474609375
        ]
    },
    "4910": {
        "similarity": 0.994698166847229,
        "body": "    N = int(input())\n    categories = set()\n    for _ in range(N):\n        category = input().strip().lower()\n        categories.add(category)\n    winner_categories = sorted([category for category in categories if categories.count(category) == 1])\n    print(*winner_categories, sep='\\n')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9936589598655701,
            0.9943986535072327,
            0.9899121522903442,
            0.9825292825698853,
            0.9919666647911072,
            0.9893649220466614,
            0.9926903247833252,
            0.9930137991905212,
            0.9918246269226074,
            0.9940088987350464,
            0.9777681231498718,
            0.9905346632003784,
            0.9937744140625,
            0.9944808483123779,
            0.9909465312957764,
            0.994698166847229,
            0.9931772947311401,
            0.9936252236366272,
            0.9941676259040833,
            0.9899827837944031
        ]
    },
    "4323": {
        "similarity": 0.9967048168182373,
        "body": "    n, m = map(int, input().split())\n    a = [0] * n\n    b = [0] * n\n    for i in range(n):\n        a[i], b[i] = map(int, input().split())\n    a.sort()\n    res = 0\n    s = sum(a)\n    for i in range(n):\n        if s > m:\n            return -1\n        s -= a[i]\n        while s + b[i] > m and i < n-1:\n            i += 1\n        res = i+1\n        break\n    print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9920921325683594,
            0.9962065815925598,
            0.9935358762741089,
            0.9910696148872375,
            0.9961562156677246,
            0.9941548705101013,
            0.9932221174240112,
            0.9967048168182373,
            0.9944321513175964,
            0.9953274130821228,
            0.9957297444343567,
            0.995949387550354,
            0.996291995048523,
            0.9951132535934448,
            0.9962804913520813,
            0.9965644478797913,
            0.9965099692344666,
            0.9963539838790894,
            0.9966787099838257,
            0.9958726763725281
        ]
    },
    "4626": {
        "similarity": 0.9968103170394897,
        "body": "    q = int(input())\n    for _ in range(q):\n        a, b, c = sorted(map(int, input().split()))\n        d1 = abs(a - b) + abs(a - c)\n        d2 = abs(b - c)\n        print(min(d1, d2))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9958999156951904,
            0.9958668947219849,
            0.9850911498069763,
            0.9957289695739746,
            0.9958641529083252,
            0.9957276582717896,
            0.9968103170394897,
            0.9960793852806091,
            0.9939756989479065,
            0.9959965944290161,
            0.9895256757736206,
            0.9956981539726257,
            0.9957289695739746,
            0.9957276582717896,
            0.9956990480422974,
            0.9958268404006958,
            0.9959080219268799,
            0.9958641529083252,
            0.9956490397453308,
            0.9898033142089844
        ]
    },
    "4400": {
        "similarity": 0.9937493205070496,
        "body": "    s = input()\n    ans = 0\n    cnt = 0\n    for c in s:\n        if c == 'R':\n            cnt += 1\n            ans = max(ans, cnt)\n        else:\n            cnt = 0\n    print(ans)",
        "result": "passed",
        "similarities": [
            0.9933989644050598,
            0.9930034279823303,
            0.9932264089584351,
            0.9932931661605835,
            0.9935898184776306,
            0.9902518391609192,
            0.9833944439888,
            0.9774508476257324,
            0.9928665161132812,
            0.9934812784194946,
            0.9811985492706299,
            0.9928665161132812,
            0.9885426759719849,
            0.9931303262710571,
            0.9910087585449219,
            0.9929568767547607,
            0.9930806756019592,
            0.9799704551696777,
            0.9933988451957703,
            0.9937493205070496
        ]
    },
    "4794": {
        "similarity": 0.9956281781196594,
        "body": "    R, C = map(int, input().split())\n    parking = [list(input()) for _ in range(R)]\n    total, one, two, three, four = 0, 0, 0, 0, 0\n    for i in range(R):\n        for j in range(C):\n            if parking[i][j] == '.':\n                for k in range(i-1, i+2):\n                    if 0 <= k < R and len(parking[k]) > j+2:\n                        if all('.' == parking[m][n] or n-j >= 2 and m-k >= 2 for m in range(k-1, k+2) for n in range(j-1, j+3)):\n                            total += 1\n                            break\n                else:\n                    for _ in range(4):\n                        parking[i][j] = '#'\n    print(total - one)\n    print(one - two)\n    print(two - three)\n    print(three - four)\n    print(four)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9927420616149902,
            0.9946843981742859,
            0.9912480711936951,
            0.9942996501922607,
            0.9952102303504944,
            0.9944551587104797,
            0.9945021271705627,
            0.9948154091835022,
            0.9945257306098938,
            0.9934688210487366,
            0.9931718111038208,
            0.9902883172035217,
            0.9935261607170105,
            0.9945326447486877,
            0.9950721263885498,
            0.9946568012237549,
            0.9937864542007446,
            0.9956281781196594,
            0.9925378561019897,
            0.9880062937736511
        ]
    },
    "4096": {
        "similarity": 0.9959713816642761,
        "body": "    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    pages = 0\n    days = 0\n    for i in range(n):\n        pages += min(a[i], days + 1)\n        days += (a[i] - 1) // i\n        if pages >= m:\n            break\n    print(-1 if pages < m else days)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9949444532394409,
            0.9949581623077393,
            0.9882723093032837,
            0.9937952756881714,
            0.9951465129852295,
            0.9942114949226379,
            0.9953658580780029,
            0.9947823286056519,
            0.9942794442176819,
            0.9941954612731934,
            0.9957086443901062,
            0.9935429096221924,
            0.9952186942100525,
            0.9959713816642761,
            0.9946008324623108,
            0.9912022948265076,
            0.9912088513374329,
            0.9915560483932495,
            0.9882652759552002,
            0.9946707487106323
        ]
    },
    "4530": {
        "similarity": 0.9957956075668335,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        skills = set(a)\n        unique_skills = len(skills)\n        same_skills = 1\n        for skill in skills:\n            if a.count(skill) > 1:\n                same_skills += 1\n        x = min(unique_skills // 2 + 1, same_skills // 3 + 1)\n        print(x)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9942666888237,
            0.9932001829147339,
            0.9884244799613953,
            0.9900643229484558,
            0.9932202100753784,
            0.9934680461883545,
            0.994931697845459,
            0.9919909238815308,
            0.9951984882354736,
            0.9911561608314514,
            0.9942530393600464,
            0.9944900870323181,
            0.9944403767585754,
            0.9955857992172241,
            0.9953367114067078,
            0.9957956075668335,
            0.994541347026825,
            0.9924841523170471,
            0.9951556324958801,
            0.9927432537078857
        ]
    },
    "4724": {
        "similarity": 0.994533360004425,
        "body": "a = float(input())\nb = a\nwhile True:\n    c = (a + b) / 2\n    if abs(c - b) <= 0.0001:\n        break\n    b = c\nprint(int(b))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9932137727737427,
            0.9919929504394531,
            0.993823230266571,
            0.993174135684967,
            0.9937792420387268,
            0.9944815635681152,
            0.9928933382034302,
            0.9878369569778442,
            0.9920666217803955,
            0.9935270547866821,
            0.9944104552268982,
            0.9928540587425232,
            0.9864067435264587,
            0.9926500916481018,
            0.9856938719749451,
            0.9939143657684326,
            0.994533360004425,
            0.9921251535415649,
            0.9929520487785339,
            0.9938753247261047
        ]
    },
    "4276": {
        "similarity": 0.9976268410682678,
        "body": "    N, T = map(int, input().split())\n    routes = []\n    for _ in range(N):\n        c, t = map(int, input().split())\n        if t <= T:\n            routes.append((c, t))\n    if not routes:\n        print('TLE')\n    else:\n        print(min(route[0] for route in routes))",
        "result": "passed",
        "similarities": [
            0.9974706768989563,
            0.9974449872970581,
            0.9965159893035889,
            0.9945945739746094,
            0.9968151450157166,
            0.9973408579826355,
            0.997161865234375,
            0.9970560669898987,
            0.9941889047622681,
            0.9976268410682678,
            0.9971947073936462,
            0.9973690509796143,
            0.9961230754852295,
            0.9965808391571045,
            0.9973556399345398,
            0.9925839304924011,
            0.9974942803382874,
            0.9965829253196716,
            0.9974337220191956,
            0.9972374439239502
        ]
    },
    "4708": {
        "similarity": 0.9958240985870361,
        "body": "    N = int(input())\n    K = int(input())\n    X = int(input())\n    Y = int(input())\n    return N * min(X, Y) + max(0, N - K) * (X - Y)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9950757622718811,
            0.9946947693824768,
            0.9944856762886047,
            0.9958240985870361,
            0.9958240985870361,
            0.9910832643508911,
            0.9901220202445984,
            0.995597243309021,
            0.993810772895813,
            0.9958240985870361,
            0.9956902265548706,
            0.9946947693824768,
            0.9956743121147156,
            0.9954690337181091,
            0.9931086301803589,
            0.9938485026359558,
            0.9886614084243774,
            0.9953152537345886,
            0.9938357472419739,
            0.9951956868171692
        ]
    },
    "4396": {
        "similarity": 0.999002993106842,
        "body": "    n = float(input())\n    total = 0\n    for _ in range(int(n)):\n        x, u = map(str.strip.split, [input().split()])\n        if u == 'BTC':\n            total += float(x) * 380000.0\n        else:\n            total += int(x)\n    print(total)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9989535808563232,
            0.9975584745407104,
            0.998835027217865,
            0.9944074749946594,
            0.9989126324653625,
            0.9984685182571411,
            0.9987913370132446,
            0.999002993106842,
            0.9987913370132446,
            0.9990019798278809,
            0.9986507892608643,
            0.9985415935516357,
            0.9989393353462219,
            0.9984685182571411,
            0.9980858564376831,
            0.9989933371543884,
            0.9990019798278809,
            0.9988346099853516,
            0.9986507892608643,
            0.9985054731369019
        ]
    },
    "4155": {
        "similarity": 0.9958642721176147,
        "body": "    N = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    prev_height = 0\n    for i in range(N):\n        if h[i] > prev_height:\n            ans += (h[i] - prev_height) // 2\n        prev_height = h[i]\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9926920533180237,
            0.9902454018592834,
            0.994831919670105,
            0.9920660257339478,
            0.9940109252929688,
            0.9929956197738647,
            0.9906345009803772,
            0.9941414594650269,
            0.9916747212409973,
            0.994140625,
            0.9950474500656128,
            0.9924753904342651,
            0.9950922727584839,
            0.9958080649375916,
            0.9954135417938232,
            0.9943122863769531,
            0.9958642721176147,
            0.9953135251998901,
            0.995771586894989,
            0.9902129173278809
        ]
    },
    "4557": {
        "similarity": 0.9981892108917236,
        "body": "    A,B,X = map(int,input().split())\n    if X <= A and X >= 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9976831078529358,
            0.9965538382530212,
            0.9981892108917236,
            0.9979052543640137,
            0.9956538677215576,
            0.99713134765625,
            0.9979950785636902,
            0.9966521263122559,
            0.9956480264663696,
            0.9978131055831909,
            0.9979133605957031,
            0.9962462186813354,
            0.9978922605514526,
            0.995816707611084,
            0.9974868297576904,
            0.9919198751449585,
            0.9974510073661804,
            0.998090922832489,
            0.9980002045631409,
            0.9979009032249451
        ]
    },
    "4930": {
        "similarity": 0.9928641319274902,
        "body": "    s = input().split()\n    for i in range(len(s)):\n        word = ''\n        for char in s[i]:\n            if char.lower() in 'aeiou':\n                word += 'p' + char\n            else:\n                word += char\n        s[i] = word\n    print(' '.join(s))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9924310445785522,
            0.9928641319274902,
            0.983364999294281,
            0.9921409487724304,
            0.982589840888977,
            0.9921672344207764,
            0.9812545776367188,
            0.992038905620575,
            0.9896778464317322,
            0.9917899966239929,
            0.9919483661651611,
            0.9720702171325684,
            0.9919856190681458,
            0.9892918467521667,
            0.9812880158424377,
            0.9923288226127625,
            0.9886825084686279,
            0.9928311705589294,
            0.9923786520957947,
            0.9886825084686279
        ]
    },
    "4715": {
        "similarity": 0.9987971782684326,
        "body": "    a, b, c = map(int, input().split())\n    print(len(set([a, b, c])))",
        "result": "passed",
        "similarities": [
            0.9987971782684326,
            0.9920287132263184,
            0.9987971782684326,
            0.9987971782684326,
            0.9987971782684326,
            0.9987491965293884,
            0.9977635741233826,
            0.9987971782684326,
            0.9987971782684326,
            0.9987971782684326,
            0.9977635741233826,
            0.9987971782684326,
            0.9987971782684326,
            0.9987971782684326,
            0.9987491965293884,
            0.9987971782684326,
            0.9977635741233826,
            0.9977635741233826,
            0.9987971782684326,
            0.9920287132263184
        ]
    },
    "4008": {
        "similarity": 0.9967962503433228,
        "body": "    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    for c in range(k+1):\n        if len(set(i%k+1 for i in set(a))) < k:\n            print(\"NO\")\n            return\n    d = dict.fromkeys(range(1,k+1),0)\n    for i in a:\n        d[i%k+1] += 1\n    if any(v > 1 for v in d.values()):\n        print(\"NO\")\n        return\n    c = [i%k+1 for i in a]\n    print(\"YES\")\n    print(*c, sep=' ')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9954153299331665,
            0.9947224855422974,
            0.9942114949226379,
            0.9938034415245056,
            0.9963288903236389,
            0.9957917928695679,
            0.9964760541915894,
            0.9960931539535522,
            0.9948264956474304,
            0.9949794411659241,
            0.9961333274841309,
            0.9949769377708435,
            0.9951324462890625,
            0.9967962503433228,
            0.9950035810470581,
            0.9957033395767212,
            0.996626615524292,
            0.9953932762145996,
            0.9946923851966858,
            0.9965957999229431
        ]
    },
    "4257": {
        "similarity": 0.9968120455741882,
        "body": "    a = int(input())\n    b = int(input())\n    print(a * b)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9968120455741882,
            0.9955787658691406,
            0.9932261109352112,
            0.9965787529945374,
            0.9955787658691406,
            0.9968120455741882,
            0.9946359395980835,
            0.9964354634284973,
            0.9968120455741882,
            0.9968120455741882,
            0.9909427165985107,
            0.9944720268249512,
            0.9965787529945374,
            0.9955787658691406,
            0.9955787658691406,
            0.9939501881599426,
            0.9965787529945374,
            0.9965787529945374,
            0.9934366345405579,
            0.995369553565979
        ]
    },
    "4584": {
        "similarity": 0.9986351728439331,
        "body": "    N = int(input())\n    A = [int(x) for x in input().split()]\n    ans = [0] * (N + 1)\n    for i in range(2, N + 1):\n        ans[A[i]] += 1\n    for i in range(1, N + 1):\n        print(ans[i])",
        "result": "failed: testcase 0",
        "similarities": [
            0.9986293315887451,
            0.992345929145813,
            0.9983636736869812,
            0.9983819723129272,
            0.9984727501869202,
            0.9984729290008545,
            0.9981897473335266,
            0.9985985159873962,
            0.9986000061035156,
            0.9976182579994202,
            0.9985014200210571,
            0.998630702495575,
            0.9986351728439331,
            0.9985483288764954,
            0.9984177350997925,
            0.9982361197471619,
            0.9982790946960449,
            0.9984123110771179,
            0.9983410239219666,
            0.9977802634239197
        ]
    },
    "4195": {
        "similarity": 0.9945040345191956,
        "body": "    D, N = map(int, input().split())\n    return 100 * (N - 1) // (3 - D) + 1 if D else 0",
        "result": "failed: testcase 0",
        "similarities": [
            0.9940348267555237,
            0.9920272827148438,
            0.9936153292655945,
            0.9944660663604736,
            0.9916390180587769,
            0.9893282651901245,
            0.994089663028717,
            0.9933759570121765,
            0.9883148670196533,
            0.9944707751274109,
            0.9940727949142456,
            0.9869902729988098,
            0.9943040609359741,
            0.9941906332969666,
            0.9895835518836975,
            0.9944028258323669,
            0.9902807474136353,
            0.9945040345191956,
            0.9898813962936401,
            0.9936555624008179
        ]
    },
    "4176": {
        "similarity": 0.9961644411087036,
        "body": "    A,B = map(int,input().split())\n    return max(A,B)*((A+B+1)//2)",
        "result": "failed: testcase 0",
        "similarities": [
            0.992832362651825,
            0.9937940835952759,
            0.9879257678985596,
            0.9942509531974792,
            0.994491696357727,
            0.9951127767562866,
            0.9866017699241638,
            0.9955916404724121,
            0.9909287691116333,
            0.9916594624519348,
            0.9957886934280396,
            0.9948500394821167,
            0.9961644411087036,
            0.9951858520507812,
            0.9925838112831116,
            0.9956035614013672,
            0.9946061968803406,
            0.9944837689399719,
            0.9954474568367004,
            0.9945633411407471
        ]
    },
    "4166": {
        "similarity": 0.9957135915756226,
        "body": "    N, M = map(int, input().split())\n    num = ''\n    for _ in range(M):\n        s, c = map(int, input().split())\n        num += str(c) * (s - 1) + '0' * (N - s)\n    print(min(i for i in range(10**(N-1), 10**N) if ''.join(str(i)[j] for j in range(N)) == num) or -1)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9924213290214539,
            0.9888623952865601,
            0.9943203330039978,
            0.9921308755874634,
            0.9936835765838623,
            0.9952214956283569,
            0.9949742555618286,
            0.9947313070297241,
            0.9910221099853516,
            0.9920427203178406,
            0.9951296448707581,
            0.9920555949211121,
            0.9931461811065674,
            0.9951310753822327,
            0.9957135915756226,
            0.9923983216285706,
            0.9945586323738098,
            0.9942540526390076,
            0.9944671988487244,
            0.992864191532135
        ]
    },
    "4827": {
        "similarity": 0.9891378283500671,
        "body": "    n = int(input())\n    words = [input().strip() for _ in range(n)]\n    num_words = len(words)\n    num_word_length_sum = sum(len(word) for word in words)\n    if num_word_length_sum < 1:\n        return \"one\"\n    elif num_word_length_sum == 1:\n        return str(num_word_length_sum)\n    elif num_word_length_sum <= 10:\n        return f\"{num_word_length_sum}\"\n    elif num_word_length_sum <= 19:\n        names = {11: 'eleven', 12: 'twelve', 13: 'thirteen', 14: 'fourteen',\n                 15: 'fifteen', 16: 'sixteen', 17: 'seventeen', 18: 'eighteen', 19: 'nineteen'}\n        return names[num_word_length_sum]\n    else:\n        ten_names = {2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty',\n                     6: 'sixty', 7: 'seventy', 8: 'eighty', 9: 'ninety'}\n        hundreds_name = f\"{'onehundred' if num_word_length_sum // 100 > 0 else ''}{ten_names.get(num_word_length_sum % 100, '')}{'' if num_word_length_sum % 100 == 1 and num_word_length_sum // 100 != 1 else 'one'}\"\n        return hundreds_name.replace(' ', '').replace('onehundred', 'one hundred')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9891378283500671,
            0.9849159717559814,
            0.9878895282745361,
            0.9610671997070312,
            0.9830766320228577,
            0.968359112739563,
            0.9755050539970398,
            0.9857758283615112,
            0.9870325326919556,
            0.9827612042427063,
            0.9871532917022705,
            0.9824393391609192,
            0.9830541014671326,
            0.9798424243927002,
            0.9853981733322144,
            0.987165629863739,
            0.9888301491737366,
            0.9821737408638,
            0.9822271466255188,
            0.9745270609855652
        ]
    },
    "4871": {
        "similarity": 0.9963397979736328,
        "body": "    n = int(input())\n    s = [int(input()) for _ in range(n)]\n    s.sort(reverse=True)\n    total = sum(s[i] * (4/5)**i for i in range(n))\n    group_score = total / 5\n    print(group_score)\n    avg = sum(s[i-1] * ((4/5)**(i-1)) + s[-1] * ((16/25)**(n-i)) for i in range(2, n+1)) / (n-1)\n    print(avg)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9952917695045471,
            0.9960936307907104,
            0.9948627352714539,
            0.9896593689918518,
            0.9959136843681335,
            0.9950124025344849,
            0.9954897165298462,
            0.9962144494056702,
            0.9957991242408752,
            0.9959172010421753,
            0.9963397979736328,
            0.9945104718208313,
            0.9918527007102966,
            0.9946703910827637,
            0.9915140867233276,
            0.9961125254631042,
            0.995949387550354,
            0.9959368705749512,
            0.9957683086395264,
            0.9908608198165894
        ]
    },
    "4148": {
        "similarity": 0.9932478070259094,
        "body": "    n = int(input())\n    s = input()\n    t = ''\n    for c in s:\n        t += chr((ord(c) - ord('A') + n) % 26 + ord('A'))\n    print(t)",
        "result": "passed",
        "similarities": [
            0.9914602041244507,
            0.9920856952667236,
            0.992324709892273,
            0.9921025633811951,
            0.9917622804641724,
            0.9762390851974487,
            0.9886654615402222,
            0.9924213290214539,
            0.9913179278373718,
            0.9820943474769592,
            0.9906499981880188,
            0.9687526226043701,
            0.984538733959198,
            0.9931119680404663,
            0.9928409457206726,
            0.9928012490272522,
            0.990852952003479,
            0.9796934723854065,
            0.9929229617118835,
            0.9932478070259094
        ]
    },
    "4316": {
        "similarity": 0.9951131939888,
        "body": "    s = input() \n    char_set = set(s) \n    if len(char_set) == 2 and all(s.count(c) == 2 for c in char_set): \n        print('Yes') \n    else: \n        print('No')",
        "result": "passed",
        "similarities": [
            0.9914609789848328,
            0.9947989583015442,
            0.9935361742973328,
            0.9923867583274841,
            0.9923886656761169,
            0.9938775300979614,
            0.9911399483680725,
            0.9907103180885315,
            0.9945811033248901,
            0.9933848977088928,
            0.9948106408119202,
            0.9939031004905701,
            0.9947940707206726,
            0.9899560809135437,
            0.9902327656745911,
            0.9927735924720764,
            0.9951047301292419,
            0.9913862347602844,
            0.9871671795845032,
            0.9951131939888
        ]
    },
    "4397": {
        "similarity": 0.997516930103302,
        "body": "    N, i = map(int, input().split())\n    j = N - i + 1\n    print(j)",
        "result": "passed",
        "similarities": [
            0.9968355298042297,
            0.9968355298042297,
            0.9967408776283264,
            0.997516930103302,
            0.9970258474349976,
            0.9963719248771667,
            0.9972542524337769,
            0.9971377849578857,
            0.997516930103302,
            0.9968355298042297,
            0.9963718056678772,
            0.997516930103302,
            0.997516930103302,
            0.9968355298042297,
            0.997516930103302,
            0.997516930103302,
            0.9967408776283264,
            0.9967408776283264,
            0.9968355298042297,
            0.9970258474349976
        ]
    },
    "4180": {
        "similarity": 0.9956892132759094,
        "body": "    n = int(input())\n    res = n // 1000\n    return 1000 * res - n",
        "result": "failed: testcase 0",
        "similarities": [
            0.9956668019294739,
            0.9912678599357605,
            0.9953169822692871,
            0.9956282377243042,
            0.9948055744171143,
            0.9937695860862732,
            0.9945493340492249,
            0.9956892132759094,
            0.9920905232429504,
            0.9872129559516907,
            0.9947723746299744,
            0.9925547242164612,
            0.9905316233634949,
            0.9956282377243042,
            0.9875881671905518,
            0.9907346963882446,
            0.9954968690872192,
            0.9932199716567993,
            0.9936357140541077,
            0.9956892132759094
        ]
    },
    "4907": {
        "similarity": 0.9977563619613647,
        "body": "    n = int(input())\n    if n % 2 == 0:\n        return \"Bob\", n // 2\n    else:\n        return \"Alice\", 1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9976214170455933,
            0.9962222576141357,
            0.9977563619613647,
            0.9971827268600464,
            0.9971524477005005,
            0.9975581169128418,
            0.9977563619613647,
            0.997202455997467,
            0.9963573813438416,
            0.9945513010025024,
            0.9975578188896179,
            0.9957881569862366,
            0.9941495656967163,
            0.997370183467865,
            0.9977563619613647,
            0.9976214170455933,
            0.9976214170455933,
            0.9899755716323853,
            0.9976214170455933,
            0.9895027875900269
        ]
    },
    "4839": {
        "similarity": 0.9966470003128052,
        "body": "    n = int(input())\n    c = list(map(int, input().split()))\n    c.sort()\n    res = 0\n    for i in range(n):\n        if c[i] < i + 1:\n            return \"impossible\"\n        res += c[i]\n    return str(res / sum(range(1, n + 1)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9961839318275452,
            0.9962813854217529,
            0.9954234957695007,
            0.9964123964309692,
            0.995798647403717,
            0.9916189908981323,
            0.9956284761428833,
            0.9964919090270996,
            0.9965296387672424,
            0.9963449239730835,
            0.9940634369850159,
            0.9955175518989563,
            0.9879886507987976,
            0.9962335228919983,
            0.9899508953094482,
            0.9966470003128052,
            0.9946116209030151,
            0.9948819875717163,
            0.9956672191619873,
            0.9947918653488159
        ]
    },
    "4665": {
        "similarity": 0.9922617077827454,
        "body": "namedtuple = namedtuple('StudentData','ID MARKS NAME CLASS')\nstudent_data = [namedtuple(*[input().split(',')])\n                for _ in range(int(input()))]\ntotal_marks = sum(student_datum.MARKS for student_datum in student_data)\nprint(format(total_marks/len(student_data), '.2f'))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9879797101020813,
            0.9906023740768433,
            0.9826551079750061,
            0.9896566271781921,
            0.9815312623977661,
            0.9863795042037964,
            0.9875349998474121,
            0.9814589619636536,
            0.9890077710151672,
            0.9880388975143433,
            0.9901260733604431,
            0.9906570315361023,
            0.9875024557113647,
            0.9866154193878174,
            0.9839159250259399,
            0.9893447756767273,
            0.9898080229759216,
            0.9922150373458862,
            0.9922617077827454,
            0.9917046427726746
        ]
    },
    "4785": {
        "similarity": 0.9993835091590881,
        "body": "    s = input()\n    if 'ss' in s:\n        print('hiss')\n    else:\n        print('no hiss')",
        "result": "passed",
        "similarities": [
            0.9993835091590881,
            0.997908353805542,
            0.9993835091590881,
            0.997440755367279,
            0.9993653893470764,
            0.9993835091590881,
            0.9936222434043884,
            0.9993653893470764,
            0.9993653893470764,
            0.9993835091590881,
            0.9993653893470764,
            0.9993835091590881,
            0.9993835091590881,
            0.9993835091590881,
            0.9993835091590881,
            0.9993835091590881,
            0.9993835091590881,
            0.9993835091590881,
            0.9993835091590881,
            0.9993653893470764
        ]
    },
    "4272": {
        "similarity": 0.9962294697761536,
        "body": "    n = int(input())\n    s = input()\n    count = 0\n    for i in range(n-2):\n        if s[i:i+3] == 'ABC':\n            count += 1\n    print(count)",
        "result": "passed",
        "similarities": [
            0.9925881624221802,
            0.9934665560722351,
            0.9961056113243103,
            0.9960322380065918,
            0.995895266532898,
            0.9935770630836487,
            0.994098961353302,
            0.9946764707565308,
            0.9960322380065918,
            0.9961056113243103,
            0.9929859042167664,
            0.9936386942863464,
            0.9962294697761536,
            0.9962294697761536,
            0.9940117597579956,
            0.9961836934089661,
            0.9934665560722351,
            0.9961836934089661,
            0.9957823753356934,
            0.9960277080535889
        ]
    },
    "4092": {
        "similarity": 0.996544599533081,
        "body": "    n = int(input())\n    a = [int(x) for x in input().split()]\n    res = 0\n    total = sum(a)\n    if total == 0:\n        return res\n    left, right = total, -total\n    for i in range(1, n):\n        left += a[i-1]\n        right -= a[n-i-1]\n        if left == 0:\n            res += len(range(i))\n            break\n    return res",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960464835166931,
            0.9936840534210205,
            0.9946117401123047,
            0.9946269989013672,
            0.9956923127174377,
            0.9955766797065735,
            0.9959766268730164,
            0.9950328469276428,
            0.9939472675323486,
            0.9928876757621765,
            0.996123194694519,
            0.9936621785163879,
            0.9959006309509277,
            0.991351306438446,
            0.9902375936508179,
            0.9926670789718628,
            0.9938222169876099,
            0.996544599533081,
            0.9964166283607483,
            0.9944251179695129
        ]
    },
    "4023": {
        "similarity": 0.9972239136695862,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    s = set(a)\n    if len(s) == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9969127178192139,
            0.9970727562904358,
            0.9821897149085999,
            0.9966426491737366,
            0.9971907734870911,
            0.9972239136695862,
            0.9964200258255005,
            0.9972043633460999,
            0.9960733652114868,
            0.9956462383270264,
            0.9969428181648254,
            0.9971602559089661,
            0.9919769167900085,
            0.9970749616622925,
            0.9967824220657349,
            0.9971745014190674,
            0.9972190856933594,
            0.9951412677764893,
            0.9967831969261169,
            0.9966919422149658
        ]
    },
    "4160": {
        "similarity": 0.9970905184745789,
        "body": "    x = int(input())\n    y = 0\n    while True:\n        if 2**y * 100 + 1 >= x:\n            break\n        y += 1\n    print(y)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9964805245399475,
            0.9954132437705994,
            0.9950331449508667,
            0.9966667890548706,
            0.9958506226539612,
            0.9958877563476562,
            0.9942824840545654,
            0.9969633221626282,
            0.9963314533233643,
            0.996895432472229,
            0.9962937235832214,
            0.9948325157165527,
            0.9967169761657715,
            0.9969031810760498,
            0.9970905184745789,
            0.9963890910148621,
            0.9966353178024292,
            0.9968042969703674,
            0.9957953095436096,
            0.9962796568870544
        ]
    },
    "4815": {
        "similarity": 0.9978339672088623,
        "body": "    n, p, m = map(int, input().split())\n    players = {}\n    for _ in range(n):\n        player = input()\n        players[player] = 0\n    for _ in range(m):\n        player, points = input().split()\n        players[player] += int(points)\n    winners = [player for player, score in players.items() if score >= p]\n    if winners:\n        print(*[f\"{player} wins!\" for player in sorted(winners)], sep='\\n')\n    else:\n        print(\"No winner!\")",
        "result": "passed",
        "similarities": [
            0.9971907734870911,
            0.9967780709266663,
            0.9969228506088257,
            0.997486412525177,
            0.9969578981399536,
            0.9976469278335571,
            0.9959664940834045,
            0.9937453866004944,
            0.9937189817428589,
            0.9976567625999451,
            0.9978339672088623,
            0.997490644454956,
            0.9971407055854797,
            0.9964243173599243,
            0.9977003335952759,
            0.9956893920898438,
            0.9972026348114014,
            0.9971810579299927,
            0.9977033734321594,
            0.9975841045379639
        ]
    },
    "4514": {
        "similarity": 0.9970422387123108,
        "body": "    n, q = map(int, input().split())\n    parent = [0] + list(map(int, input().split()))\n    res = []\n    for _ in range(q):\n        u, k = map(int, input().split())\n        visited = [False] * (n+1)\n            if not visited[x]:\n                visited[x] = True\n                yield from dfs(parent[x])\n                yield x\n        for officer in chain.from_iterable(dfs(u)):\n            res.append(officer)\n            k -= 1\n            if k == 0:\n                break\n        else:\n            res.append(-1)\n    print(*res, sep='\\n')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9964938759803772,
            0.9967553019523621,
            0.9961587190628052,
            0.9955741763114929,
            0.9960511922836304,
            0.9962981343269348,
            0.9964733123779297,
            0.9959744811058044,
            0.9967655539512634,
            0.9928603172302246,
            0.9968220591545105,
            0.9966508746147156,
            0.9959283471107483,
            0.9938067197799683,
            0.9949995279312134,
            0.9970422387123108,
            0.9961594343185425,
            0.9955124258995056,
            0.9961857199668884,
            0.9953064322471619
        ]
    },
    "4585": {
        "similarity": 0.9930469393730164,
        "body": "    X = int(input())\n    t = 0\n    while True:\n        if abs(X-t) <= t+1:\n            return t+1\n        t += 1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9881194233894348,
            0.9871384501457214,
            0.9860143065452576,
            0.9880277514457703,
            0.9906899333000183,
            0.9876068830490112,
            0.9917137026786804,
            0.9880090355873108,
            0.9877040386199951,
            0.9895247220993042,
            0.9909481406211853,
            0.9877759218215942,
            0.9848465323448181,
            0.9930469393730164,
            0.9927827715873718,
            0.9914236664772034,
            0.9786326885223389,
            0.9888603091239929,
            0.9863182902336121,
            0.986006498336792
        ]
    },
    "4781": {
        "similarity": 0.9962344765663147,
        "body": "    K = int(input())\n    N = int(input())\n    for _ in range(N):\n        t, z = map(str.split, [input().split()])\n        t, z = int(t[0]), z[0]\n        if z == 'T':\n            K = (K + 1) % 8\n    print(K)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9946898221969604,
            0.9931017160415649,
            0.9944142699241638,
            0.993540346622467,
            0.9954003691673279,
            0.9915117025375366,
            0.9957128763198853,
            0.9950348734855652,
            0.9955301880836487,
            0.995991587638855,
            0.9943209290504456,
            0.9949826598167419,
            0.9955586791038513,
            0.9928932189941406,
            0.9962344765663147,
            0.9935957193374634,
            0.9958797097206116,
            0.9955150485038757,
            0.9941935539245605,
            0.9956110119819641
        ]
    },
    "4551": {
        "similarity": 0.9979463219642639,
        "body": "    A,B,C,D = map(int,input().split())\n    if A+B>C+D: \n        print(\"Left\")\n    elif A+B==C+D:\n        print(\"Balanced\")\n    else: \n        print(\"Right\")",
        "result": "passed",
        "similarities": [
            0.9969347715377808,
            0.9964746236801147,
            0.9976608157157898,
            0.9973680377006531,
            0.9963929057121277,
            0.9976896047592163,
            0.9975568056106567,
            0.9967087507247925,
            0.997816264629364,
            0.9976608157157898,
            0.996683657169342,
            0.9978204369544983,
            0.9925384521484375,
            0.9963929057121277,
            0.9979463219642639,
            0.9979352355003357,
            0.9922041893005371,
            0.9977971315383911,
            0.9946942925453186,
            0.996616542339325
        ]
    },
    "4345": {
        "similarity": 0.9971725344657898,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    increasing = []\n    decreasing = []\n    for i in range(n):\n        if not increasing or a[i] > increasing[-1]:\n            increasing.append(a[i])\n        elif not decreasing or a[i] < decreasing[-1]:\n            decreasing.append(a[i])\n        else:\n            break\n    if len(increasing) + len(decreasing) != n:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        for i in range(n):\n            print(0 if a[i] in increasing else 1)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9964229464530945,
            0.9969567060470581,
            0.9947888255119324,
            0.9964016675949097,
            0.9965549111366272,
            0.9959160685539246,
            0.9971725344657898,
            0.9921619296073914,
            0.9963300824165344,
            0.9963344931602478,
            0.9932877421379089,
            0.9967332482337952,
            0.9969252347946167,
            0.9950985312461853,
            0.9950994253158569,
            0.9959096312522888,
            0.996628999710083,
            0.9958099722862244,
            0.9901039004325867,
            0.9927932620048523
        ]
    },
    "4075": {
        "similarity": 0.9978569746017456,
        "body": "    N, M = map(int, input().split())\n    k = [list(map(int, input().split()))[i:] for i in range(M)]\n    p = list(map(int, input().split()))\n    ans = 0\n    for bulb_states in (1 << i for i in range(N)):\n        for i in range(M):\n            count = sum(((bulb_states >> s - 1) & 1) == ((k[i][j] + 1) % 2) for j in range(k[i].__len__()))\n            if count % 2 != p[i]:\n                break\n        else:\n            ans += 1\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9975402355194092,
            0.9976099133491516,
            0.9969056844711304,
            0.9959471821784973,
            0.9976943135261536,
            0.9958981275558472,
            0.9975793957710266,
            0.9974910616874695,
            0.9978569746017456,
            0.9974175691604614,
            0.9964118003845215,
            0.9960746765136719,
            0.9972466230392456,
            0.9975501894950867,
            0.9977245330810547,
            0.9972400665283203,
            0.9974654316902161,
            0.9967416524887085,
            0.9960705637931824,
            0.9918947815895081
        ]
    },
    "4408": {
        "similarity": 0.995181143283844,
        "body": "    n,k = map(int,input().split())\n    c = list(map(int,input().split()))\n    f_n = list(map(int,input().split()))\n    h = list(map(int,input().split()))\n    max_j = 0\n    for i in range(k+1):\n        j = sum(min(h[t-1],f.count(f_n[j-1])) for j, f in enumerate(f_n))\n        if j > max_j:\n            max_j = j\n    print(max_j * k)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9908247590065002,
            0.9886244535446167,
            0.9928926229476929,
            0.9904875755310059,
            0.99202960729599,
            0.9940197467803955,
            0.9919353127479553,
            0.9909272789955139,
            0.995181143283844,
            0.992939829826355,
            0.9934629201889038,
            0.9825136065483093,
            0.9931427836418152,
            0.9933737516403198,
            0.991500973701477,
            0.9943060874938965,
            0.993395984172821,
            0.9943578839302063,
            0.9947314262390137,
            0.994032621383667
        ]
    },
    "4282": {
        "similarity": 0.9964722394943237,
        "body": "    n = int(input())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    p = list(range(1, n + 1))\n    for i in range(n):\n        if p[i] == a[i][0]:\n            next_p = a[i][1]\n        else:\n            next_p = a[i][0]\n        j = (i + 1) % n\n        while p[j] != next_p:\n            j = (j + 1) % n\n        p[i], p[j] = p[j], p[i]\n    print(' '.join(map(str, p)))",
        "result": "passed",
        "similarities": [
            0.9950026273727417,
            0.9956318736076355,
            0.9935836791992188,
            0.9956713318824768,
            0.9879359006881714,
            0.9959612488746643,
            0.9959365725517273,
            0.9947853088378906,
            0.9931820631027222,
            0.9953550100326538,
            0.9943901896476746,
            0.9960833191871643,
            0.9956743121147156,
            0.9920212626457214,
            0.9962320923805237,
            0.9929482340812683,
            0.9878255128860474,
            0.9951264262199402,
            0.9964722394943237,
            0.993076741695404
        ]
    },
    "4331": {
        "similarity": 0.9996270537376404,
        "body": "    n = int(input())\n    if '7' in str(n):\n        print('Yes')\n    else:\n        print('No')",
        "result": "passed",
        "similarities": [
            0.9992014169692993,
            0.9996153116226196,
            0.9996270537376404,
            0.9996270537376404,
            0.9991928935050964,
            0.9968647360801697,
            0.9996270537376404,
            0.9996270537376404,
            0.9996153116226196,
            0.9996270537376404,
            0.9991928935050964,
            0.9996153116226196,
            0.9996270537376404,
            0.9996153116226196,
            0.9996153116226196,
            0.9996270537376404,
            0.9996153116226196,
            0.9991928935050964,
            0.9996153116226196,
            0.9996270537376404
        ]
    },
    "4550": {
        "similarity": 0.9987050294876099,
        "body": "    a,b,c = map(int,input().split())\n    if (a+b+c)%2==0:\n        print('Yes') \n    else:\n        print('No')",
        "result": "failed: testcase 1",
        "similarities": [
            0.9987010955810547,
            0.9986740946769714,
            0.9985901713371277,
            0.9981482625007629,
            0.9986705780029297,
            0.9984537363052368,
            0.9987050294876099,
            0.9986433982849121,
            0.9975389242172241,
            0.99822998046875,
            0.9956263303756714,
            0.9986006021499634,
            0.9986192584037781,
            0.9986541271209717,
            0.9965276122093201,
            0.9978206157684326,
            0.9955269694328308,
            0.9986675977706909,
            0.9985310435295105,
            0.9974802136421204
        ]
    },
    "4271": {
        "similarity": 0.9978134632110596,
        "body": "    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))[:-1]\n    return sum(B[i] + (C[i-1] if i > 0 else 0) for i in range(N))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9976341128349304,
            0.9976938962936401,
            0.9975698590278625,
            0.9978134632110596,
            0.9974513649940491,
            0.9972767233848572,
            0.9977514147758484,
            0.9976163506507874,
            0.9974732995033264,
            0.9816790223121643,
            0.9939661622047424,
            0.9904755353927612,
            0.9976251721382141,
            0.9972767233848572,
            0.9977049827575684,
            0.9975754618644714,
            0.9957646727561951,
            0.997787356376648,
            0.9973353147506714,
            0.9973241090774536
        ]
    },
    "4848": {
        "similarity": 0.997796893119812,
        "body": "    for m in range(2, n):\n        if all(i**2 > m*n for i in range(1, int(m**0.5)+1)):\n            return m\n    return 2",
        "result": "failed: testcase 0",
        "similarities": [
            0.997796893119812,
            0.9971828460693359,
            0.9940850138664246,
            0.9973987936973572,
            0.9953365325927734,
            0.99774569272995,
            0.9971944093704224,
            0.9954798817634583,
            0.9960308074951172,
            0.9950324892997742,
            0.9974366426467896,
            0.9977019429206848,
            0.9938658475875854,
            0.9929906129837036,
            0.9974116086959839,
            0.996293306350708,
            0.99774569272995,
            0.9942867755889893,
            0.9976789355278015,
            0.9970816373825073
        ]
    },
    "4694": {
        "similarity": 0.9959632754325867,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    min_distance = 0\n    for i in range(1, len(a)):\n        min_distance += a[i] - a[i-1]\n    return min_distance + a[-1] - a[0]",
        "result": "failed: testcase 0",
        "similarities": [
            0.9934995770454407,
            0.9957695007324219,
            0.9830260276794434,
            0.9957313537597656,
            0.9919661283493042,
            0.9953131675720215,
            0.9952163696289062,
            0.9959058165550232,
            0.9957841634750366,
            0.9931631684303284,
            0.994907796382904,
            0.9957450032234192,
            0.9946404695510864,
            0.9951454997062683,
            0.9959632754325867,
            0.9941655397415161,
            0.9958251118659973,
            0.9952106475830078,
            0.9944913983345032,
            0.9935863018035889
        ]
    },
    "4213": {
        "similarity": 0.9930185079574585,
        "body": "    N = int(input())\n    A = list(map(int, input().split()))\n    return max(abs(A[i] - A[j]) for i in range(N) for j in range(i+1,N))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9887130260467529,
            0.9927526712417603,
            0.9906281232833862,
            0.9916042685508728,
            0.9843038320541382,
            0.9930185079574585,
            0.9927526712417603,
            0.9906467795372009,
            0.9922878742218018,
            0.9881097078323364,
            0.9906066060066223,
            0.9925252199172974,
            0.9922844767570496,
            0.9887130260467529,
            0.9859324097633362,
            0.9849118590354919,
            0.9884868264198303,
            0.9906281232833862,
            0.9761104583740234,
            0.9928085207939148
        ]
    },
    "4471": {
        "similarity": 0.9968752861022949,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        while any(i > 0 for i in a):\n            a = [max(0, i-1) if i > 0 else 0 for i in a]\n            n -= sum(1 for i in a if i > 0)\n            if n == 0:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")",
        "result": "failed: testcase 3",
        "similarities": [
            0.9957615733146667,
            0.9962099194526672,
            0.9943391680717468,
            0.992296040058136,
            0.9963405132293701,
            0.9963779449462891,
            0.9963656067848206,
            0.9951727986335754,
            0.9948989748954773,
            0.9963384866714478,
            0.9945142865180969,
            0.9968752861022949,
            0.9959333539009094,
            0.9963569641113281,
            0.995364248752594,
            0.9956444501876831,
            0.9759057760238647,
            0.9961166381835938,
            0.9951114654541016,
            0.9949983358383179
        ]
    },
    "4802": {
        "similarity": 0.9958353638648987,
        "body": "    h, m = map(int, input().split())\n    new_m = (m - 45) % 60\n    new_h = (h - 1) if new_m < 0 else h - 1\n    print(f\"{new_h} {new_m}\")",
        "result": "failed: testcase 1",
        "similarities": [
            0.9855736494064331,
            0.9958353638648987,
            0.9941084980964661,
            0.9954771995544434,
            0.9929600954055786,
            0.9942735433578491,
            0.9952589273452759,
            0.9917552471160889,
            0.9953325986862183,
            0.9958072304725647,
            0.9938449859619141,
            0.9935204386711121,
            0.9936505556106567,
            0.9954427480697632,
            0.9951924085617065,
            0.9941861033439636,
            0.99541836977005,
            0.9939849376678467,
            0.988523006439209,
            0.9935113787651062
        ]
    },
    "4890": {
        "similarity": 0.9960636496543884,
        "body": "    n, m, s, d = map(int, input().split())\n    c = list(map(int, input().split()))\n    ans = [0]*s\n    c.sort()\n    for i in range(min(n, m)):\n        ans[c.index(min(c))]+=1\n        c[c.index(min(c))] = 0\n    if sum(ans) != n:\n        print('impossible')\n    else:\n        print(*ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.993938148021698,
            0.9934405088424683,
            0.9957882761955261,
            0.9949299693107605,
            0.9885593056678772,
            0.9960636496543884,
            0.9960048198699951,
            0.9936075806617737,
            0.9923458099365234,
            0.9950928092002869,
            0.9949019551277161,
            0.995477557182312,
            0.9951665997505188,
            0.9950262308120728,
            0.9867204427719116,
            0.9953137636184692,
            0.9928374290466309,
            0.9947792887687683,
            0.995041012763977,
            0.9925893545150757
        ]
    },
    "4286": {
        "similarity": 0.9968000650405884,
        "body": "    n,m = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = []\n    for _ in range(m):\n        x,y,w = map(int, input().split()); s.append((x,y,w))\n    s.sort()\n    ans = 0\n    last = -1\n    for x,y,w in s:\n        if a[x-1] + a[y-1] < w: \n            ans += a[x-1] + a[y-1]\n            last = max(last, y)\n        else: \n            ans += w\n            last = max(last, y)\n    ans += sum(a[last:])\n    return ans",
        "result": "failed: testcase 0",
        "similarities": [
            0.9919427633285522,
            0.9968000650405884,
            0.9952583312988281,
            0.9959517121315002,
            0.9959818124771118,
            0.9962945580482483,
            0.9962260723114014,
            0.9955058693885803,
            0.995877742767334,
            0.9963339567184448,
            0.9961421489715576,
            0.9960592985153198,
            0.9960377216339111,
            0.9957911968231201,
            0.9948005676269531,
            0.9955610036849976,
            0.9948809742927551,
            0.9963720440864563,
            0.9857911467552185,
            0.9949027895927429
        ]
    },
    "4713": {
        "similarity": 0.9989311099052429,
        "body": "    N = int(input())\n    S = input()\n    x = 0\n    for s in S:\n        if s == 'I':\n            x += 1\n        else:\n            x -= 1\n    print(max(0, x))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9987006783485413,
            0.998897135257721,
            0.9978973865509033,
            0.9979997873306274,
            0.9989311099052429,
            0.9985650777816772,
            0.998038649559021,
            0.9989047646522522,
            0.9987192749977112,
            0.9988812804222107,
            0.9989047646522522,
            0.9985583424568176,
            0.9989047646522522,
            0.9989311099052429,
            0.998543918132782,
            0.9988945722579956,
            0.9986726641654968,
            0.998063862323761,
            0.9988945722579956,
            0.9984462261199951
        ]
    },
    "4698": {
        "similarity": 0.9961206316947937,
        "body": "    N = int(input())\n    T = list(map(int, input().split()))\n    M = int(input())\n    P = []\n    X = []\n    for _ in range(M):\n        p, x = map(int, input().split())\n        P.append(p-1)\n        X.append(x)\n    for i in set(P):\n        t = sum(T[j] if j not in [p-1 for p in P] else T[j]+X[P.index(i)-1] for j in range(N))\n        print(t)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9956614971160889,
            0.9942139387130737,
            0.9939264059066772,
            0.9952173829078674,
            0.9955596923828125,
            0.9936254620552063,
            0.9940155744552612,
            0.993802547454834,
            0.9953485727310181,
            0.9950260519981384,
            0.9945322275161743,
            0.9929414391517639,
            0.9945212006568909,
            0.9961206316947937,
            0.9941738843917847,
            0.9943769574165344,
            0.991191565990448,
            0.9906284809112549,
            0.9936790466308594,
            0.9956984519958496
        ]
    },
    "4841": {
        "similarity": 0.997603178024292,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if str(a[i]) != 'mumble':\n            a[i] = int(str(a[i]).strip('0'))\n    count = 1\n    prev = a[0]\n    for num in a:\n        if num == 'mumble':\n            continue\n        if num < prev + 1:\n            return print(\"something is fishy\")\n        prev = num\n        count += 1\n    print(\"makes sense\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9970176219940186,
            0.9968753457069397,
            0.9973782896995544,
            0.9969608187675476,
            0.9966186881065369,
            0.997353732585907,
            0.9970956444740295,
            0.9950621724128723,
            0.997251033782959,
            0.995522141456604,
            0.9972490072250366,
            0.9966865181922913,
            0.9963650107383728,
            0.9926013946533203,
            0.9972904920578003,
            0.9972379803657532,
            0.9947776794433594,
            0.997603178024292,
            0.9968568682670593,
            0.9975602030754089
        ]
    },
    "4865": {
        "similarity": 0.9974202513694763,
        "body": "    N = int(input())\n    for _ in range(N):\n        direction, D, H, M = input().split()\n        if direction == 'F':\n            H += D // 60\n            M += D % 60\n        else:\n            H -= D // 60\n            M -= D % 60\n        H %= 24\n        print(f'{H} {M}')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9931910634040833,
            0.9973313212394714,
            0.9968127012252808,
            0.9957018494606018,
            0.9963288903236389,
            0.9964445233345032,
            0.9951460957527161,
            0.996608555316925,
            0.9970453381538391,
            0.9970563650131226,
            0.9962376952171326,
            0.9974202513694763,
            0.9972947835922241,
            0.9969478249549866,
            0.9971078634262085,
            0.9968471527099609,
            0.9937711954116821,
            0.9959008097648621,
            0.9939567446708679,
            0.9972788095474243
        ]
    },
    "4957": {
        "similarity": 0.9959137439727783,
        "body": "    n, m = map(int, input().split())\n    grid = [list(input()) for _ in range(n)]\n    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n        if i < 0 or i >= n or j < 0 or j >= m:\n            return\n        if grid[i][j] == 'E':\n            return\n        for d in directions:\n            ni, nj = i + d[0], j + d[1]\n            if 0 <= ni < n and 0 <= nj < m and grid[ni][nj] != '#':\n                dfs(ni, nj)\n        grid[i][j] = 'E'\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '.':\n                dfs(i, j)\n    for row in grid:\n        print(''.join(row))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9935737252235413,
            0.994367778301239,
            0.9907403588294983,
            0.995127260684967,
            0.9938612580299377,
            0.9956811666488647,
            0.9938395619392395,
            0.9949806928634644,
            0.9774470925331116,
            0.9944745302200317,
            0.9947865009307861,
            0.9934662580490112,
            0.994499921798706,
            0.9954389333724976,
            0.9920716881752014,
            0.9945313334465027,
            0.9940354228019714,
            0.9959137439727783,
            0.993089497089386,
            0.9933856129646301
        ]
    },
    "4382": {
        "similarity": 0.9965968728065491,
        "body": "    N = int(input())\n    print(10**N)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9931420087814331,
            0.9946222901344299,
            0.9965968728065491,
            0.996147871017456,
            0.9965968728065491,
            0.9941994547843933,
            0.9937595725059509,
            0.9938093423843384,
            0.9952974915504456,
            0.996168851852417,
            0.9948407411575317,
            0.9965968728065491,
            0.9954873919487,
            0.9965968728065491,
            0.9954366087913513,
            0.9950711131095886,
            0.9948156476020813,
            0.9945578575134277,
            0.995288074016571,
            0.9819960594177246
        ]
    },
    "4456": {
        "similarity": 0.9967954754829407,
        "body": "    n, k = map(int, input().split())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    s = ['a' + chr(i) for i in range(k - 1)] * (n // (k - 1)) + ['a'] * (n % (k - 1))\n    for i in range(n):\n        if p[i] < q[i]:\n            s[p[i]], s[q[i]] = s[q[i]], s[p[i]]\n    print(\"YES\")\n    print(''.join(s))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9953659772872925,
            0.9927073121070862,
            0.996006429195404,
            0.9948720335960388,
            0.9949852824211121,
            0.9943162798881531,
            0.9966615438461304,
            0.9967954754829407,
            0.9936131834983826,
            0.996124804019928,
            0.9964038729667664,
            0.9966945648193359,
            0.9955326914787292,
            0.9939929842948914,
            0.9964147806167603,
            0.9955424070358276,
            0.9960614442825317,
            0.9927783608436584,
            0.9952470660209656,
            0.9955598711967468
        ]
    },
    "4594": {
        "similarity": 0.9990876913070679,
        "body": "    N = int(input())\n    d = [int(x) for x in input().split()]\n    d.sort(reverse=True)\n    layers = 1\n    prev_diameter = d[0]\n    for diameter in d:\n        if diameter < prev_diameter:\n            layers += 1\n        prev_diameter = diameter\n    print(layers)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9988132119178772,
            0.9988482594490051,
            0.9988482594490051,
            0.9982134103775024,
            0.9989953637123108,
            0.9989479780197144,
            0.998141348361969,
            0.9984657168388367,
            0.9984359741210938,
            0.9983484148979187,
            0.9990300536155701,
            0.9989012479782104,
            0.9986289143562317,
            0.9986997842788696,
            0.9988772869110107,
            0.9988875985145569,
            0.9987552165985107,
            0.9989587068557739,
            0.9990876913070679,
            0.9989327788352966
        ]
    },
    "4560": {
        "similarity": 0.9967683553695679,
        "body": "    N = int(input())\n    A = int(input())\n    for i in range((N+499)//500+1):\n        if (i*500 + N%500) <= A:\n            print('Yes')\n            return\n    print('No')",
        "result": "passed",
        "similarities": [
            0.9956843852996826,
            0.9967683553695679,
            0.9928165078163147,
            0.9965013265609741,
            0.9956074953079224,
            0.9957606792449951,
            0.9961208701133728,
            0.9957291483879089,
            0.9958797097206116,
            0.9952634572982788,
            0.9936063885688782,
            0.991552472114563,
            0.9955123066902161,
            0.9961907267570496,
            0.991552472114563,
            0.9945334196090698,
            0.9925824999809265,
            0.9958043694496155,
            0.9954229593276978,
            0.9956843852996826
        ]
    },
    "4320": {
        "similarity": 0.997882068157196,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        x = 1\n        k = 2\n        while True:\n            total = sum([2**i * x for i in range(k)])\n            if total == n:\n                print(x)\n                break\n            k += 1",
        "result": "timed out",
        "similarities": [
            0.9975343346595764,
            0.9969469308853149,
            0.9976223707199097,
            0.996963620185852,
            0.997882068157196,
            0.9976996183395386,
            0.9971860647201538,
            0.9974244832992554,
            0.9976266622543335,
            0.996343731880188,
            0.9960971474647522,
            0.9978537559509277,
            0.9926867485046387,
            0.9973932504653931,
            0.9971423745155334,
            0.9968861937522888,
            0.9902848601341248,
            0.9968243837356567,
            0.9973593354225159,
            0.9959548115730286
        ]
    },
    "4500": {
        "similarity": 0.9988852143287659,
        "body": "    A,B,C = map(int,input().split())\n    if A+B >= C:\n        print('Yes')\n    else:\n        print('No')",
        "result": "passed",
        "similarities": [
            0.9987848997116089,
            0.9978455305099487,
            0.9988852143287659,
            0.9988000988960266,
            0.9988088011741638,
            0.9987885355949402,
            0.9988572001457214,
            0.9988194704055786,
            0.9988194704055786,
            0.9988000988960266,
            0.9988754987716675,
            0.9988727569580078,
            0.9979771375656128,
            0.9981334209442139,
            0.9979771375656128,
            0.99602210521698,
            0.998783528804779,
            0.9950363039970398,
            0.9988727569580078,
            0.9988194704055786
        ]
    },
    "4739": {
        "similarity": 0.9969005584716797,
        "body": "    M, N = map(int, input().split())\n    T = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n    prev_X = 0\n    times = []\n    for i in range(M):\n        if T[i] - (X[0]-prev_X) > 0:\n            times.append(T[i] - (X[0]-prev_X))\n        prev_X = X[i]\n    print(len(set(times)))\n    print(*sorted(list(set([x-y for x,y in zip(X, X[1:])])))))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9962407350540161,
            0.9966242909431458,
            0.9945365786552429,
            0.9960740804672241,
            0.9950965046882629,
            0.9950181841850281,
            0.9969005584716797,
            0.9943673014640808,
            0.9964266419410706,
            0.9958058595657349,
            0.9962279796600342,
            0.9967145323753357,
            0.9945038557052612,
            0.9963603019714355,
            0.9947614073753357,
            0.9963952898979187,
            0.9954565167427063,
            0.9951832294464111,
            0.9961686730384827,
            0.9947905540466309
        ]
    },
    "4410": {
        "similarity": 0.9980128407478333,
        "body": "    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        s = input()\n        res = 0\n        last_occurrence = -k\n        for i in range(n):\n            if s[i] == '1' and i - last_occurrence > k:\n                res += 1\n                last_occurrence = i\n        print(res)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9976798892021179,
            0.9974761009216309,
            0.9936498403549194,
            0.9976933002471924,
            0.997757077217102,
            0.994644045829773,
            0.9975730776786804,
            0.9973750114440918,
            0.9937195181846619,
            0.9973931908607483,
            0.9977055788040161,
            0.9975380301475525,
            0.9980128407478333,
            0.9977114796638489,
            0.9975801110267639,
            0.9972261190414429,
            0.9963276386260986,
            0.99626624584198,
            0.9978891015052795,
            0.9968376159667969
        ]
    },
    "2441": {
        "similarity": 0.9973437786102295,
        "body": "    n = int(input())\n    costs = list(map(int, input().split()))\n    m = int(input())\n    roads = []\n    for _ in range(m):\n        u, v = map(int, input().split())\n        roads.append((u - 1, v - 1))\n    dp = [0] * n\n    checkposts = [[0]] * (n + 1)\n    for road in roads:\n        u, v = road\n        if costs[u] > costs[v]:\n            costs[u], costs[v] = costs[v], costs[u]\n        for i in range(n):\n            if dp[i] <= costs[i] and dp[i] >= dp[u] + costs[i]:\n                dp[i] += costs[i]\n    print(sum(costs), sum(1 for i in range(n) if dp[i] == 0))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960969686508179,
            0.9966326355934143,
            0.9937346577644348,
            0.9964531660079956,
            0.9941126108169556,
            0.9939338564872742,
            0.9958582520484924,
            0.9973437786102295,
            0.9948263764381409,
            0.9962649345397949,
            0.9971888661384583,
            0.9969470500946045,
            0.9962871074676514,
            0.9931907653808594,
            0.9966674447059631,
            0.9968597292900085,
            0.9970098733901978,
            0.9946646690368652,
            0.9964595437049866,
            0.9965754151344299
        ]
    },
    "276": {
        "similarity": 0.9928816556930542,
        "body": "    n = int(input())\n    seen = set()\n    for _ in range(n):\n        seen.add(input().lower())\n    absent = ['Power', 'Time', 'Space', 'Soul', 'Reality', 'Mind']\n    m = 6 - len(seen)\n    print(m)\n    for _ in range(m):\n        print(next(name for name in absent if name.lower() not in seen))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9912241697311401,
            0.9814373850822449,
            0.9831801056861877,
            0.9856216311454773,
            0.9912737607955933,
            0.990131676197052,
            0.9919049143791199,
            0.9905009865760803,
            0.9920224547386169,
            0.9895208477973938,
            0.9928816556930542,
            0.9900922179222107,
            0.9915359020233154,
            0.9876391887664795,
            0.9898011088371277,
            0.9889234304428101,
            0.991847574710846,
            0.9926961660385132,
            0.9886994957923889,
            0.9857534170150757
        ]
    },
    "2635": {
        "similarity": 0.9965981245040894,
        "body": "    if not matrix or not matrix[0]:\n        return []\n    m, n = len(matrix), len(matrix[0])\n    top, bottom, left, right = 0, m-1, 0, n-1\n    res = []\n    while True:\n        for i in range(left, right+1):\n            res.append(matrix[top][i])\n        if (top == bottom):\n            break\n        for i in range(top+1, bottom+1):\n            res.append(matrix[i][right])\n        if (left == right):\n            break\n        for i in range(right, left-1, -1):\n            res.append(matrix[bottom][i])\n        for i in range(bottom-1, top, -1):\n            res.append(matrix[i][left])\n        top += 1; bottom -= 1; left += 1; right -= 1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9952091574668884,
            0.9960501790046692,
            0.9962441325187683,
            0.9956554770469666,
            0.9890242218971252,
            0.9962894916534424,
            0.9962196350097656,
            0.9953287839889526,
            0.996303141117096,
            0.9958828687667847,
            0.9945068359375,
            0.9912882447242737,
            0.9934349060058594,
            0.9949224591255188,
            0.9965981245040894,
            0.9948400259017944,
            0.9949989318847656,
            0.9959545135498047,
            0.9961445331573486,
            0.9961930513381958
        ]
    },
    "281": {
        "similarity": 0.9949095845222473,
        "body": "    a,b = map(int, input().split())\n    return int(str((b//a) % 10)) if b >= a else 0",
        "result": "failed: testcase 0",
        "similarities": [
            0.9949095845222473,
            0.9912503957748413,
            0.9928793907165527,
            0.993628740310669,
            0.9930859804153442,
            0.992782711982727,
            0.9944822192192078,
            0.9931344389915466,
            0.9896222352981567,
            0.993628740310669,
            0.9931297302246094,
            0.9941777586936951,
            0.9945670962333679,
            0.9927202463150024,
            0.9937007427215576,
            0.9898284077644348,
            0.9905905723571777,
            0.9937431812286377,
            0.9945265054702759,
            0.9931114912033081
        ]
    },
    "2300": {
        "similarity": 0.9977312684059143,
        "body": "    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    for _ in range(m):\n        t = int(input())\n        if t == 1:\n            x, v = map(int, input().split())\n            a[x - 1] = v\n        elif t == 2:\n            l, r = map(int, input().split())\n            f_x = 1\n            total = sum(a[i] * f_x for i in range(l - 1, r))\n            print(total % 10**9)\n        else:\n            l, r, d = map(int, input().split())\n            a[l - 1:r] = [i + d for i in range(r - l + 1)]",
        "result": "failed: testcase 0",
        "similarities": [
            0.9971150755882263,
            0.9954360127449036,
            0.9976173043251038,
            0.9960556030273438,
            0.9964178204536438,
            0.9973092675209045,
            0.9970387816429138,
            0.9963193535804749,
            0.9971779584884644,
            0.9956753253936768,
            0.9972419738769531,
            0.9974700808525085,
            0.9884533286094666,
            0.9966133832931519,
            0.997153639793396,
            0.9974504113197327,
            0.9971340894699097,
            0.9967613220214844,
            0.9977312684059143,
            0.9960650205612183
        ]
    },
    "2104": {
        "similarity": 0.9975724816322327,
        "body": "    l, r = map(int, input().split())\n    res = []\n    for i in range(l, r+1):\n        if len(res) % 2 == 0:\n            res.append(i)\n        else:\n            j = (r + l - i) // 2\n            while gcd(i, j) != 1 or j not in set(range(l, r+1)):\n                j = ((j-l)//gcd(j-l,r-l))%r+l\n            res.extend([i, j])\n    if len(res) == r-l+1:\n        print(\"YES\")\n        for i in range(0, len(res), 2):\n            print(res[i], res[i+1])\n    else:\n        print(\"NO\")",
        "result": "timed out",
        "similarities": [
            0.9965273141860962,
            0.9956194162368774,
            0.9964831471443176,
            0.9967042207717896,
            0.9955006837844849,
            0.9975724816322327,
            0.9974344372749329,
            0.9957652688026428,
            0.9969462156295776,
            0.9969854950904846,
            0.9973308444023132,
            0.9956082105636597,
            0.9937043786048889,
            0.9963517785072327,
            0.9969630837440491,
            0.9970434308052063,
            0.9968510866165161,
            0.9955557584762573,
            0.9962197542190552,
            0.99712735414505
        ]
    },
    "1995": {
        "similarity": 0.998399555683136,
        "body": "    s = input()\n    m = int(input())\n    for _ in range(m):\n        l, r, k = map(int, input().split())\n        s = s[l-1:r] + s[:l-1]\n        s = s[-k:] + s[:-k]\n    print(s)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9956796765327454,
            0.9980835318565369,
            0.9974871277809143,
            0.9967668652534485,
            0.9983127117156982,
            0.9971887469291687,
            0.9966557025909424,
            0.998399555683136,
            0.9965031147003174,
            0.9979777336120605,
            0.998399555683136,
            0.9980835318565369,
            0.998289942741394,
            0.9967876076698303,
            0.9960234761238098,
            0.9974871277809143,
            0.996690034866333,
            0.9966649413108826,
            0.9978824257850647,
            0.9962894916534424
        ]
    },
    "2064": {
        "similarity": 0.9931637644767761,
        "body": "    n = int(input())\n    return 1 if n < 2 else sum(1 for _ in range(n)) + 1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9931323528289795,
            0.9840900897979736,
            0.9850763082504272,
            0.9911818504333496,
            0.9927195310592651,
            0.9914729595184326,
            0.9931637644767761,
            0.9905505776405334,
            0.9849837422370911,
            0.9922747611999512,
            0.9909794330596924,
            0.9756064414978027,
            0.9878489971160889,
            0.9907142519950867,
            0.9911061525344849,
            0.9920628070831299,
            0.9909902811050415,
            0.9910181760787964,
            0.9917762279510498,
            0.9841141104698181
        ]
    },
    "1715": {
        "similarity": 0.9965582489967346,
        "body": "    A, B, Q = map(int, input().split())\n    s = list(map(int, [input() for _ in range(A)]))\n    t = list(map(int, [input() for _ in range(B)]))\n    x = list(map(int, [input() for _ in range(Q)]))\n    for i in range(Q):\n        ans = float('inf')\n        for j in range(A):\n            for k in range(B):\n                dist1 = abs(x[i] - s[j])\n                dist2 = t[k] - (x[i] + dist1)\n                if 0 <= dist2 and dist2 < ans:\n                    ans = dist2\n        print(ans)",
        "result": "timed out",
        "similarities": [
            0.9957269430160522,
            0.9889355897903442,
            0.9945036172866821,
            0.9945890307426453,
            0.993903398513794,
            0.9937971234321594,
            0.9923092722892761,
            0.9964399933815002,
            0.9965582489967346,
            0.9946529865264893,
            0.9955576062202454,
            0.9954129457473755,
            0.9958374500274658,
            0.9962301850318909,
            0.9958500266075134,
            0.9957247376441956,
            0.9961639046669006,
            0.9952587485313416,
            0.9905638694763184,
            0.9947208762168884
        ]
    },
    "2074": {
        "similarity": 0.9968178272247314,
        "body": "    n, m = map(int, input().split())\n    c = [list(map(int, input().split())) for _ in range(n)]\n    a = 10**9\n    for i in range(n):\n        a = min(a, max(c[i]))\n    print(max(a))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9943928122520447,
            0.9959802031517029,
            0.9912886619567871,
            0.9942637085914612,
            0.9952840209007263,
            0.9964863657951355,
            0.9960650205612183,
            0.9919047951698303,
            0.9927212595939636,
            0.9955968260765076,
            0.9963327050209045,
            0.9968178272247314,
            0.993446946144104,
            0.9940515160560608,
            0.9964131116867065,
            0.9965332746505737,
            0.9961470365524292,
            0.9965086579322815,
            0.9960914254188538,
            0.9966989755630493
        ]
    },
    "2921": {
        "similarity": 0.9975419640541077,
        "body": "    m, u, d = map(float, input().split())\n    drinks = [list(map(str, input().split())) for _ in range(d)]\n    drinks.sort(key=lambda x: float(x[2]))\n    bought_drinks = []\n    current_money = 0\n    total_units = 0\n    for name, strength, size, cost in drinks:\n        if (float(strength) / 100) * float(size.split('/')[1]) <= u and current_money + float(cost) <= m:\n            new_units = (float(strength) / 100) * float(size.split('/')[1])\n            if total_units + new_units > u:\n                break\n            bought_drinks.append((name, int(0)))\n            current_money += float(cost)\n            total_units += new_units\n    if total_units >= u:\n        for name, count in bought_drinks:\n            print(f\"{name} {count}\")\n    else:\n        print(\"IMPOSSIBLE\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9975419640541077,
            0.9966447949409485,
            0.9966210126876831,
            0.9961267709732056,
            0.9961017966270447,
            0.9966436624526978,
            0.9973933696746826,
            0.9966369271278381,
            0.9962835907936096,
            0.997389554977417,
            0.9972105622291565,
            0.9951073527336121,
            0.9955767393112183,
            0.9933308362960815,
            0.996337890625,
            0.9954099059104919,
            0.9955790638923645,
            0.9959119558334351,
            0.9971219301223755,
            0.996099591255188
        ]
    },
    "1642": {
        "similarity": 0.9945363402366638,
        "body": "    n = int(input())\n    points = []\n    for _ in range(n):\n        x, y = map(int, input().split())\n        points.append((x, y))\n        return (p2[0] - p1[0]) * (q[1] - p1[1]) - (p2[1] - p1[1]) * (q[0] - p1[0])\n        return sign(line[0], line[1], p) > 0\n        return sign(line[0], line[1], p) < 0\n        return abs(sign(line[0], line[1], p)) < 10**-6\n    D = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if not is_above(points[i], (points[j][0], points[(j-1)%n][1])) and not is_below(points[i], (points[j][0], points[(j-1)%n][1])):\n                D = max(D, ((points[j][0] - points[i][0])**2 + (points[j][1] - points[i][1])**2)**0.5)\n    print(2*D)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9890349507331848,
            0.9939243197441101,
            0.9902046918869019,
            0.9939303994178772,
            0.9914684295654297,
            0.9929091930389404,
            0.9923384785652161,
            0.9910165071487427,
            0.9940111041069031,
            0.9923478960990906,
            0.9921151995658875,
            0.9945363402366638,
            0.992064356803894,
            0.9895687103271484,
            0.9822162985801697,
            0.9936904907226562,
            0.9941151142120361,
            0.9924058318138123,
            0.99355548620224,
            0.9938470721244812
        ]
    },
    "947": {
        "similarity": 0.9971681833267212,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            a = n // 2\n            b = a\n        else:\n            a = (n + 1) // 2\n            b = n - a\n        print(a, b)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9969279766082764,
            0.9965494275093079,
            0.9832907319068909,
            0.9965494275093079,
            0.9970445036888123,
            0.9971681833267212,
            0.9971681833267212,
            0.9954426288604736,
            0.9957239031791687,
            0.9966483116149902,
            0.9963311553001404,
            0.9967600107192993,
            0.9961947202682495,
            0.9967173337936401,
            0.9965494275093079,
            0.9963743090629578,
            0.9969767332077026,
            0.9947543144226074,
            0.9965494275093079,
            0.9958199858665466
        ]
    },
    "743": {
        "similarity": 0.9958337545394897,
        "body": "    n = int(input())\n    xs = list(map(int, input().split()))\n    xs.sort()\n    return sum(xs[:n//2]) + n * xs[n//2] if n % 2 else sum(xs)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9950743317604065,
            0.991064190864563,
            0.9910539388656616,
            0.9951509237289429,
            0.9936131834983826,
            0.991064190864563,
            0.9950693845748901,
            0.9954614043235779,
            0.9955140352249146,
            0.9958337545394897,
            0.9926275014877319,
            0.9952201843261719,
            0.9921810626983643,
            0.9956692457199097,
            0.9851942658424377,
            0.9952041506767273,
            0.9928204417228699,
            0.9953124523162842,
            0.9956839680671692,
            0.9927874207496643
        ]
    },
    "1397": {
        "similarity": 0.9976790547370911,
        "body": "    n,m = map(int,input().split())\n    g = [[] for _ in range(n+1)]\n    roads_to_avoid = []\n    for _ in range(m):\n        a,b = map(int,input().split())\n        roads_to_avoid.append((a,b))\n    s = 0\n    while True:\n        added = False\n        for i in range(1,n+1):\n            if len(g[i]) == 2 and any(a not in g[a] and b not in g[b] for a,b in roads_to_avoid):\n                g[i].sort()\n                for j in g[i]:\n                    if j not in g[j]:\n                        g[j].append(i)\n                        added = True\n        if not added:\n            break\n    s = n-1\n    for i in range(1,n+1):\n        s -= len(g[i])\n    print(s)\n    for i in range(n-1):\n        a,b = sorted([i+1,j+1]) if j+1 > i else (i+1,j+1)\n        print(*a)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9941890239715576,
            0.9976790547370911,
            0.9962473511695862,
            0.9970676898956299,
            0.9969966411590576,
            0.9971171021461487,
            0.9946562051773071,
            0.9972554445266724,
            0.9960666298866272,
            0.996688723564148,
            0.9972468018531799,
            0.9970079660415649,
            0.9973608255386353,
            0.9967727661132812,
            0.9975094199180603,
            0.9969910979270935,
            0.9968835115432739,
            0.9968124032020569,
            0.995147705078125,
            0.9969878196716309
        ]
    },
    "1144": {
        "similarity": 0.994547426700592,
        "body": "    n = int(input())\n    s = input()\n    m = int(input())\n    t = \"ab\" * (m // 2)\n    if m % 2: t += 'a' if len(t) < m else 'b'\n    count = 0\n    for i in range(n - m + 1):\n        ok = True\n        for j in range(m):\n            if s[i + j] != t[j]:\n                ok = False\n                break\n        if not ok: count += 1\n    return count",
        "result": "failed: testcase 0",
        "similarities": [
            0.9941290616989136,
            0.9890015125274658,
            0.992900550365448,
            0.9943709373474121,
            0.994547426700592,
            0.9940472841262817,
            0.9943353533744812,
            0.9920784831047058,
            0.9942390322685242,
            0.986457347869873,
            0.9936684966087341,
            0.9920750856399536,
            0.9919015169143677,
            0.9887056946754456,
            0.9891296029090881,
            0.9919644594192505,
            0.9923399090766907,
            0.9897826313972473,
            0.9934071898460388,
            0.9935634136199951
        ]
    },
    "890": {
        "similarity": 0.9985395073890686,
        "body": "    n, l, r, x = map(int, input().split())\n    c = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i+2, n+1):\n            total_difficulty = sum(c[k] for k in range(i,j))\n            if l <= total_difficulty <= r and max(c[i:j])-c[i] >= x:\n                ans += 1\n    print(ans)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9985395073890686,
            0.9980320334434509,
            0.9975799918174744,
            0.9980645775794983,
            0.9977550506591797,
            0.9964115619659424,
            0.9979080557823181,
            0.9983259439468384,
            0.9976813793182373,
            0.9977923035621643,
            0.9972841143608093,
            0.9960232973098755,
            0.9976297616958618,
            0.9984775185585022,
            0.9959616661071777,
            0.9980183839797974,
            0.9973596334457397,
            0.9974579215049744,
            0.9978463053703308,
            0.9984482526779175
        ]
    },
    "2410": {
        "similarity": 0.9975418448448181,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        m = sum(a)\n        ok = True\n        for i in range(1, n):\n            s = sum(a[:i+1])\n            if s >= m:\n                ok = False\n                break\n        print(\"YES\" if ok else \"NO\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9973072409629822,
            0.9959570169448853,
            0.9975418448448181,
            0.9972060322761536,
            0.9953240752220154,
            0.9962860941886902,
            0.9961655139923096,
            0.9928454160690308,
            0.9962115287780762,
            0.9939903616905212,
            0.9945875406265259,
            0.9974507689476013,
            0.9956579804420471,
            0.9953325390815735,
            0.9913325309753418,
            0.9974246025085449,
            0.9974567890167236,
            0.996895432472229,
            0.9973556399345398,
            0.9959716796875
        ]
    },
    "1004": {
        "similarity": 0.9968214631080627,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    days = []\n    day = []\n    for event in a:\n        if not day or -event in day:\n            day.append(event)\n        else:\n            days.append(len(day))\n            day = [event]\n    if day:\n        days.append(len(day))\n    if len(days) == 1 and days[0] > n:\n        print(-1)\n    else:\n        print(len(days), len(day))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9964748024940491,
            0.9947254657745361,
            0.9964162707328796,
            0.9963899850845337,
            0.996680736541748,
            0.9959155917167664,
            0.990975022315979,
            0.9951182007789612,
            0.9949612021446228,
            0.9967416524887085,
            0.9949727654457092,
            0.9960686564445496,
            0.9958186745643616,
            0.9951705932617188,
            0.9968214631080627,
            0.9956167340278625,
            0.9957018494606018,
            0.9958610534667969,
            0.9924190044403076,
            0.9957741498947144
        ]
    },
    "531": {
        "similarity": 0.994720458984375,
        "body": "    n = int(input())\n    x = list(map(int, input().split()))\n    min_x, max_x = min(x), max(x)\n    avg_x = sum(x) / n\n    y = [max_x] * (n - len(set(x)))\n    for i in range(n):\n        if x[i] == avg_x:\n            y.append(x[i])\n        else:\n            y.append(min_x)\n    print(len(set(y)) - 1)\n    print(' '.join(map(str, y)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9855507612228394,
            0.9941678643226624,
            0.9936391115188599,
            0.9937094449996948,
            0.993489146232605,
            0.9840487241744995,
            0.9922215342521667,
            0.9904676079750061,
            0.9927064776420593,
            0.9911202192306519,
            0.9924224019050598,
            0.9919166564941406,
            0.9941662549972534,
            0.9945287108421326,
            0.994720458984375,
            0.9930892586708069,
            0.9898712038993835,
            0.9938486218452454,
            0.992459774017334,
            0.9935507774353027
        ]
    },
    "510": {
        "similarity": 0.9960750937461853,
        "body": "    a,b,c,d = map(int,input().split())\n    return max(a-d+1,abs(a-b),c-d+1)+max(b-c,abs(c-a),d-1)",
        "result": "failed: testcase 0",
        "similarities": [
            0.994394838809967,
            0.9960750937461853,
            0.9959426522254944,
            0.9957417845726013,
            0.9922894835472107,
            0.9955541491508484,
            0.9957064390182495,
            0.9957488179206848,
            0.9936031699180603,
            0.9773491621017456,
            0.9936503171920776,
            0.9959216713905334,
            0.9944866895675659,
            0.9932786226272583,
            0.995069682598114,
            0.9901416301727295,
            0.9907365441322327,
            0.995499849319458,
            0.996030330657959,
            0.9936975240707397
        ]
    },
    "2555": {
        "similarity": 0.9967538714408875,
        "body": "    t = int(input())\n    for _ in range(t):\n        n, q = map(int, input().split())\n        a = sorted(map(int, input().split()))\n        ans = [0] * (q + 1)\n        for i in range(q):\n            l, r = map(int, input().split())\n            if l < r:\n                a[l], a[r] = a[r], a[l]\n            s = sum(a[j] if j % 2 == i else -a[j] for j in range(n))\n            ans[i + 1] = max(s, ans[i])\n        print(*ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9953699707984924,
            0.9954420328140259,
            0.9960935711860657,
            0.9953639507293701,
            0.9953469038009644,
            0.9959818124771118,
            0.9966967701911926,
            0.9950804710388184,
            0.9962319135665894,
            0.9965051412582397,
            0.9946395754814148,
            0.9932239055633545,
            0.9948881268501282,
            0.9967538714408875,
            0.9958075284957886,
            0.996630847454071,
            0.9957719445228577,
            0.995707094669342,
            0.9961295127868652,
            0.9959747791290283
        ]
    },
    "324": {
        "similarity": 0.9959153532981873,
        "body": "    n = int(input())\n    i = 2\n    while True:\n        a = i * i\n        b = a - n\n        if b < 1 or not is_prime(b):\n            break\n        a -= n\n        i += 1\n    print(a, b)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9934959411621094,
            0.9952540397644043,
            0.9924627542495728,
            0.9937099814414978,
            0.9952601194381714,
            0.9941643476486206,
            0.9942960143089294,
            0.9944230914115906,
            0.9943223595619202,
            0.9918755292892456,
            0.9914681315422058,
            0.9943727254867554,
            0.9910410046577454,
            0.9940506815910339,
            0.9933630228042603,
            0.9959153532981873,
            0.9942800402641296,
            0.9920920133590698,
            0.9944440126419067,
            0.9941855072975159
        ]
    },
    "2912": {
        "similarity": 0.9990357160568237,
        "body": "    n = int(input())\n    s = [input() for _ in range(n)]\n    ops = []\n    for _ in range(n-1):\n        a, b = map(int, input().split())\n        s[a-1] += s[b-1]\n        s[b-1] = ''\n    print(s[-1])",
        "result": "failed: testcase 0",
        "similarities": [
            0.9959251284599304,
            0.9987892508506775,
            0.9987892508506775,
            0.998967707157135,
            0.9987590312957764,
            0.998967707157135,
            0.9990357160568237,
            0.9989088773727417,
            0.9959772229194641,
            0.9954034686088562,
            0.9987892508506775,
            0.9983376264572144,
            0.9988116025924683,
            0.9981275796890259,
            0.9989015460014343,
            0.9980132579803467,
            0.9990193247795105,
            0.9988158345222473,
            0.9988205432891846,
            0.9986466765403748
        ]
    },
    "9": {
        "similarity": 0.9971684217453003,
        "body": "    d = int(input())\n    n, m = map(int, input().split())\n    sofas = []\n    for _ in range(d):\n        x1, y1, x2, y2 = map(int, input().split())\n        sofas.append((x1, y1, x2, y2))\n    cntl, ctnr, ctt, cntb = map(int, input().split())\n    for i, sofa in enumerate(sofas):\n        left = sum(1 for x, y, x2, y2 in sofas[:i] if (x <= x and x2 >= x) or (y <= y and y2 >= y))\n        right = sum(1 for x, y, x2, y2 in sofas[i+1:] if (x <= x2 and x < x) or (y <= y2 and y < y))\n        top = sum(1 for x, y, x2, y2 in sofas[:i] if (y <= y and y2 >= y) or (x <= x and x2 >= x))\n        bottom = sum(1 for x, y, x2, y2 in sofas[i+1:] if (y <= y2 and y < y) or (x <= x2 and x < x))\n        if left == cntl and right == ctnr and top == ctt and bottom == cntb:\n            return i + 1\n    return -1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960698485374451,
            0.9959226846694946,
            0.9963377118110657,
            0.9940260052680969,
            0.9970765709877014,
            0.9890701174736023,
            0.9963178038597107,
            0.9966927766799927,
            0.9970830678939819,
            0.9940667748451233,
            0.9965195059776306,
            0.9950135946273804,
            0.9967313408851624,
            0.9957427978515625,
            0.9969222545623779,
            0.9971684217453003,
            0.9964445233345032,
            0.9968387484550476,
            0.9961889386177063,
            0.995106041431427
        ]
    },
    "249": {
        "similarity": 0.99579256772995,
        "body": "    n, l, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    k = 1\n    p = [0]\n    for i in range(1, len(a)):\n        if a[i] - a[i-1] > y:\n            k += 1\n            p.append(p[-1] + (a[i] - a[i-1])//2)\n        else:\n            p.append(p[-1])\n    if x not in a and max(a) - min(a) < x:\n        k += 1\n        p.append(min(a) + x)\n    print(k)\n    print(' '.join(map(str, p)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9948998689651489,
            0.9954314231872559,
            0.9956263303756714,
            0.9950294494628906,
            0.9912009239196777,
            0.990173876285553,
            0.9954456686973572,
            0.9946644306182861,
            0.9941204786300659,
            0.9919846057891846,
            0.9939188957214355,
            0.993483304977417,
            0.9925934672355652,
            0.9932771325111389,
            0.9922457337379456,
            0.994255781173706,
            0.9936853051185608,
            0.99579256772995,
            0.9952155947685242,
            0.9924339652061462
        ]
    },
    "2999": {
        "similarity": 0.9964467883110046,
        "body": "    n, s = map(int, input().split())\n    bets = {}\n    for _ in range(n):\n        t, b = input().split()\n        bets[t] = int(b)\n    total = 0\n    winners = set()\n    for bet in sorted(bets.values(), reverse=True):\n        if total + bet > s:\n            break\n        total += bet\n        winners.add(t)\n    print(len(winners))\n    for winner in sorted(list(winners)):\n        print(winner)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9961014986038208,
            0.9945222735404968,
            0.9964467883110046,
            0.9949575066566467,
            0.9954838156700134,
            0.9915317893028259,
            0.9937073588371277,
            0.9950527548789978,
            0.9956842064857483,
            0.9953320026397705,
            0.9950675964355469,
            0.9895744323730469,
            0.9932827353477478,
            0.9940600395202637,
            0.9952989220619202,
            0.9906690716743469,
            0.9962170124053955,
            0.9959391355514526,
            0.9962891340255737,
            0.9958100914955139
        ]
    },
    "2239": {
        "similarity": 0.9965677857398987,
        "body": "    t = int(input())\n    for _ in range(t):\n        x = int(input())\n        i = 0\n        while True:\n            s = sum([2, 3, 4, 5, 6, 7] * (i+1))\n            if s == x:\n                print(i + 1)\n                break\n            i += 1",
        "result": "timed out",
        "similarities": [
            0.9931661486625671,
            0.9964475035667419,
            0.9832081198692322,
            0.9964936971664429,
            0.994553804397583,
            0.9963981509208679,
            0.9965677857398987,
            0.9959887266159058,
            0.9940686821937561,
            0.9956740140914917,
            0.9963619709014893,
            0.9963663816452026,
            0.9963800311088562,
            0.9953508973121643,
            0.9939958453178406,
            0.996117353439331,
            0.9958313703536987,
            0.9964486956596375,
            0.996504008769989,
            0.9862796664237976
        ]
    },
    "2615": {
        "similarity": 0.9960873126983643,
        "body": "    T = int(input())\n    for _ in range(T):\n        n = int(input())\n        k = [0]\n        p = 2\n        count = 0\n        while p * p <= n:\n            if n % p:\n                k.append(0)\n                p += 1\n            else:\n                k[-1] += 1\n                while n % p == 0:\n                    n //= p\n        if n > 1:\n            k.append(1)\n        print(sum(1 for i in range(len(k)) if k[i] == 0) + 1)",
        "result": "failed: testcase 0",
        "similarities": [
            0.995600163936615,
            0.9873681664466858,
            0.9920244812965393,
            0.9958871603012085,
            0.9956408143043518,
            0.9942044615745544,
            0.9952159523963928,
            0.9951278567314148,
            0.9916895031929016,
            0.9916926026344299,
            0.9950054883956909,
            0.9956129789352417,
            0.9942223429679871,
            0.994651198387146,
            0.9958242177963257,
            0.9952130913734436,
            0.9950252175331116,
            0.9959210753440857,
            0.9954899549484253,
            0.9960873126983643
        ]
    },
    "2542": {
        "similarity": 0.9972991943359375,
        "body": "    t = int(input())\n    for _ in range(t):\n        s = input()\n        n = len(s)\n        left, right = s[1:], s[0] + s[1:]\n        erased = 0\n        while left != right:\n            if left < right:\n                erased += 1\n                left = left[1:] + left[0]\n            else:\n                erased += 1\n                right = right[-1] + right[:-1]\n        print(erased)",
        "result": "timed out",
        "similarities": [
            0.9960627555847168,
            0.9954746961593628,
            0.9964653849601746,
            0.9865387678146362,
            0.9967297911643982,
            0.9968769550323486,
            0.9972991943359375,
            0.9965932965278625,
            0.9970689415931702,
            0.995246171951294,
            0.996580958366394,
            0.9970126152038574,
            0.9967853426933289,
            0.9965373873710632,
            0.9969100952148438,
            0.9944353699684143,
            0.9971775412559509,
            0.9960237741470337,
            0.996224045753479,
            0.9961381554603577
        ]
    },
    "511": {
        "similarity": 0.9970108866691589,
        "body": "    while b:\n        a, b = b, a % b\n    return a\n\n    if not y:\n        return 0\n    g = gcd(x, y)\n    return 1 + f(x // g, y // g)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9965901970863342,
            0.9965283274650574,
            0.9965444803237915,
            0.995600163936615,
            0.9968897104263306,
            0.996057391166687,
            0.993750810623169,
            0.9968019127845764,
            0.9922690987586975,
            0.9958996176719666,
            0.9960199594497681,
            0.9903267621994019,
            0.9958882927894592,
            0.993892252445221,
            0.9960289001464844,
            0.995956301689148,
            0.9926203489303589,
            0.9968346357345581,
            0.9970108866691589,
            0.9965029358863831
        ]
    },
    "1409": {
        "similarity": 0.9944953918457031,
        "body": "    n, k = map(int, input().split())\n    y = list(map(int, input().split()))\n    y.sort()\n    res = 0\n    for i in range(n):\n        if y[i] >= k:\n            res += (k-1)//2\n            break\n    return res",
        "result": "failed: testcase 0",
        "similarities": [
            0.9935226440429688,
            0.9880865812301636,
            0.9942948222160339,
            0.9923625588417053,
            0.9944953918457031,
            0.9921541810035706,
            0.9908449053764343,
            0.9934726357460022,
            0.9928730726242065,
            0.9938212037086487,
            0.9921968579292297,
            0.9923406839370728,
            0.9902263283729553,
            0.9923018217086792,
            0.9943678975105286,
            0.9929594993591309,
            0.9934172630310059,
            0.9908994436264038,
            0.994320809841156,
            0.9924172163009644
        ]
    },
    "2274": {
        "similarity": 0.9969240427017212,
        "body": "    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        belt = [list(input()) for _ in range(n)]\n        seen = set()\n        to_visit = [(0, 0)]\n        while to_visit:\n            i, j = to_visit.pop(0)\n            if (i, j) not in seen:\n                seen.add((i, j))\n                if i == n - 1 or j == m - 1:\n                    continue\n                if belt[i][j] == 'D' and i + 1 < n and belt[i+1][j] != 'C':\n                    to_visit.append((i + 1, j))\n                elif belt[i][j] == 'R' and j + 1 < m and belt[i][j+1] != 'C':\n                    to_visit.append((i, j + 1))\n        print(len(seen) - n*m)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9936925172805786,
            0.9954094290733337,
            0.9963365793228149,
            0.9952189922332764,
            0.9949330687522888,
            0.9921876192092896,
            0.995084285736084,
            0.9969240427017212,
            0.9961725473403931,
            0.9964868426322937,
            0.9952155947685242,
            0.9956380128860474,
            0.9968305826187134,
            0.9967444539070129,
            0.9937208890914917,
            0.994999349117279,
            0.996445894241333,
            0.9957998394966125,
            0.9959254264831543,
            0.9966131448745728
        ]
    },
    "2420": {
        "similarity": 0.9971321821212769,
        "body": "    n, r = map(int, input().split())\n    x, y = [], []\n    for _ in range(n):\n        a, b = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    ans = 0\n    for i in range(-r, r+1):\n        for j in range(-r, r+1):\n            cnt = sum(1 for a, b in zip(x, y) if abs(a)+abs(b) <= r and (a+i)**2+(b+j)**2<=r**2)\n            ans = max(ans, cnt)\n    print(ans)",
        "result": "timed out",
        "similarities": [
            0.9969028830528259,
            0.9918432831764221,
            0.996640145778656,
            0.9965349435806274,
            0.9924464225769043,
            0.99560546875,
            0.9952050447463989,
            0.996139407157898,
            0.9971321821212769,
            0.9963307976722717,
            0.996540904045105,
            0.9968783855438232,
            0.9938910603523254,
            0.9968343377113342,
            0.9963889122009277,
            0.9935154318809509,
            0.9968593120574951,
            0.9964312314987183,
            0.9963798522949219,
            0.9945394396781921
        ]
    },
    "1267": {
        "similarity": 0.9968450665473938,
        "body": "    n = int(input())\n    s = [int(x) for x in input().split()]\n    ans = 0\n    last = 0\n    for score in sorted(s):\n        if score > 0:\n            if score != last:\n                ans += 1\n            last = score\n    print(ans)",
        "result": "passed",
        "similarities": [
            0.9940110445022583,
            0.9956998229026794,
            0.996756911277771,
            0.9967341423034668,
            0.9937358498573303,
            0.9922593832015991,
            0.9935103058815002,
            0.9958239197731018,
            0.9929302930831909,
            0.9949755668640137,
            0.9947647452354431,
            0.9963167905807495,
            0.9919845461845398,
            0.995918869972229,
            0.9959626793861389,
            0.9942524433135986,
            0.9968450665473938,
            0.9941368103027344,
            0.9966812133789062,
            0.996090829372406
        ]
    },
    "2356": {
        "similarity": 0.9952065348625183,
        "body": "import random\n\n    for _ in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        good_a = False\n        while not good_a:\n            random.shuffle(a)\n            good_a = all(i - a[i] != j - a[j] for i in range(n-1) for j in range(i+1, n))\n        print(len(a))\n        print(' '.join(map(str, a)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9932710528373718,
            0.9932820200920105,
            0.9926565289497375,
            0.9948620200157166,
            0.9949471354484558,
            0.9915300011634827,
            0.9928665161132812,
            0.9952065348625183,
            0.984104573726654,
            0.9947471618652344,
            0.9921143054962158,
            0.993869960308075,
            0.9946100115776062,
            0.9951154589653015,
            0.9938141703605652,
            0.9930609464645386,
            0.9951632618904114,
            0.9941953420639038,
            0.9947186708450317,
            0.9938098788261414
        ]
    },
    "108": {
        "similarity": 0.9944215416908264,
        "body": "    s = input()\n    t = 'abcdefghijklmnopqrstuvwxyz'\n    res = ''\n    for c in s:\n        if c < t[ord(c) - ord('a')]:\n            res += c\n        else:\n            res += chr(ord(c) + 1)\n    print(res or '-1')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9944215416908264,
            0.9912154674530029,
            0.9937039613723755,
            0.9933050274848938,
            0.993272602558136,
            0.9881230592727661,
            0.9924874901771545,
            0.9920790791511536,
            0.9898788332939148,
            0.992842435836792,
            0.993148922920227,
            0.9936787486076355,
            0.9924184679985046,
            0.9833671450614929,
            0.9937898516654968,
            0.9873360395431519,
            0.994306743144989,
            0.9928537011146545,
            0.9929602742195129,
            0.9917162656784058
        ]
    },
    "1833": {
        "similarity": 0.9968723654747009,
        "body": "    n = int(input())\n    a = [int(x) for x in input().split()]\n    mod = 10**9 + 7\n    dp = [[0] * (n+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            if a[j-1]%i==0:\n                dp[i][j]=dp[i-1][j-1]+1\n            else:\n                dp[i][j]=max(dp[i-1][j], dp[i][j-1])\n    res = 0\n    for i in range(1, n+1):\n        res += dp[i][n]%mod\n    print(res%mod)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9937575459480286,
            0.9918274283409119,
            0.9963706135749817,
            0.9929013848304749,
            0.9961215853691101,
            0.9968723654747009,
            0.9944015145301819,
            0.9950769543647766,
            0.9956819415092468,
            0.9960469603538513,
            0.9964258074760437,
            0.9940561056137085,
            0.99267578125,
            0.9951253533363342,
            0.996360182762146,
            0.9950194358825684,
            0.9965760111808777,
            0.9959660768508911,
            0.9926955699920654,
            0.994028627872467
        ]
    },
    "2324": {
        "similarity": 0.9974250793457031,
        "body": "    s = input()\n    n = len(s)\n    res = [0] * (n + 1)\n    for i in range(n):\n        res[i+1] += 1\n        if s[i] == s[n-i-1]:\n            j = 1\n            while i-j >= 0 and i+j < n and s[i-j] == s[i+j]:\n                res[i-j+1] += res[j]\n                j += 1\n    print(*res[1:])",
        "result": "failed: testcase 0",
        "similarities": [
            0.9962922930717468,
            0.9967666268348694,
            0.9964613914489746,
            0.9958140850067139,
            0.9957175850868225,
            0.9938306212425232,
            0.9974250793457031,
            0.9960820078849792,
            0.9951234459877014,
            0.992834210395813,
            0.9929432272911072,
            0.9966732859611511,
            0.9970056414604187,
            0.9969461560249329,
            0.9964543581008911,
            0.9973683953285217,
            0.9969239830970764,
            0.9972871541976929,
            0.9972972869873047,
            0.9963347911834717
        ]
    },
    "2372": {
        "similarity": 0.99786776304245,
        "body": "    H,W = map(int,input().split())\n    Ch,Cw,Dh,Dw = map(int,input().split())\n    S = [list(input()) for _ in range(H)]\n    queue = [(Ch,Cw,0)] \n    visited = {(Ch,Cw)}\n    while queue:\n        x,y,z = queue.pop(0)\n        if (x,y) == (Dh,Dw):\n            return z\n        for dx,dy in [(-1,0),(1,0),(0,-1),(0,1)]:\n            nx,ny = x+dx,y+dy\n            if 1<=nx<=H and 1<=ny<=W and S[nx][ny] == '.' and (nx,ny) not in visited:\n                queue.append((nx,ny,z+(dx==0 or dy==0)))\n                visited.add((nx,ny))\n    return -1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9970270395278931,
            0.9967673420906067,
            0.9970208406448364,
            0.996192455291748,
            0.9945662617683411,
            0.9967871308326721,
            0.9964624643325806,
            0.9973610639572144,
            0.9963498711585999,
            0.9975208640098572,
            0.9971486330032349,
            0.9976325035095215,
            0.9938856363296509,
            0.996829092502594,
            0.99786776304245,
            0.9961963295936584,
            0.9969407320022583,
            0.9968733787536621,
            0.9972541332244873,
            0.9969192147254944
        ]
    },
    "1984": {
        "similarity": 0.9957008361816406,
        "body": "    n, m, k, w = map(int, input().split())\n    levels = [list(input()) for _ in range(k)]\n    res_bytes = 0\n    res_transfer = [0] * k\n    \n    for i in range(1, k):\n        diff_cells = sum(a != b for a, b in zip(*[list(level) for level in levels[i-k+1:i]]))\n        if i == 1:\n            bytes_needed = n*m\n        else:\n            bytes_needed = diff_cells * w\n        res_bytes += min(bytes_needed, n*m)\n        res_transfer.append(i-1 if bytes_needed > n*m else i)\n        \n    print(res_bytes)\n    for level in range(1, k+1):\n        print(f\"{level} {res_transfer[level-1]}\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9953161478042603,
            0.9923161268234253,
            0.9922319054603577,
            0.9940829873085022,
            0.9944595694541931,
            0.9946005940437317,
            0.9935192465782166,
            0.9948471784591675,
            0.9946411848068237,
            0.9907222390174866,
            0.9921302795410156,
            0.9945238828659058,
            0.9949100017547607,
            0.9955142140388489,
            0.9950557351112366,
            0.9908455610275269,
            0.9938417077064514,
            0.9945384860038757,
            0.9910224080085754,
            0.9957008361816406
        ]
    },
    "1253": {
        "similarity": 0.9972590208053589,
        "body": "    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    a.sort()\n    total = sum(a)\n    res = -total\n    for i in range(1, k+1):\n        if total < 0:\n            total += 2*a[i-1]\n        else:\n            total -= 2*a[n-i]\n    print(total)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9966456890106201,
            0.9972590208053589,
            0.9959294199943542,
            0.9964994192123413,
            0.9938410520553589,
            0.9966838359832764,
            0.9961321949958801,
            0.9953466057777405,
            0.9918083548545837,
            0.9965274333953857,
            0.9941565990447998,
            0.9960670471191406,
            0.9964019656181335,
            0.994376540184021,
            0.9967454671859741,
            0.9963172078132629,
            0.9966382384300232,
            0.9959408640861511,
            0.9960871338844299,
            0.995993971824646
        ]
    },
    "523": {
        "similarity": 0.9965096712112427,
        "body": "    n,m = map(int,input().split())\n    s = [input() for _ in range(n)]\n    s.sort()\n    res = ''\n    for i in range(len(s)-1):\n        if len(s[i]) > 0:\n            res += s[i][-1]\n    for i in range(len(s)):\n        if len(s[i]) > 0 and s[i][0] != res[-1]:\n            break\n    res += ''.join(reversed(res))\n    print(len(res))\n    print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.995299220085144,
            0.9960094094276428,
            0.99526447057724,
            0.9946907758712769,
            0.9955482482910156,
            0.9956670999526978,
            0.9964278340339661,
            0.9946332573890686,
            0.9961282014846802,
            0.9908720254898071,
            0.9944785237312317,
            0.9943313598632812,
            0.9957175254821777,
            0.9951619505882263,
            0.9950071573257446,
            0.9965096712112427,
            0.996317446231842,
            0.9927910566329956,
            0.9953870177268982,
            0.996299147605896
        ]
    },
    "2934": {
        "similarity": 0.9957345724105835,
        "body": "    N,M = map(int,input().split())\n    MOD = 10**9\n    dp = [[0]*(M+1) for _ in range(N+1)]\n    dp[0][0] = 1\n    for i in range(1,N+1):\n        for j in range(i+1):\n            if i%2==0:\n                dp[i][j]+=dp[i-1][j]\n            else:\n                dp[i][j]+=dp[i-1][j//2]*2\n        for j in range(M+1):\n            dp[i][j]%=MOD\n    print(sum(dp[N]))\n",
        "result": "failed: testcase 0",
        "similarities": [
            0.9956126809120178,
            0.9944774508476257,
            0.9738414287567139,
            0.9957345724105835,
            0.9930823445320129,
            0.9929832816123962,
            0.9946889281272888,
            0.9936383962631226,
            0.9953837990760803,
            0.993602454662323,
            0.9954207539558411,
            0.9948905110359192,
            0.9925281405448914,
            0.9950786232948303,
            0.9948728680610657,
            0.994137704372406,
            0.9949058890342712,
            0.9938925504684448,
            0.9782265424728394,
            0.9948186278343201
        ]
    },
    "1745": {
        "similarity": 0.9971741437911987,
        "body": "    n, m = map(int, input().split())\n    grid = [list(input()) for _ in range(n)]\n    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n    path_count = {i: 0 for i in range(m)}\n    result = 0\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '.':\n                if i > 0 and j > 0 and i < n-1 and j < m-1:\n                    count = 0\n                    for d in directions:\n                        ni, nj = i+d[0], j+d[1]\n                        if 0 <= ni < n and 0 <= nj < m and grid[ni][nj] == '.':\n                            count += (path_count[nj] + 1) % 2\n                    path_count[j] = count % 2\n                else:\n                    path_count[j] = (path_count[j-1] + 1) % 2 if j > 0 else 0\n    for i in range(m):\n        result += path_count[i]\n    print(result)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9971741437911987,
            0.9962827563285828,
            0.9958140850067139,
            0.9966631531715393,
            0.996823251247406,
            0.9962267875671387,
            0.9969068169593811,
            0.9908930063247681,
            0.9967624545097351,
            0.9958570599555969,
            0.9969407916069031,
            0.9954050183296204,
            0.9967357516288757,
            0.996364176273346,
            0.9957050681114197,
            0.9967189431190491,
            0.9962722659111023,
            0.9960839152336121,
            0.9964282512664795,
            0.997001051902771
        ]
    },
    "1422": {
        "similarity": 0.9968665242195129,
        "body": "    w = [int(i) for i in str(input()).lstrip('0')]\n    m = int(input())\n    if len(w) < m:\n        print(\"NO\")\n    elif m == 1:\n        print(\"YES\")\n        print(0)\n    else:\n        a, b = [], []\n        for _ in range(m):\n            if w and (not a or w[0] != a[-1]):\n                a.append(w.pop(0))\n            else:\n                b.append(min(w))\n                w.remove(b[-1])\n        print(\"YES\" if len(a) > len(b) else \"NO\")\n        if \"YES\" in print():\n            print(*a, *b, sep=' ')",
        "result": "failed: testcase 0",
        "similarities": [
            0.996108889579773,
            0.9953101277351379,
            0.9953572154045105,
            0.9965764284133911,
            0.9960660338401794,
            0.9964824318885803,
            0.9952308535575867,
            0.9959264993667603,
            0.9967692494392395,
            0.9966687560081482,
            0.9938820600509644,
            0.9959273934364319,
            0.9921007752418518,
            0.9964616894721985,
            0.9963634014129639,
            0.9968665242195129,
            0.9941673278808594,
            0.9926277995109558,
            0.9960485100746155,
            0.9958848357200623
        ]
    },
    "1763": {
        "similarity": 0.9965063333511353,
        "body": "    N, A, R, M = map(int, input().split())\n    h = list(map(int, input().split()))\n    min_height = max(h)\n    total_cost = 0\n    for i in range(N):\n        if h[i] < min_height:\n            total_cost += (min_height - h[i]) * A\n    return total_cost",
        "result": "failed: testcase 0",
        "similarities": [
            0.9951071739196777,
            0.9937449097633362,
            0.9913129210472107,
            0.9952426552772522,
            0.9948174357414246,
            0.9916723966598511,
            0.9957733154296875,
            0.9921765923500061,
            0.9965063333511353,
            0.996494710445404,
            0.9952856302261353,
            0.995253324508667,
            0.9952651858329773,
            0.9951412081718445,
            0.9950907826423645,
            0.9935892224311829,
            0.9943605661392212,
            0.995714008808136,
            0.9954245686531067,
            0.9952930808067322
        ]
    },
    "974": {
        "similarity": 0.9975165128707886,
        "body": "    n = int(input())\n    added = [0]*n\n    for _ in range(2*n):\n        cmd = input().split()\n        if cmd[0] == \"add\":\n            x = int(cmd[1])\n            added[x-1] += 1\n        elif cmd[0] == \"remove\":\n            while added[0] == 0:\n                added.pop(0)\n    print(len(added))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9946674704551697,
            0.993466317653656,
            0.9965707659721375,
            0.9970136284828186,
            0.9971000552177429,
            0.9963260293006897,
            0.9955454468727112,
            0.9968107342720032,
            0.9936202168464661,
            0.994962215423584,
            0.996515154838562,
            0.9963443279266357,
            0.9961214661598206,
            0.9966952800750732,
            0.9975165128707886,
            0.9965842366218567,
            0.9964523315429688,
            0.9953397512435913,
            0.9957640767097473,
            0.9961625933647156
        ]
    },
    "2343": {
        "similarity": 0.9969451427459717,
        "body": "    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        if 2**n % 4 == 0:\n            print(\"YES\", end=' ')\n            if k <= (n-1)*3:\n                print(n-1)\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")",
        "result": "timed out",
        "similarities": [
            0.9956478476524353,
            0.9960957765579224,
            0.99413001537323,
            0.9953709840774536,
            0.9942502379417419,
            0.9952922463417053,
            0.9962328672409058,
            0.9938781261444092,
            0.9966974854469299,
            0.996820867061615,
            0.9966719746589661,
            0.9966980814933777,
            0.9938564300537109,
            0.9905475974082947,
            0.9966420531272888,
            0.9965460896492004,
            0.9948412179946899,
            0.9932587146759033,
            0.9969451427459717,
            0.9968664050102234
        ]
    },
    "627": {
        "similarity": 0.995985746383667,
        "body": "    n = int(input())\n    s = input()\n    if 'z' in s.lower():\n        return s[:n-1]\n    for i in range(n):\n        new_s = s[:i] + s[i+1:]\n        if len(new_s) > 0 and new_s < s:\n            return new_s\n    return s",
        "result": "failed: testcase 0",
        "similarities": [
            0.9943861961364746,
            0.9940358400344849,
            0.995212733745575,
            0.9913976788520813,
            0.9936414361000061,
            0.9956597089767456,
            0.9947764873504639,
            0.9935646057128906,
            0.9928290843963623,
            0.9945909380912781,
            0.9928681254386902,
            0.9934125542640686,
            0.9916831851005554,
            0.9939234852790833,
            0.995985746383667,
            0.9943861961364746,
            0.9936923980712891,
            0.991703450679779,
            0.9945260882377625,
            0.9896662831306458
        ]
    },
    "1655": {
        "similarity": 0.9976581931114197,
        "body": "    n = int(input())\n    L = list(map(int, input().split()))\n    i = 0\n    alive = n\n    while i < n:\n        if L[i] == 0 or i >= n - L[i]:\n            break\n        alive -= max(0, i - (L[i] - 1))\n        i += 1\n    print(alive)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9967419505119324,
            0.9951491951942444,
            0.9961003661155701,
            0.9966427683830261,
            0.9976581931114197,
            0.9970390200614929,
            0.9970508217811584,
            0.9973959922790527,
            0.997135579586029,
            0.9963104128837585,
            0.9975057244300842,
            0.9971529245376587,
            0.9974533915519714,
            0.9935792684555054,
            0.9969934225082397,
            0.9971769452095032,
            0.9970942139625549,
            0.9964026212692261,
            0.9964529275894165,
            0.9949342608451843
        ]
    },
    "2124": {
        "similarity": 0.9981154203414917,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        users = set(input().split())\n        m = int(input())\n        chat = []\n        unknown_sender = None\n        for _ in range(m):\n            line = input()\n            if not line.startswith('<'):\n                unknown_sender = True\n                break\n            _, sender, text = line.split(':')\n            chat.append((sender.lower(), text))\n        if len(set(sender[0] for sender, _ in chat)) != n:\n            print('Impossible')\n        else:\n            for i in range(1, m):\n                if chat[i][0] == chat[i-1][0]:\n                    unknown_sender = True\n                    break\n            if unknown_sender:\n                print('Impossible')\n            else:\n                for i, (sender, text) in enumerate(chat):\n                    if sender.lower() != 'unknown':\n                        print(f'{sender}: {text}')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9979142546653748,
            0.9980877637863159,
            0.9976850748062134,
            0.9970661997795105,
            0.9976454377174377,
            0.9973335266113281,
            0.9972105622291565,
            0.9974475502967834,
            0.9976574778556824,
            0.9980297088623047,
            0.997972309589386,
            0.9979618787765503,
            0.9976887106895447,
            0.9977576732635498,
            0.9973236918449402,
            0.9971917867660522,
            0.9980689883232117,
            0.9980450868606567,
            0.9981154203414917,
            0.9965254068374634
        ]
    },
    "1093": {
        "similarity": 0.9965230226516724,
        "body": "    n, m = map(int, input().split())\n    hrebet = [list(input()) for _ in range(n)]\n    max_up = 0\n    max_down = 0\n    for i in range(n-1):\n        up = 0\n        down = 0\n        for j in range(m-1):\n            if hrebet[i][j] == '*' and hrebet[i+1][j] != '*':\n                up += 1\n            elif hrebet[i][j] == '*' and hrebet[i+1][j] == '*':\n                down += 1\n        max_up = max(max_up, up)\n        max_down = max(max_down, down)\n    print(max_up, max_down)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9962601065635681,
            0.9956767559051514,
            0.9961349368095398,
            0.9965230226516724,
            0.995796799659729,
            0.9963003396987915,
            0.9887346029281616,
            0.9958506226539612,
            0.9959895610809326,
            0.9963362812995911,
            0.9953832030296326,
            0.9960696697235107,
            0.9959295392036438,
            0.995694637298584,
            0.9916243553161621,
            0.9960463643074036,
            0.9964055418968201,
            0.9950533509254456,
            0.9943608641624451,
            0.9961941242218018
        ]
    },
    "899": {
        "similarity": 0.996773362159729,
        "body": "    N, M = map(int, input().split())\n    edges = []\n    for _ in range(M):\n        a, b, c = map(int, input().split())\n        if (a < b): \n            edges.append((c, a, b))\n        else:\n            edges.append((c, b, a))\n    edges.sort()\n    visited = set()\n    res = 0\n    for i in range(len(edges)):\n        for j in range(i+1, len(edges)):\n            c1, v1, w1 = edges[i]\n            c2, v2, w2 = edges[j]\n            if ((v1 == w2 and c1 < c2) or (v2 == w1 and c2 < c1)) and ((v1, w1) not in visited):\n                res += 1\n                visited.add((v1, w1))\n                break\n    return res",
        "result": "failed: testcase 0",
        "similarities": [
            0.9946534037590027,
            0.996773362159729,
            0.9949259757995605,
            0.996403157711029,
            0.9964327812194824,
            0.9957091808319092,
            0.9964200854301453,
            0.9946608543395996,
            0.9966228008270264,
            0.9946616291999817,
            0.9963030815124512,
            0.9964165091514587,
            0.9928005933761597,
            0.9964666962623596,
            0.9955345988273621,
            0.995877742767334,
            0.9961176514625549,
            0.99615478515625,
            0.9951930642127991,
            0.9960419535636902
        ]
    },
    "551": {
        "similarity": 0.9979623556137085,
        "body": "    n = int(input())\n    y = list(map(int, input().split()))\n    y.sort()\n    for i in range(len(y) - 1):\n        if y[i] == y[i+1]:\n            print(\"No\")\n            return\n    print(\"Yes\")",
        "result": "failed: testcase 2",
        "similarities": [
            0.9976287484169006,
            0.9975156188011169,
            0.9967990517616272,
            0.9977295398712158,
            0.9942845702171326,
            0.9968075156211853,
            0.9960627555847168,
            0.9976131916046143,
            0.9956325888633728,
            0.9979623556137085,
            0.9972045421600342,
            0.9973118305206299,
            0.9976202249526978,
            0.9977823495864868,
            0.9929534792900085,
            0.9976375102996826,
            0.9975921511650085,
            0.997589111328125,
            0.9978785514831543,
            0.9978005290031433
        ]
    },
    "1772": {
        "similarity": 0.9962455630302429,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(1, len(a)):\n        if a[i] % 2 == 1:\n            ans += 1\n            a[i-1] += a[i]\n            a.pop(i)\n    return ans",
        "result": "failed: testcase 0",
        "similarities": [
            0.9950954914093018,
            0.9943702220916748,
            0.9933689832687378,
            0.994735836982727,
            0.9941512942314148,
            0.9951351881027222,
            0.9938611388206482,
            0.9953594207763672,
            0.9947625994682312,
            0.9942663311958313,
            0.9941754937171936,
            0.994012713432312,
            0.9957781434059143,
            0.9949808716773987,
            0.9951663613319397,
            0.9954699277877808,
            0.9962455630302429,
            0.9936598539352417,
            0.9944075345993042,
            0.9958657622337341
        ]
    },
    "1339": {
        "similarity": 0.9968978762626648,
        "body": "    n = int(input())\n    segments = []\n    for _ in range(n):\n        l, r = map(int, input().split())\n        segments.append((l, r))\n    for i, seg in enumerate(segments):\n        covered = True\n        for j, other in enumerate(segments):\n            if i != j and not (seg[0] <= other[0] <= other[1] <= seg[1]):\n                covered = False\n                break\n        if covered:\n            print(i + 1)\n            return\n    print(-1)",
        "result": "passed",
        "similarities": [
            0.9961740374565125,
            0.9966321587562561,
            0.9889982342720032,
            0.9966955780982971,
            0.9894630312919617,
            0.9965990781784058,
            0.9929817914962769,
            0.9950493574142456,
            0.9953966736793518,
            0.9928507804870605,
            0.9961057901382446,
            0.9948808550834656,
            0.9927639365196228,
            0.9951730370521545,
            0.9954691529273987,
            0.9959116578102112,
            0.9963260293006897,
            0.9953017234802246,
            0.9964278340339661,
            0.9968978762626648
        ]
    },
    "440": {
        "similarity": 0.9955407381057739,
        "body": "    n = int(input())\n    s = input().strip()\n    while True:\n        for i in range(n-1):\n            if 'a' <= s[i] <= 'u' and 'a' <= s[i+1] <= 'u':\n                s = s[:i] + s[i+1:]\n                n -= 1\n                break\n        else:\n            print(s)\n            return",
        "result": "failed: testcase 0",
        "similarities": [
            0.9953362345695496,
            0.9955407381057739,
            0.9946486949920654,
            0.9892560243606567,
            0.9927233457565308,
            0.9892795085906982,
            0.9933081269264221,
            0.9948674440383911,
            0.9942999482154846,
            0.9931526184082031,
            0.9928460717201233,
            0.9953358173370361,
            0.9940945506095886,
            0.9950404167175293,
            0.9935587644577026,
            0.992654025554657,
            0.9953447580337524,
            0.9873296022415161,
            0.9941095113754272,
            0.9915699362754822
        ]
    },
    "2801": {
        "similarity": 0.9960341453552246,
        "body": "    n, m = map(int, input().split())\n    c = list(map(int, input().split()))\n    connections = []\n    for _ in range(m):\n        s, t = map(int, input().split())\n        connections.append((s, t))\n    visited = [False] * n\n    satisfaction = 0\n    stack = [(n-1, float('-inf'), c[n-1])]\n    while stack:\n        k, prev_satisfaction, last_c = stack.pop()\n        if visited[k]:\n            continue\n        visited[k] = True\n        satisfaction += last_c / (2 ** (k - 1))\n        for s, t in connections:\n            if s == k and not visited[t]:\n                stack.append((t, satisfaction, last_c * 2 ** (k - 1)))\n    print(satisfaction)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9930867552757263,
            0.9902917742729187,
            0.9932868480682373,
            0.9949493408203125,
            0.9945530295372009,
            0.9958618879318237,
            0.9874321818351746,
            0.9950425028800964,
            0.9938400983810425,
            0.9956229329109192,
            0.9956448078155518,
            0.9959467053413391,
            0.9936862587928772,
            0.9943827390670776,
            0.9951772093772888,
            0.9896982908248901,
            0.9934395551681519,
            0.9948312640190125,
            0.9960341453552246,
            0.9948307871818542
        ]
    },
    "2749": {
        "similarity": 0.9965788125991821,
        "body": "    h, w = map(int, input().split())\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(1, n+1):\n        if sum([j == i for j in a]) < (h*w)//n:\n            a[i-1] += (h*w)//n - sum([j == i for j in a])\n    for i in range(h):\n        for j in range(w):\n            k = min([i+a.index(j*h+w) for a_index, a_val in enumerate(a) if a_index+1==a.index(j*h+w)])\n            print(min(k % n + 1, n), end=' ')\n        print()",
        "result": "failed: testcase 0",
        "similarities": [
            0.9949095845222473,
            0.9925556182861328,
            0.9944750070571899,
            0.9964738488197327,
            0.99481201171875,
            0.9965788125991821,
            0.9961929321289062,
            0.9942120909690857,
            0.994681715965271,
            0.9956104755401611,
            0.9925221800804138,
            0.9938229918479919,
            0.9947988390922546,
            0.9921770691871643,
            0.9964784383773804,
            0.9958895444869995,
            0.9924067258834839,
            0.9953820109367371,
            0.9963788390159607,
            0.9944526553153992
        ]
    },
    "2319": {
        "similarity": 0.9967939257621765,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        t = input()\n        res = 0\n        while s != t:\n            if not s.startswith(t[:n//2]):\n                left = n-1\n                while left > 0 and s[left:] != t[:n-left]:\n                    left -= 1\n                s = s[left:] + s[:left]\n                res += 1\n            else:\n                break\n        print(res if s == t else -1)",
        "result": "timed out",
        "similarities": [
            0.9955976605415344,
            0.9951745867729187,
            0.9966671466827393,
            0.9955834150314331,
            0.9967939257621765,
            0.9949711561203003,
            0.9963349103927612,
            0.9964765310287476,
            0.9950621724128723,
            0.9956384897232056,
            0.9967823028564453,
            0.9934130311012268,
            0.9954041242599487,
            0.9953355193138123,
            0.9941630363464355,
            0.9955835938453674,
            0.9930771589279175,
            0.9914380311965942,
            0.9949752688407898,
            0.9938715696334839
        ]
    },
    "2121": {
        "similarity": 0.9953538775444031,
        "body": "    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    edges = []\n    for _ in range(n-1):\n        u,v = map(int,input().split())\n        edges.append((u,v))\n    edges.sort()\n    res = 1000000\n    for i in range(n):\n        cur_min = 1000000\n        last = None\n        for j in range(i+1):\n            if a[edges[j][1]-1] < cur_min:\n                cur_min = a[edges[j][1]-1]\n                last = edges[j][1]\n        res = min(res,cur_min)\n    return res",
        "result": "failed: testcase 0",
        "similarities": [
            0.9944072365760803,
            0.9938390851020813,
            0.9783260822296143,
            0.9926973581314087,
            0.991004228591919,
            0.9948328733444214,
            0.9931458234786987,
            0.9932702779769897,
            0.9938808083534241,
            0.9951547384262085,
            0.9947587251663208,
            0.9944028258323669,
            0.9941455721855164,
            0.9930751323699951,
            0.9951168894767761,
            0.9946615099906921,
            0.9947147369384766,
            0.9952974915504456,
            0.9938031435012817,
            0.9953538775444031
        ]
    },
    "2617": {
        "similarity": 0.9969445466995239,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        d = 0\n        total_mass = 1\n        split_plan = []\n        while total_mass < n:\n            d += 1\n            night_mass = [mass + 1 for mass in total_mass]\n            if sum(night_mass) >= n:\n                break\n            total_mass += sum([m / 2 for m in night_mass])\n            split_plan.append(len([m for m in night_mass if m > 1]))\n        if total_mass < n:\n            print(-1)\n        else:\n            print(d)\n            print(' '.join(map(str, split_plan)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9963095784187317,
            0.9951673150062561,
            0.9965420961380005,
            0.9948471784591675,
            0.9955618977546692,
            0.9945385456085205,
            0.995654284954071,
            0.995763897895813,
            0.9958289265632629,
            0.9936487078666687,
            0.9939401745796204,
            0.9969445466995239,
            0.9965935945510864,
            0.996239423751831,
            0.982929527759552,
            0.9954925179481506,
            0.9965571165084839,
            0.9962365031242371,
            0.9963772296905518,
            0.9964107871055603
        ]
    },
    "175": {
        "similarity": 0.9987474679946899,
        "body": "    a, b = map(int, input().split())\n    while a > 0 and b > 0:\n        if a >= 2*b:\n            a -= 2*b\n        elif b >= 2*a:\n            b -= 2*a\n        else:\n            break\n    print(a, b)",
        "result": "timed out",
        "similarities": [
            0.9987185597419739,
            0.9986801147460938,
            0.9962350130081177,
            0.9987185597419739,
            0.9987184405326843,
            0.9969719648361206,
            0.9987252950668335,
            0.9982499480247498,
            0.9987474679946899,
            0.9987474679946899,
            0.9951278567314148,
            0.9987184405326843,
            0.9983866810798645,
            0.9962350130081177,
            0.9987184405326843,
            0.9987184405326843,
            0.9987185597419739,
            0.9987298250198364,
            0.9986801147460938,
            0.9982711672782898
        ]
    },
    "995": {
        "similarity": 0.9965081810951233,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    for i in range(2**n):\n        prod = 1\n        group_count = 0\n        for j in range(n):\n            if ((i >> j) & 1):\n                prod *= a[j]\n            else:\n                group_count += 1\n        k = int(prod ** 0.5)\n        ans[k] += 1\n    return ' '.join(str(x) for x in ans[1:])",
        "result": "timed out",
        "similarities": [
            0.9965081810951233,
            0.9959045052528381,
            0.9954532980918884,
            0.9949751496315002,
            0.9930974245071411,
            0.9961497783660889,
            0.9943357110023499,
            0.9937776327133179,
            0.9953314065933228,
            0.9955924153327942,
            0.996396541595459,
            0.9953799247741699,
            0.9832227826118469,
            0.9872914552688599,
            0.9960717558860779,
            0.9962679147720337,
            0.9940386414527893,
            0.9949706196784973,
            0.9926119446754456,
            0.9958825707435608
        ]
    },
    "582": {
        "similarity": 0.9953007102012634,
        "body": "    n = int(input())\n    as_ = list(map(int, input().split()))\n    ts = list(map(int, input().split()))\n    \n    total_time = 0\n    categories = []\n    for i in range(n):\n        if len(set(as_[i:] + categories)) != len(categories) + 1:\n            total_time += min(ts[i:])\n        categories.append(as_[i])\n        \n    print(total_time)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9913070201873779,
            0.9881964325904846,
            0.992706298828125,
            0.9932439923286438,
            0.9926390647888184,
            0.9931243062019348,
            0.9932466745376587,
            0.989892840385437,
            0.9953007102012634,
            0.9945502281188965,
            0.9937952756881714,
            0.9948921203613281,
            0.9912461042404175,
            0.9944381713867188,
            0.9945783019065857,
            0.9922319650650024,
            0.9908176064491272,
            0.9941838979721069,
            0.9947864413261414,
            0.9952172636985779
        ]
    },
    "1402": {
        "similarity": 0.9961851239204407,
        "body": "    n = int(input())\n    s1 = input()\n    s2 = input()\n    res = 1\n    for i in range(n):\n        if s1[i] == '?':\n            for j in range(n):\n                if s2[j] == '?':\n                    res *= (int(s1[i]) - int(s2[j])) * (int(s1[i]) + int(s2[j]))\n                else:\n                    res *= 2\n            break\n    print(res % 1000000007)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9957032799720764,
            0.9931213855743408,
            0.9921846985816956,
            0.9961851239204407,
            0.995708167552948,
            0.9947932362556458,
            0.9956724047660828,
            0.9947116374969482,
            0.9947229623794556,
            0.9887811541557312,
            0.9944702982902527,
            0.9959381818771362,
            0.9941045045852661,
            0.9952847361564636,
            0.9951494336128235,
            0.99187833070755,
            0.9958024621009827,
            0.9942889213562012,
            0.9950658082962036,
            0.9885503053665161
        ]
    },
    "1141": {
        "similarity": 0.9976856708526611,
        "body": "    n, m = map(int, input().split())\n    s = input()\n    for _ in range(m):\n        l, r, c1, c2 = input().split()\n        s = s[:l-1] + c2 * (r - l + 1) + s[r:]\n    print(s)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9963505268096924,
            0.9974777698516846,
            0.9972507357597351,
            0.9966379404067993,
            0.9976606965065002,
            0.9972046613693237,
            0.9968832731246948,
            0.9970242381095886,
            0.9967765808105469,
            0.9976605772972107,
            0.9974777698516846,
            0.9885627627372742,
            0.9974071979522705,
            0.9968537092208862,
            0.9974827170372009,
            0.9961759448051453,
            0.9976856708526611,
            0.9942771792411804,
            0.9967643618583679,
            0.9973106384277344
        ]
    },
    "2836": {
        "similarity": 0.9955832958221436,
        "body": "    N = int(input())\n    Ps = list(map(int, input().split()))\n    A, B = map(int, input().split())\n    P_avg = sum(Ps) / N\n    X = max([i for i in range(A, B+1) if i % 2 != 0], key=lambda x: min(abs(x-P) for P in Ps))\n    print(X)",
        "result": "failed: testcase 2",
        "similarities": [
            0.9945170879364014,
            0.9905480146408081,
            0.9929456114768982,
            0.9907310009002686,
            0.9926496744155884,
            0.9951298236846924,
            0.9881540536880493,
            0.9953752160072327,
            0.9926368594169617,
            0.9948570728302002,
            0.9951603412628174,
            0.9922298789024353,
            0.9953542947769165,
            0.9885948896408081,
            0.9955832958221436,
            0.9945568442344666,
            0.9934377074241638,
            0.995227038860321,
            0.9950872659683228,
            0.9906538724899292
        ]
    },
    "1109": {
        "similarity": 0.9970586895942688,
        "body": "    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    b = [x%2 for x in range(k)]\n    b *= (n//k)\n    count = sum(1 for x,y in zip(a,b) if x!=y)\n    print(count)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9952366352081299,
            0.9947807192802429,
            0.99566650390625,
            0.9955974221229553,
            0.9949626922607422,
            0.9943932294845581,
            0.9966872334480286,
            0.9970586895942688,
            0.9966475963592529,
            0.9961066246032715,
            0.9945923686027527,
            0.9958162903785706,
            0.9960126280784607,
            0.9961013793945312,
            0.9967617392539978,
            0.9960733652114868,
            0.9961161613464355,
            0.9963662028312683,
            0.9949861168861389,
            0.9960030913352966
        ]
    },
    "2125": {
        "similarity": 0.9967076182365417,
        "body": "    n, m = map(int, input().split())\n    blanket = [list(input()) for _ in range(n)]\n    count = 0\n    for i in range(n-2):\n        for j in range(m-2):\n            top_color = blanket[i][j]\n            mid_color = blanket[i+1][j:j+3].count(blanket[i][j]) == 0\n            bot_color = blanket[i+2][j]\n            if (top_color != mid_color) and (mid_color != bot_color):\n                count += 1\n    print(count)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960595965385437,
            0.991800844669342,
            0.9967076182365417,
            0.9966651797294617,
            0.9946120381355286,
            0.9952273964881897,
            0.9947769641876221,
            0.9947940707206726,
            0.994316816329956,
            0.9945734143257141,
            0.9953768849372864,
            0.9957124590873718,
            0.9931568503379822,
            0.9895036816596985,
            0.9966345429420471,
            0.9944993853569031,
            0.9942660331726074,
            0.9948264956474304,
            0.988480806350708,
            0.9965243339538574
        ]
    },
    "1746": {
        "similarity": 0.9962950348854065,
        "body": "    n = int(input())\n    parent = [0]*(n+1)\n    for _ in range(n-1):\n        p = int(input())-1\n        parent[p] += 1\n    spruce = True\n    leaf_count = 0\n    for i in range(1, n):\n        if parent[i-1] > 2:\n            leaf_count = parent[i]\n            spruce = False\n            break\n    print(\"Yes\" if spruce else \"No\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9919236898422241,
            0.9910150766372681,
            0.9932044148445129,
            0.9946742057800293,
            0.9954105019569397,
            0.9958094358444214,
            0.9934064149856567,
            0.9932940602302551,
            0.9957149028778076,
            0.993354320526123,
            0.9956974387168884,
            0.9938461780548096,
            0.9962950348854065,
            0.9949732422828674,
            0.9949247241020203,
            0.995487630367279,
            0.9962222576141357,
            0.9946931600570679,
            0.9958921670913696,
            0.9935056567192078
        ]
    },
    "1294": {
        "similarity": 0.9964759349822998,
        "body": "    t = int(input())\n    for _ in range(t):\n        s = input()\n        res = ''\n        for c in set(s):\n            if len([i for i, x in enumerate(s) if x == c]) % 2 == 0:\n                res += c\n        print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9954870343208313,
            0.9962518811225891,
            0.9906777143478394,
            0.992867112159729,
            0.9939607381820679,
            0.9901090860366821,
            0.9937912821769714,
            0.9959009885787964,
            0.9964759349822998,
            0.9911713004112244,
            0.996329665184021,
            0.9964358806610107,
            0.9927441477775574,
            0.994099497795105,
            0.9937230944633484,
            0.9940990805625916,
            0.9922915101051331,
            0.9954741597175598,
            0.9945911765098572,
            0.9933684468269348
        ]
    },
    "1159": {
        "similarity": 0.9966015219688416,
        "body": "        if k < 2: return False\n        for i in range(2, int(k**0.5)+1):\n            if k%i==0: return False\n        return True\n    m = -1\n    edges = []\n    for i in range(n-1):\n        d = (n*(n-1))//2\n        while not is_prime(d+1):\n            d -= 1\n        m = d+1\n        for j in range(i, n-1):\n            if i==j: continue\n            edges.append((i,j))\n    if len(edges)!=m:\n        print(-1)\n    else:\n        print(m)\n        for e in edges:\n            print(*e)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9959080219268799,
            0.996087908744812,
            0.9934959411621094,
            0.9956426024436951,
            0.993407130241394,
            0.995652973651886,
            0.996435284614563,
            0.9957433938980103,
            0.9951944947242737,
            0.994636058807373,
            0.9962055683135986,
            0.9957777261734009,
            0.9962061643600464,
            0.9943611025810242,
            0.9942182302474976,
            0.9956125020980835,
            0.9966015219688416,
            0.9962011575698853,
            0.9936397075653076,
            0.9915206432342529
        ]
    },
    "2025": {
        "similarity": 0.9986799955368042,
        "body": "    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        if n < 2:\n            print(-1)\n        else:\n            count = 0\n            i = 2\n            while i * i <= n:\n                while n % i:\n                    i += 1\n                n //= i\n                count += 1\n            if n > 1:\n                count += 1\n            print(count)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9978395104408264,
            0.9968135356903076,
            0.9971738457679749,
            0.998240053653717,
            0.9980556964874268,
            0.9986777305603027,
            0.9959368705749512,
            0.9985755085945129,
            0.9967649579048157,
            0.9970750212669373,
            0.9986799955368042,
            0.9981364011764526,
            0.9986799955368042,
            0.9963638186454773,
            0.9986070394515991,
            0.9986799955368042,
            0.9986070394515991,
            0.9985215067863464,
            0.9986799955368042,
            0.9986070394515991
        ]
    },
    "1429": {
        "similarity": 0.9967312216758728,
        "body": "    N = int(input())\n    S = input()\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N+1):\n            T = S[i:j]\n            if len(T) > 0:\n                rev_T = T[::-1].translate(str.maketrans('ATCG', 'TAGC'))\n                if S.count(T) == S.count(rev_T):\n                    count += 1\n    print(count)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9962734580039978,
            0.9959380626678467,
            0.9966569542884827,
            0.9944767355918884,
            0.9905954003334045,
            0.9966145753860474,
            0.9963656067848206,
            0.9966757893562317,
            0.9967312216758728,
            0.986630380153656,
            0.9962319731712341,
            0.9866191744804382,
            0.9963303804397583,
            0.9966649413108826,
            0.9944535493850708,
            0.9959807991981506,
            0.9950118064880371,
            0.9959347248077393,
            0.9945220947265625,
            0.9960805177688599
        ]
    },
    "1950": {
        "similarity": 0.9926217794418335,
        "body": "    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = sum(range(1, n+1))\n    for i in range(n):\n        res += min(a[i], (a[i]-1)//3*4 + 2)\n    print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9877480268478394,
            0.9917207360267639,
            0.9888681173324585,
            0.9889369606971741,
            0.9897764921188354,
            0.9903900027275085,
            0.9859676361083984,
            0.9893292784690857,
            0.9900487661361694,
            0.9811164736747742,
            0.9900737404823303,
            0.9913697838783264,
            0.9831573367118835,
            0.9884287118911743,
            0.9906044006347656,
            0.9901826977729797,
            0.990251362323761,
            0.9926217794418335,
            0.9900429248809814,
            0.9843478798866272
        ]
    },
    "631": {
        "similarity": 0.9991378784179688,
        "body": "    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        a = list(map(int, input().split()))\n        a.sort()\n        s = sum(sum(a[i:j+1]/j for j in range(i, n+1)) for i in range(n))\n        print(\"YES\" if s == m else \"NO\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9985596537590027,
            0.9989330768585205,
            0.9990772604942322,
            0.9990378022193909,
            0.9989224672317505,
            0.9981871247291565,
            0.9990228414535522,
            0.9980628490447998,
            0.9989880323410034,
            0.9988992810249329,
            0.9976046681404114,
            0.9989017844200134,
            0.9988338947296143,
            0.9990190267562866,
            0.9990317821502686,
            0.9989836812019348,
            0.9988623261451721,
            0.9990109801292419,
            0.9991378784179688,
            0.9989609122276306
        ]
    },
    "2480": {
        "similarity": 0.9985343813896179,
        "body": "    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    res = 0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            s = sum(a[i:j])\n            if (s % k == j-i and j-i > 0):\n                res += 1\n    print(res)",
        "result": "passed",
        "similarities": [
            0.9980041980743408,
            0.9982830882072449,
            0.997961163520813,
            0.9983528852462769,
            0.9980019330978394,
            0.99590003490448,
            0.9977205991744995,
            0.9975487589836121,
            0.9985007047653198,
            0.9983240365982056,
            0.9981956481933594,
            0.9975296854972839,
            0.9955118894577026,
            0.9984685182571411,
            0.9985343813896179,
            0.9975836873054504,
            0.9965591430664062,
            0.9984959363937378,
            0.9984259605407715,
            0.9973182678222656
        ]
    },
    "2363": {
        "similarity": 0.9970217347145081,
        "body": "    n = int(input())\n    for _ in range(n):\n        a, b = map(int, input().split())\n        while a > 0 and b > 0:\n            if a < b:\n                b -= a\n            else:\n                a -= 1\n        print(b - a)",
        "result": "timed out",
        "similarities": [
            0.9919142723083496,
            0.9965589642524719,
            0.9922147989273071,
            0.9903526306152344,
            0.9952123761177063,
            0.9970217347145081,
            0.9967842102050781,
            0.9961104393005371,
            0.996792733669281,
            0.9954937696456909,
            0.9966054558753967,
            0.9957098960876465,
            0.9967278242111206,
            0.9951788187026978,
            0.9959883689880371,
            0.9963428974151611,
            0.9964881539344788,
            0.995920717716217,
            0.9966868162155151,
            0.9959589242935181
        ]
    },
    "909": {
        "similarity": 0.9960106611251831,
        "body": "    return max((a+b)*c, a*(b+c), a*b+c)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9951795339584351,
            0.9941834211349487,
            0.9960106611251831,
            0.9934864044189453,
            0.994967520236969,
            0.9926439523696899,
            0.9960106611251831,
            0.9958202838897705,
            0.9955190420150757,
            0.9844310283660889,
            0.9934864044189453,
            0.9960106611251831,
            0.9960106611251831,
            0.9884617328643799,
            0.9934864044189453,
            0.9896909594535828,
            0.9934864044189453,
            0.9879590272903442,
            0.9950976967811584,
            0.9951795339584351
        ]
    },
    "154": {
        "similarity": 0.9948216676712036,
        "body": "    n = int(input())\n    ans = 1\n    for i in range(2, n):\n        if i % 4 == 0 or i % 4 == 3:\n            ans *= pow(2, (n-1), 998244353)\n        else:\n            ans *= 2**(n-1) * pow(3, (n-1)//2, 998244353)\n    print(ans % 998244353)",
        "result": "timed out",
        "similarities": [
            0.9946433901786804,
            0.9853895902633667,
            0.9943464398384094,
            0.9943612813949585,
            0.9909424185752869,
            0.9892799258232117,
            0.9920450448989868,
            0.994392991065979,
            0.9939770102500916,
            0.9930092692375183,
            0.9946023225784302,
            0.9945486187934875,
            0.9913321137428284,
            0.9948216676712036,
            0.9941970705986023,
            0.9942159056663513,
            0.9944837689399719,
            0.9839232563972473,
            0.9899240136146545,
            0.9937959313392639
        ]
    },
    "39": {
        "similarity": 0.998399019241333,
        "body": "    s = input()\n    max_len = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            substr = s[i:j]\n            if not substr == substr[::-1]:\n                max_len = max(max_len, len(substr))\n    print(max_len)",
        "result": "passed",
        "similarities": [
            0.9967007040977478,
            0.9978489279747009,
            0.9965764880180359,
            0.9970346689224243,
            0.9968407154083252,
            0.9982928037643433,
            0.9978143572807312,
            0.9981409311294556,
            0.9981300234794617,
            0.997027575969696,
            0.9975042939186096,
            0.9981986880302429,
            0.9981030225753784,
            0.9970111846923828,
            0.9967687726020813,
            0.9980641603469849,
            0.9971655607223511,
            0.9969661235809326,
            0.9979683756828308,
            0.998399019241333
        ]
    },
    "1885": {
        "similarity": 0.9952746033668518,
        "body": "    n = int(input())\n    ans = 1\n    for i in range(5, min(n, 8)):\n        ans *= i\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9948369264602661,
            0.9938318133354187,
            0.9901948571205139,
            0.9897854328155518,
            0.9952746033668518,
            0.9924134016036987,
            0.9928284883499146,
            0.9934399127960205,
            0.9892646670341492,
            0.9901949167251587,
            0.9952692985534668,
            0.9922787547111511,
            0.9950344562530518,
            0.9906458854675293,
            0.9927990436553955,
            0.9901949167251587,
            0.9907594323158264,
            0.9948107004165649,
            0.9937890768051147,
            0.9944547414779663
        ]
    },
    "1180": {
        "similarity": 0.9958027601242065,
        "body": "    n, k = map(int, input().split())\n    s = str(input())\n    res = 0\n    for i in range(1, n - k + 1):\n        num = int(s[:i] or '0') if not i else int(s[i-k:i])\n        last = int(s[-k:] or '0')\n        res += (num + last) % (10**9 + 7)\n    print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9948499798774719,
            0.9929447174072266,
            0.9951978325843811,
            0.9945803284645081,
            0.9940581917762756,
            0.9951635599136353,
            0.9958027601242065,
            0.9938358664512634,
            0.9938737154006958,
            0.9915693402290344,
            0.9957849383354187,
            0.9909572601318359,
            0.9955278635025024,
            0.9948790669441223,
            0.9948009848594666,
            0.9936005473136902,
            0.9949199557304382,
            0.9923493266105652,
            0.9955671429634094,
            0.993448793888092
        ]
    },
    "1856": {
        "similarity": 0.9954661130905151,
        "body": "    n = int(input())\n    l = [set(input().lower()) for _ in range(n)]\n    s = set.intersection(*l)\n    res = 1\n    for p in l:\n        if not any(i in s for i in p):\n            res += 1\n    print(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.98968106508255,
            0.9943015575408936,
            0.9946125745773315,
            0.9922932386398315,
            0.994096040725708,
            0.9946767687797546,
            0.9940783977508545,
            0.9931407570838928,
            0.9916839599609375,
            0.9948408007621765,
            0.9948405027389526,
            0.9953607320785522,
            0.9927234649658203,
            0.989922285079956,
            0.9897480010986328,
            0.9948023557662964,
            0.9941162467002869,
            0.9932551383972168,
            0.9950581789016724,
            0.9954661130905151
        ]
    },
    "522": {
        "similarity": 0.9962331056594849,
        "body": "    n, f1, f2, f3, c = map(int, input().split())\n    ans = f1 * f2 * f3\n    for _ in range(2, n):\n        ans *= (c**2*_ - 6) % (10**9 + 7)\n    print(ans)",
        "result": "timed out",
        "similarities": [
            0.9927576184272766,
            0.995937168598175,
            0.9962331056594849,
            0.9934945702552795,
            0.9961624145507812,
            0.9961899518966675,
            0.9927657246589661,
            0.9951705932617188,
            0.9953884482383728,
            0.9940902590751648,
            0.9952895641326904,
            0.9950575828552246,
            0.9943590760231018,
            0.9942009449005127,
            0.9953367114067078,
            0.9952960014343262,
            0.9947863221168518,
            0.9955713152885437,
            0.9960570335388184,
            0.994816243648529
        ]
    },
    "1719": {
        "similarity": 0.9971420168876648,
        "body": "    N = int(input())\n    MOD = 10**9 + 7\n    dp = [0] * (N+1)\n    dp[0] = 1\n    for i in range(1, N+1):\n        dp[i] = (dp[i-1] * 4) % MOD\n        if i >= 3:\n            dp[i] -= (dp[i-3] * 2) % MOD\n    print(dp[N])",
        "result": "failed: testcase 0",
        "similarities": [
            0.9969815611839294,
            0.9956164956092834,
            0.9842756986618042,
            0.9908513426780701,
            0.9938983917236328,
            0.996976375579834,
            0.9971376061439514,
            0.9966984987258911,
            0.9965936541557312,
            0.9967328906059265,
            0.9937440752983093,
            0.9969083070755005,
            0.9951003193855286,
            0.9958054423332214,
            0.996955156326294,
            0.9917474389076233,
            0.9971420168876648,
            0.9961404204368591,
            0.9963434338569641,
            0.9914398193359375
        ]
    },
    "1842": {
        "similarity": 0.9964925050735474,
        "body": "import math\n\n    a, b, c = map(int, input().split())\n    disc = b**2 - 4*a*c\n    r1 = (-b + math.sqrt(disc)) / (2*a)\n    r2 = (-b - math.sqrt(disc)) / (2*a)\n    return str(max(r1, r2)), str(min(r1, r2))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9943172931671143,
            0.9962614178657532,
            0.9961152672767639,
            0.996366024017334,
            0.9959250092506409,
            0.9937242269515991,
            0.9945090413093567,
            0.9935601949691772,
            0.9957054853439331,
            0.9959543943405151,
            0.9958283305168152,
            0.9960324168205261,
            0.9956924915313721,
            0.9952057600021362,
            0.9963523745536804,
            0.9931917786598206,
            0.9964925050735474,
            0.9957339763641357,
            0.9923405051231384,
            0.995705246925354
        ]
    },
    "806": {
        "similarity": 0.9959916472434998,
        "body": "    n, l, r = map(int, input().split())\n    res = 0\n    for i in range(l, r+1):\n        if (i*(n+1)//2) % 3 == 0:\n            res += 1\n    print(res % (10**9 + 7))",
        "result": "timed out",
        "similarities": [
            0.9945866465568542,
            0.9917638897895813,
            0.984589159488678,
            0.989873468875885,
            0.9909355044364929,
            0.9946944713592529,
            0.9959916472434998,
            0.9941673278808594,
            0.9930471181869507,
            0.9958720803260803,
            0.9955685138702393,
            0.9945194721221924,
            0.9946469068527222,
            0.9952579140663147,
            0.9950461983680725,
            0.9914119243621826,
            0.9949641823768616,
            0.9958720803260803,
            0.9958685040473938,
            0.9897727966308594
        ]
    },
    "365": {
        "similarity": 0.9961389303207397,
        "body": "    n, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = set()\n    for i in a:\n        if i > 0:\n            s.add(1)\n        else:\n            s.add(0)\n    if len(s) == 1 and (s.pop() * x != x or a.count(a[0]) == n):\n        print('NO')\n    else:\n        print('YES')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9942684173583984,
            0.9954395294189453,
            0.9877285361289978,
            0.9933519959449768,
            0.9943810701370239,
            0.995875895023346,
            0.9947737455368042,
            0.9958839416503906,
            0.9957351684570312,
            0.9956068992614746,
            0.9958711862564087,
            0.9954219460487366,
            0.994376540184021,
            0.9941521883010864,
            0.9961389303207397,
            0.9958673715591431,
            0.9951880574226379,
            0.9925300478935242,
            0.9931066632270813,
            0.9956651329994202
        ]
    },
    "1158": {
        "similarity": 0.9948776960372925,
        "body": "    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    while len(set(a[i:i+k])) < k:\n        i += 1\n    return (i + k - 1) % n",
        "result": "timed out",
        "similarities": [
            0.9940847158432007,
            0.9904664754867554,
            0.9948357939720154,
            0.993303120136261,
            0.9911304116249084,
            0.9934134483337402,
            0.9943965077400208,
            0.992649495601654,
            0.9938099384307861,
            0.9914247393608093,
            0.9936094880104065,
            0.9938520193099976,
            0.9939093589782715,
            0.9868906736373901,
            0.9925117492675781,
            0.9926594495773315,
            0.9892551302909851,
            0.9948776960372925,
            0.9889026284217834,
            0.9817689657211304
        ]
    },
    "33": {
        "similarity": 0.9973546862602234,
        "body": "    a1, b1, a2, b2, L, R = map(int, input().split())\n    count = 0\n    for k in range((L - b1) // a1 + 1):\n        for l in range((min(R, b2 + (a2 * (R - b2)) // a2) - b2) // a2 + 1):\n            if a1*k+b1==a2*l+b2:\n                count += 1\n    print(count)",
        "result": "timed out",
        "similarities": [
            0.9964011311531067,
            0.9964011311531067,
            0.9950718283653259,
            0.9967561364173889,
            0.9964011311531067,
            0.9964997172355652,
            0.9964768290519714,
            0.9965918660163879,
            0.996365487575531,
            0.987125813961029,
            0.9964011311531067,
            0.9957279562950134,
            0.9970889687538147,
            0.9973546862602234,
            0.9970399737358093,
            0.9964712858200073,
            0.9930867552757263,
            0.9971696138381958,
            0.9970767498016357,
            0.9931626915931702
        ]
    },
    "2498": {
        "similarity": 0.9982861876487732,
        "body": "    N,M = map(int,input().split())\n    a = list(map(int,input().split()))\n    ans = 0\n    for x in range(1,M+1):\n        semi_common = False\n        for k,a_k in enumerate(a):\n            p = (x//a_k) - 0.5\n            if int(p + 0.5) == p:\n                semi_common = True\n                break\n        if semi_common: ans += 1\n    print(ans)",
        "result": "timed out",
        "similarities": [
            0.9963961243629456,
            0.9973337054252625,
            0.9980257153511047,
            0.9975810647010803,
            0.9921949505805969,
            0.9977160096168518,
            0.9974736571311951,
            0.9982861876487732,
            0.9977402091026306,
            0.9982793927192688,
            0.9974643588066101,
            0.9978000521659851,
            0.9966518878936768,
            0.998065173625946,
            0.9973634481430054,
            0.9979571104049683,
            0.9978199005126953,
            0.9981014728546143,
            0.9977673888206482,
            0.9979641437530518
        ]
    },
    "2309": {
        "similarity": 0.9964523315429688,
        "body": "    n = int(input())\n    words = [input().strip() for _ in range(n)]\n    vowels = 'aeiou'\n    count = {}\n    for word in words:\n        word_count = sum(1 for char in word if char in vowels)\n        count[word] = word_count\n    max_vowels = max(count.values())\n    m = 0\n    lyrics = []\n    for i in range(max_vowels):\n        for j in range(i+1, len(words)):\n            if count[words[i]] == i and count[words[j]] == i:\n                lyric = [words[i], words[j]]\n                if all(count[word] == i for word in words[k:] for k in range(2)):\n                    m += 1\n                    lyrics.append([' '.join(lyric), ' '.join(lyric)])\n    print(m)\n    for _ in range(m):\n        print(*lyrics[0])\n        del lyrics[0]",
        "result": "failed: testcase 0",
        "similarities": [
            0.9964523315429688,
            0.9956512451171875,
            0.9958385825157166,
            0.994090735912323,
            0.9949236512184143,
            0.9947676658630371,
            0.9952954649925232,
            0.9849311709403992,
            0.9951257109642029,
            0.9954333901405334,
            0.9946864247322083,
            0.9949778318405151,
            0.9953081011772156,
            0.9946423768997192,
            0.9954179525375366,
            0.9954012632369995,
            0.9958658814430237,
            0.9954888224601746,
            0.9930519461631775,
            0.9946514964103699
        ]
    },
    "1326": {
        "similarity": 0.9945518374443054,
        "body": "    N = int(input())\n    total = 0\n    for k in range(1, N+1):\n        count = 0\n        i = 1\n        while i*i <= k:\n            if k % i == 0:\n                j = k // i\n                count += 2\n                if i != j:\n                    count += 2\n            i += 1\n        total += k * count\n    print(total)",
        "result": "timed out",
        "similarities": [
            0.9807055592536926,
            0.9883432984352112,
            0.9943841695785522,
            0.9929918050765991,
            0.9939008355140686,
            0.9940114617347717,
            0.9940567016601562,
            0.9924280047416687,
            0.9882892966270447,
            0.994403064250946,
            0.9918409585952759,
            0.9937273263931274,
            0.9913601279258728,
            0.9941492676734924,
            0.9937796592712402,
            0.9938350319862366,
            0.9943601489067078,
            0.9945518374443054,
            0.9806880950927734,
            0.9933138489723206
        ]
    },
    "2950": {
        "similarity": 0.9958819150924683,
        "body": "    n = int(input())\n    blocks = list(map(int, input().split()))\n    blocks.sort()\n    ans = 0\n    i = 1\n    for b in blocks:\n        while i <= b:\n            ans += 1\n            i += 1\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9906770586967468,
            0.9903988242149353,
            0.9936864972114563,
            0.995646059513092,
            0.9938880801200867,
            0.9952081441879272,
            0.9948834776878357,
            0.9954984784126282,
            0.9950805306434631,
            0.9954496026039124,
            0.9950524568557739,
            0.9944353699684143,
            0.9934375286102295,
            0.9937506318092346,
            0.9958819150924683,
            0.9958317279815674,
            0.9912769794464111,
            0.993678629398346,
            0.9957286715507507,
            0.990836501121521
        ]
    },
    "1983": {
        "similarity": 0.9967988729476929,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        dp = [1] * n\n        for i in range(1, n):\n            for j in range(i):\n                if a[i] > a[j]:\n                    dp[i] = max(dp[i], dp[j] + 1)\n        print(max(dp))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9948649406433105,
            0.9951770305633545,
            0.993036150932312,
            0.9939917325973511,
            0.9966936707496643,
            0.9967988729476929,
            0.9962624311447144,
            0.9966146349906921,
            0.9967115521430969,
            0.9966844320297241,
            0.9944773316383362,
            0.996785044670105,
            0.9958364367485046,
            0.995440661907196,
            0.9967115521430969,
            0.9936684966087341,
            0.9967988729476929,
            0.9934510588645935,
            0.9965378642082214,
            0.9967115521430969
        ]
    },
    "1767": {
        "similarity": 0.994462251663208,
        "body": "    return sum(i | j for i in a[l:r+1] for j in b[l:r+1])\n\nn = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nprint(max(sum(f(a, b)) for l in range(1, n+1) for r in range(l, n+1)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9936090707778931,
            0.9901111125946045,
            0.9941433668136597,
            0.9932326078414917,
            0.9934607148170471,
            0.9921690225601196,
            0.9869361519813538,
            0.9921844005584717,
            0.9930946826934814,
            0.9943264722824097,
            0.9933347105979919,
            0.994462251663208,
            0.993863046169281,
            0.99437415599823,
            0.9924628734588623,
            0.9944167137145996,
            0.9928175210952759,
            0.9771487712860107,
            0.9943264722824097,
            0.9908649921417236
        ]
    },
    "2382": {
        "similarity": 0.9959253072738647,
        "body": "    N = int(input())\n    S = list(map(int, input().split()))\n    for i in range(N):\n        if sum(S) <= 10**9:\n            return \"Yes\"\n        S.sort()\n        S[-1] //= 2\n        S.append(S.pop(-1) // 2)\n    return \"No\"",
        "result": "failed: testcase 0",
        "similarities": [
            0.9955307841300964,
            0.9941523671150208,
            0.9946447014808655,
            0.9889351725578308,
            0.9953150749206543,
            0.9938294291496277,
            0.9948150515556335,
            0.9910019636154175,
            0.9959253072738647,
            0.9929709434509277,
            0.9955645203590393,
            0.9932592511177063,
            0.9899368286132812,
            0.9942029714584351,
            0.9929695129394531,
            0.9940478801727295,
            0.994421124458313,
            0.9949309825897217,
            0.9936152100563049,
            0.9948357343673706
        ]
    },
    "3907": {
        "similarity": 0.9970474243164062,
        "body": "    n,m = map(int,input().split())\n    w = []\n    for _ in range(m):\n        q,wi = map(int,input().split())\n        w.append(wi)\n    w.sort()\n    ans = 0\n    j = 1\n    for i in range(1,n+1):\n        while j<i and w[j-1]<=i:\n            j += 1\n        if j>=n:\n            break\n        ans += min(i-j+1,w[-1]-w[j-1])\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9952601194381714,
            0.996723473072052,
            0.9964298605918884,
            0.9961477518081665,
            0.9960363507270813,
            0.9965081810951233,
            0.9956992268562317,
            0.9943944215774536,
            0.9964473247528076,
            0.9959616661071777,
            0.9960038065910339,
            0.9970474243164062,
            0.9958480000495911,
            0.9931260943412781,
            0.9963838458061218,
            0.9960983991622925,
            0.9969606995582581,
            0.9957785606384277,
            0.99578857421875,
            0.9911487102508545
        ]
    },
    "3676": {
        "similarity": 0.9933035969734192,
        "body": "    res = [[0]*(C+1) for _ in range(R+1)]\n    for i in range(1, R+1):\n        for j in range(1, C+1):\n            if i == 1 or j == 1:\n                res[i][j] = 1\n            else:\n                res[i][j] = res[i-1][j-1] + (i+j)\n    return res[R][C]",
        "result": "failed: testcase 0",
        "similarities": [
            0.9928035736083984,
            0.9875330924987793,
            0.9863888621330261,
            0.9918732047080994,
            0.9925621747970581,
            0.9830883741378784,
            0.9918417930603027,
            0.9867292046546936,
            0.9869091510772705,
            0.9899673461914062,
            0.9904993176460266,
            0.9923264384269714,
            0.992739737033844,
            0.9914367198944092,
            0.9927850961685181,
            0.9928280711174011,
            0.9917193055152893,
            0.9904335737228394,
            0.9933035969734192,
            0.9873731732368469
        ]
    },
    "3293": {
        "similarity": 0.9956265687942505,
        "body": "    n = int(input())\n    max_profit = 0\n    for _ in range(n):\n        f, p, m, s = map(int, input().split())\n        if s > 0:\n            max_profit += min(s, (m-p))\n    print(max_profit)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9949184060096741,
            0.9949768781661987,
            0.9956265687942505,
            0.9939619302749634,
            0.9946802854537964,
            0.9912502765655518,
            0.9952194690704346,
            0.9943766593933105,
            0.9943239092826843,
            0.9801399111747742,
            0.9954788684844971,
            0.9944829344749451,
            0.9949526786804199,
            0.9950736165046692,
            0.9866965413093567,
            0.9795007109642029,
            0.9955942034721375,
            0.9943655133247375,
            0.9914931058883667,
            0.9935318827629089
        ]
    },
    "3587": {
        "similarity": 0.9965881705284119,
        "body": "    N = int(input())\n    taboos = [input().strip() for _ in range(N)]\n    max_length = 0\n    safe_clue = ''\n    for i in range(2**len(max(taboos, key=len))):\n        clue = bin(i)[2:].zfill(len(max(taboos, key=len)))\n        is_safe = all(clue[i:i+len(s)] not in s for s in taboos)\n        if is_safe and len(clue) > max_length:\n            max_length = len(clue)\n            safe_clue = clue\n    print(-1 if max_length == 0 else safe_clue)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9946994781494141,
            0.9953892230987549,
            0.9952226281166077,
            0.9965881705284119,
            0.9916568398475647,
            0.9954480528831482,
            0.995859682559967,
            0.9948605895042419,
            0.9947750568389893,
            0.9951106905937195,
            0.9957144856452942,
            0.9960861206054688,
            0.9952326416969299,
            0.9924375414848328,
            0.9954512715339661,
            0.9913485646247864,
            0.9934722781181335,
            0.995257556438446,
            0.9933030009269714,
            0.995721697807312
        ]
    },
    "3530": {
        "similarity": 0.9974145293235779,
        "body": "    N = int(input())\n    funs = []\n    for _ in range(N):\n        a, b, t = map(int, input().split())\n        funs.append((a - (t-1)**2*b, t))\n    Q = int(input())\n    for _ in range(Q):\n        T = int(input())\n        total = 0\n        for a, t in sorted(funs, reverse=True):\n            while T >= t:\n                total += a - (t-1)**2\n                T -= t\n        print(total)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9963194131851196,
            0.994456946849823,
            0.9970139265060425,
            0.9967644214630127,
            0.9955719709396362,
            0.9966094493865967,
            0.9963334798812866,
            0.9969724416732788,
            0.9963508248329163,
            0.9945592284202576,
            0.9962859749794006,
            0.9961007833480835,
            0.9943674802780151,
            0.9956585764884949,
            0.9905675649642944,
            0.9974145293235779,
            0.9971235394477844,
            0.9964901804924011,
            0.9954063892364502,
            0.9970698356628418
        ]
    },
    "3900": {
        "similarity": 0.9964095950126648,
        "body": "    n, p = map(int, input().split())\n    agreed = set()\n    for _ in range(n):\n        x, y = map(int, input().split())\n        agreed.add(x)\n        agreed.add(y)\n    return sum((len(agreed) - k) * (n - len(agreed)) // k for k in range(min(p, n)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9954968690872192,
            0.9957441091537476,
            0.9960017800331116,
            0.9959666728973389,
            0.996130108833313,
            0.9931809306144714,
            0.9909154176712036,
            0.9928014874458313,
            0.9944039583206177,
            0.9933445453643799,
            0.9957178831100464,
            0.9942750334739685,
            0.9934368133544922,
            0.9964095950126648,
            0.9963774681091309,
            0.9954553246498108,
            0.9928180575370789,
            0.9958695769309998,
            0.9932019114494324,
            0.9939233064651489
        ]
    },
    "3996": {
        "similarity": 0.996354341506958,
        "body": "    k = int(input())\n    a = [int(i) for i in input().split()]\n    n = 1\n    for ai in a:\n        n *= ai\n    p = 2 ** ((n + 1) // 2)\n    q = 2 ** ((n - 1) // 2)\n    print(str(p % (10**9 + 7)) + '/' + str(q % (10**9 + 7)))",
        "result": "timed out",
        "similarities": [
            0.996354341506958,
            0.994350016117096,
            0.9947455525398254,
            0.9951673746109009,
            0.9939583539962769,
            0.9918337464332581,
            0.9911249876022339,
            0.9919394254684448,
            0.9950433373451233,
            0.995005190372467,
            0.9929528832435608,
            0.9940841197967529,
            0.9917477965354919,
            0.9956073760986328,
            0.9956821799278259,
            0.9951769113540649,
            0.9946831464767456,
            0.9942622184753418,
            0.9946323037147522,
            0.9910677671432495
        ]
    },
    "3276": {
        "similarity": 0.996177077293396,
        "body": "    N, M = map(int, input().split())\n    grid = [list(input()) for _ in range(N)]\n    for i in range(3):\n        for j in range(3):\n            if grid[i][j] != 'W':\n                return \"NO\"\n    for i in range(N - 2):\n        for j in range(M - 2):\n            if set(grid[i][j:j+3]) == {'R', 'G', 'B'}:\n                return \"YES\"\n    return \"NO\"",
        "result": "failed: testcase 0",
        "similarities": [
            0.9928382039070129,
            0.996177077293396,
            0.9950806498527527,
            0.9946383237838745,
            0.9948240518569946,
            0.9960557222366333,
            0.9954648613929749,
            0.9946415424346924,
            0.9927235841751099,
            0.9952279329299927,
            0.9925144910812378,
            0.996118426322937,
            0.9951830506324768,
            0.9908382892608643,
            0.9941802024841309,
            0.9949166178703308,
            0.9920796751976013,
            0.9946590065956116,
            0.9956356883049011,
            0.996113657951355
        ]
    },
    "3834": {
        "similarity": 0.9966635704040527,
        "body": "    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    count = 0\n    for i in range(1<<n*m):\n        flag = True\n        new_a = [[a[j][i%m] if ((j << m) + i)%((n*m))<k else a[j][i%\u092e] for i in range(m)] for j in range(n)]\n        for j in range(n):\n            for k in range(m):\n                if new_a[j][k] != a[j][k]:\n                    flag = False\n                    break\n            if not flag:\n                break\n        if flag:\n            return count + 1\n    return -1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9951547384262085,
            0.9964369535446167,
            0.9966635704040527,
            0.9950957298278809,
            0.9950299859046936,
            0.9938358664512634,
            0.9956647753715515,
            0.993851900100708,
            0.9960249066352844,
            0.9934617877006531,
            0.9952254295349121,
            0.9948128461837769,
            0.9932941794395447,
            0.9959412813186646,
            0.9954044818878174,
            0.9953850507736206,
            0.9954487681388855,
            0.9957493543624878,
            0.9890059232711792,
            0.99565589427948
        ]
    },
    "3012": {
        "similarity": 0.9948180317878723,
        "body": "    a11, a12, a21, a22, N = map(int, input().split())\n    MOD = 1000000007\n    ans = 1\n    for _ in range(N):\n        if _ % 3 == 0:\n            ans = (ans * (a11 + a22)) % MOD\n        elif _ % 3 == 1:\n            ans = (ans * (2 * a11 * a21)) % MOD\n        else:\n            ans = (ans * ((a11 + a12) * (a21 + a22))) % MOD\n    print(ans)",
        "result": "timed out",
        "similarities": [
            0.9890407919883728,
            0.9946672320365906,
            0.9896734356880188,
            0.9832257628440857,
            0.9930757284164429,
            0.9943854808807373,
            0.9925197958946228,
            0.9942104816436768,
            0.993585467338562,
            0.9866877198219299,
            0.9937657117843628,
            0.9922850728034973,
            0.9945461750030518,
            0.9925199747085571,
            0.9934818148612976,
            0.9927401542663574,
            0.9935905337333679,
            0.9941766858100891,
            0.9929545521736145,
            0.9948180317878723
        ]
    },
    "3745": {
        "similarity": 0.9956704378128052,
        "body": "    n,m = map(int, input().split())\n    edges = [map(int, input().split()) for _ in range(m)]\n    s = ['a' if i == 1 else 'b' if (i-1) % 3 == 0 else 'c' for i in range(1,n+1)]\n    s_set = set(s)\n    check_edges = set()\n    for u,v in edges:\n        if s[u-1] != s[v-1]:\n            if abs(ord(s[u-1])-ord(s[v-1])) == 1 or (s[u-1] == 'a' and s[v-1] == 'c') or (s[u-1] == 'b' and s[v-1] == 'c'):\n                check_edges.add((u,v))\n            else:\n                print(\"No\")\n                return\n    if len(check_edges) != m:\n        print(\"Yes\")\n        print(''.join(s))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9916500449180603,
            0.9929802417755127,
            0.995447039604187,
            0.9942213296890259,
            0.9917837381362915,
            0.9943272471427917,
            0.9933335185050964,
            0.9930299520492554,
            0.9946523904800415,
            0.9956704378128052,
            0.9921727776527405,
            0.9940559267997742,
            0.9946111440658569,
            0.9913209676742554,
            0.9953266978263855,
            0.9951058626174927,
            0.9941887259483337,
            0.9925220012664795,
            0.9927118420600891,
            0.9946305155754089
        ]
    },
    "3028": {
        "similarity": 0.9951971769332886,
        "body": "    n,m,p = map(int,input().split())\n    b = [list(map(int,input().split())) for _ in range(n)]\n    p -= 1\n    r,c = divmod(p-1,n*m)\n    ans = []\n    while True:\n        k = c\n        for i in range(n):\n            for j in range(m):\n                if (i+r)%n==0 or (j+c)%m==0: b[i][j] += 1\n                else: b[i][j] = (b[i][j]+1)%p\n        for i in range(n*m):\n            ans.append(b[b//m][b%m]+1)\n            b = ((b+r)%n*m+(c+m)%m)//(n*m)\n        if len(set(map(tuple,b)))==1: \n            return print(len(ans)) + '\\n' + ' '.join(map(str,ans))\n    return -1",
        "result": "failed: testcase 0",
        "similarities": [
            0.9926525950431824,
            0.9950636029243469,
            0.9951183199882507,
            0.9934786558151245,
            0.9937103986740112,
            0.9929186105728149,
            0.9949150085449219,
            0.9914175271987915,
            0.9933873414993286,
            0.9945384860038757,
            0.989436686038971,
            0.9943781495094299,
            0.995086669921875,
            0.9912739992141724,
            0.977928876876831,
            0.9947131276130676,
            0.9928979277610779,
            0.9944116473197937,
            0.9938501119613647,
            0.9951971769332886
        ]
    },
    "3196": {
        "similarity": 0.9967906475067139,
        "body": "    N, M = map(int, input().split())\n    roads = set()\n    for _ in range(M):\n        A, B = map(int, input().split())\n        roads.add((A, B))\n        if (B, A) not in roads:\n            roads.add((B, A))\n    start, end = 1, 2\n    paths = []\n        if town == end:\n            paths.append(path)\n            return\n        for neighbor in [n for n in range(1, N+1) if (town, n) in roads and n not in path]:\n            dfs(neighbor, path + [neighbor])\n    dfs(start, [start])\n    return len(paths) if paths else \"inf\"",
        "result": "failed: testcase 0",
        "similarities": [
            0.9915933012962341,
            0.9956696033477783,
            0.9962182641029358,
            0.9966610670089722,
            0.996489405632019,
            0.9967906475067139,
            0.9947808980941772,
            0.9962414503097534,
            0.9949721097946167,
            0.9942927956581116,
            0.9960548877716064,
            0.996139645576477,
            0.9956129193305969,
            0.9953209757804871,
            0.9959042072296143,
            0.9936709403991699,
            0.9963567852973938,
            0.995763897895813,
            0.9964609742164612,
            0.9935098886489868
        ]
    },
    "3405": {
        "similarity": 0.9960275888442993,
        "body": "    X = str(int(1000*X))\n    res = []\n    for i in range(1, 10**8):\n        num = str(i)\n        if int(num[:-len(X[:-1])]) * float(X) == i:\n            res.append(int(num))\n    if not res:\n        print(\"No solution\")\n    else:\n        for n in sorted(res):\n            print(n)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9938613772392273,
            0.9880332946777344,
            0.9948300123214722,
            0.9933604001998901,
            0.9930959939956665,
            0.9931772947311401,
            0.9960275888442993,
            0.9947006702423096,
            0.9929181337356567,
            0.9862282276153564,
            0.9959706664085388,
            0.9915525317192078,
            0.9951701164245605,
            0.9946473836898804,
            0.9948766827583313,
            0.9954143166542053,
            0.994097888469696,
            0.99493408203125,
            0.9950353503227234,
            0.9960256814956665
        ]
    },
    "3126": {
        "similarity": 0.9967225790023804,
        "body": "    n, t = map(int, input().split())\n    p = list(map(int, input().split()))\n    c = int(input())\n    for _ in range(c):\n        x = input()\n        if x[0] == '+':\n            p.append(int(x[2:]))\n        elif x[0] == '-':\n            p.remove(int(x[2:]))\n        else:\n            t = int(x[2:])\n    jumps = {}\n    for i, pos in enumerate(sorted(p)):\n        jumps[pos] = (i + 1)\n    res = []\n    for c in range(n):\n        jump = sum(1 + max(abs(pos - t) - c for pos in p))\n        res.append(str(jump))\n    print('\\n'.join(res))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960243701934814,
            0.9954895377159119,
            0.996008038520813,
            0.9960060119628906,
            0.9960709810256958,
            0.9954192638397217,
            0.9959475994110107,
            0.9964569807052612,
            0.9964502453804016,
            0.9960349202156067,
            0.9965221881866455,
            0.9943094849586487,
            0.9961650371551514,
            0.9948776960372925,
            0.9930413961410522,
            0.9946774840354919,
            0.9929574728012085,
            0.9944616556167603,
            0.9963127970695496,
            0.9967225790023804
        ]
    },
    "3279": {
        "similarity": 0.9966839551925659,
        "body": "    n = int(input())\n    vbars = [list(map(int, input().split())) for _ in range(n)]\n    hbars = [list(map(int, input().split())) for _ in range(n)]\n    resv = ['' for _ in range(n+1)]\n    resh = ['' for _ in range(n+1)]\n    for i in range(n):\n        for j in range(n+1):\n            if vbars[i][j-1] > 0:\n                resv[j] += '1'\n            else:\n                resv[j] += '0'\n    for j in range(n+1):\n        for i in range(n):\n            if hbars[i][j-1] > 0:\n                resh[i] += '1'\n            else:\n                resh[i] += '0'\n    for s in resv + resh:\n        print(s)",
        "result": "failed: testcase 0",
        "similarities": [
            0.991320788860321,
            0.99504554271698,
            0.9959096312522888,
            0.9947481751441956,
            0.9949541687965393,
            0.9960752725601196,
            0.9964393973350525,
            0.9951705932617188,
            0.9961742758750916,
            0.9953581094741821,
            0.9944139122962952,
            0.9966839551925659,
            0.996433436870575,
            0.994730532169342,
            0.9925462603569031,
            0.9959582090377808,
            0.9930676817893982,
            0.9952607750892639,
            0.9949170351028442,
            0.9965380430221558
        ]
    },
    "3599": {
        "similarity": 0.9973116517066956,
        "body": "    t, n = map(int, input().split())\n    breaks = list(map(int, input().split()))\n    stages = [0] * n\n    for i in range(1, n):\n        if breaks[i-1] <= breaks[i]:\n            stages[i-1] += 2\n            stages[i] -= 2\n    for i in range(n):\n        if stages[i] < 0:\n            stages[i] = 0\n    print(*stages)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960005879402161,
            0.9958708882331848,
            0.9970873594284058,
            0.9966941475868225,
            0.9962798953056335,
            0.9965081810951233,
            0.9951623678207397,
            0.9965124726295471,
            0.996423602104187,
            0.9953247904777527,
            0.9922728538513184,
            0.9958869814872742,
            0.9973116517066956,
            0.9970422387123108,
            0.9948843121528625,
            0.9968093037605286,
            0.9967976808547974,
            0.9966000914573669,
            0.9972079396247864,
            0.9944342374801636
        ]
    },
    "3687": {
        "similarity": 0.9965952634811401,
        "body": "    n, q, s = map(int, input().split())\n    queues = [[] for _ in range(q)]\n    queue_map = [0] * q\n    for i in range(s):\n        queue_map[i] = int(input()) - 1\n    for i in range(q):\n        c = int(input())\n        for j in range(n):\n            d, *a = map(int, input().split())\n            if not all(a[i] <= c - len(queues[queue_map[i]]) for i in range(s)):\n                return \"impossible\"\n    for i in range(q):\n        while queues[i]:\n            if sum(a[j] > 0 for j in range(len(a))) != 0:\n                return \"impossible\"\n    print(\"possible\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9950313568115234,
            0.9957605600357056,
            0.9961994886398315,
            0.9937204122543335,
            0.9957996010780334,
            0.9941938519477844,
            0.9965060353279114,
            0.9952471852302551,
            0.995662271976471,
            0.9932389855384827,
            0.9951550364494324,
            0.9948192238807678,
            0.9965952634811401,
            0.9963905811309814,
            0.9964699149131775,
            0.9955347776412964,
            0.993216872215271,
            0.9946419596672058,
            0.9927171468734741,
            0.9934481382369995
        ]
    },
    "3864": {
        "similarity": 0.9940710663795471,
        "body": "    n = int(input())\n    res = [int((2**n + 1)//3) % 998244353 for _ in range(n)]\n    print(*res, sep='\\n')",
        "result": "timed out",
        "similarities": [
            0.9934471845626831,
            0.9778242707252502,
            0.9921576976776123,
            0.9926832318305969,
            0.9923962950706482,
            0.9884769916534424,
            0.9940710663795471,
            0.9935836791992188,
            0.9926760792732239,
            0.9909459352493286,
            0.9933812022209167,
            0.9908425211906433,
            0.9884983897209167,
            0.9927395582199097,
            0.9907638430595398,
            0.9926306009292603,
            0.9901409149169922,
            0.9912187457084656,
            0.984470546245575,
            0.9930482506752014
        ]
    },
    "3504": {
        "similarity": 0.9972084760665894,
        "body": "    D, S = map(int, input().split())\n    sensors = []\n    for _ in range(S):\n        x1, x2, y = map(int, input().split())\n        sensors.append((x1, x2, y))\n    droplets = []\n    for _ in range(D):\n        x, y = map(int, input().split())\n        droplets.append((x, y))\n    for x, y in droplets:\n        hit = False\n        for sensor in sensors:\n            if sensor[0] <= x <= sensor[1]:\n                print(y)\n                hit = True\n                break\n        if not hit:\n            print(0)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9940366148948669,
            0.9968169331550598,
            0.9953133463859558,
            0.990836501121521,
            0.9937586784362793,
            0.9916711449623108,
            0.9960664510726929,
            0.9956713318824768,
            0.9968794584274292,
            0.9970079064369202,
            0.9927964806556702,
            0.9960023760795593,
            0.9958879351615906,
            0.9970685839653015,
            0.9961187243461609,
            0.9964447021484375,
            0.9972084760665894,
            0.9961034655570984,
            0.9963874816894531,
            0.9962479472160339
        ]
    },
    "3451": {
        "similarity": 0.9963750243186951,
        "body": "    n,k = map(int,input().split())\n    s = input()\n    c = [int(input()) for _ in range(n)]\n    ans = 0\n    open_count = sum(1 for ch in s if ch == '(')\n    while k > 0 and open_count:\n        if c[s.index('(')] <= -c[s.rindex(')')]:\n            ans += c[s.index('(')]\n            s = s[:s.index('(')] + ')' + s[s.index('(')+1:]\n            open_count -= 1\n        else:\n            ans += c[s.rindex(')')]\n            s = s[:s.rindex(')')] + '(' + s[s.rindex(')')+1:]\n            open_count += 1\n        k -= 1\n    if open_count:\n        ans = '?'\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9927853941917419,
            0.9947746992111206,
            0.9942882061004639,
            0.9950082898139954,
            0.9926629662513733,
            0.9953113198280334,
            0.9955159425735474,
            0.9951778054237366,
            0.9934064149856567,
            0.9928514361381531,
            0.9960634112358093,
            0.9963750243186951,
            0.9959362745285034,
            0.994551420211792,
            0.9947009682655334,
            0.9951328635215759,
            0.9951908588409424,
            0.9946237206459045,
            0.9944757223129272,
            0.9960265159606934
        ]
    },
    "3156": {
        "similarity": 0.9970089793205261,
        "body": "    N = int(input())\n    K = int(input())\n    stores = {}\n    for _ in range(K):\n        i, s = map(str, input().split())\n        if i not in stores:\n            stores[i] = set()\n        stores[i].add(s)\n    M = int(input())\n    bought = [input() for _ in range(M)]\n    for i in range(M - 1):\n        for j in {k: v for k, v in stores.items()}.items():\n            if all(b for b in bought[i+1:] if b in j[1]):\n                if len({j[0]}) == 1:\n                    return \"unique\"\n                else:\n                    return \"ambiguous\"\n    return \"impossible\"",
        "result": "failed: testcase 0",
        "similarities": [
            0.9968931078910828,
            0.9960634112358093,
            0.994162917137146,
            0.9960344433784485,
            0.9927831888198853,
            0.9966973066329956,
            0.9969478249549866,
            0.9964990019798279,
            0.9966683983802795,
            0.9966089129447937,
            0.9960774779319763,
            0.9966278076171875,
            0.9961714744567871,
            0.9961268901824951,
            0.9962429404258728,
            0.9970089793205261,
            0.9964613914489746,
            0.9967750906944275,
            0.9968448281288147,
            0.9963482618331909
        ]
    },
    "3697": {
        "similarity": 0.9977272748947144,
        "body": "    n, k, m, a = map(int, input().split())\n    g = list(map(int, input().split()))\n    r = [3] * n\n    for i in range(n):\n        votes = sum(1 for j in range(a) if g[j] == i+1)\n        if votes >= k:\n            r[i] = 1\n        elif any(votes + (n-1-j) <= k - 1 for j in range(m-a)):\n            r[i] = 2\n    print(' '.join(map(str, r)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9971951842308044,
            0.9958754181861877,
            0.9972924590110779,
            0.9976008534431458,
            0.9960554242134094,
            0.9967745542526245,
            0.9977257251739502,
            0.9966254234313965,
            0.9975842833518982,
            0.9977272748947144,
            0.9969220757484436,
            0.9975289702415466,
            0.9967650175094604,
            0.9974957704544067,
            0.9973090291023254,
            0.9957791566848755,
            0.9970479607582092,
            0.9976994395256042,
            0.996573805809021,
            0.9939008355140686
        ]
    },
    "3647": {
        "similarity": 0.9843641519546509,
        "body": "from collections import deque\n\n    if grid[y][x] == '#':\n        return float('inf')\n    if grid[y][x] == '_':\n        return len(deque([(x, y)])) + 1\n    return 0\n\nC, R = map(int, input().split())\ngrid = [list(input()) for _ in range(R)]\nfor i in range(C):\n    for j in range(R):\n        if grid[j][i] == 'M':\n            goal_x, goal_y = i, j\n        elif grid[j][i] == '_':\n            queue = deque([(i, j, 0)])\n            while queue:\n                x, y, moves = queue.popleft()\n                for dx, dy in [(1, 0), (-1, 0), (0, 1), (0, -1)]:\n                    nx, ny = x + dx, y + dy\n                    if (0 <= nx < C) and (0 <= ny < R):\n                        if grid[ny][nx] == '_':\n                            queue.append((nx, ny, moves + len(deque([(nx, ny)]))))\n                        elif grid[ny][nx] in ['.', '#']:\n                            print(moves, end=' ')\n                            break\n            else:\n                print(-1, end=' ')\n        else:\n            print(dfs(i, j), end=' ')\nprint()",
        "result": "failed: testcase 0",
        "similarities": [
            0.9834685325622559,
            0.9831761717796326,
            0.9823658466339111,
            0.9828121662139893,
            0.9833601117134094,
            0.983086347579956,
            0.8720158934593201,
            0.9802958965301514,
            0.982875406742096,
            0.982530415058136,
            0.9820637106895447,
            0.9825531840324402,
            0.9805193543434143,
            0.9824605584144592,
            0.9820259809494019,
            0.9817758202552795,
            0.9837206602096558,
            0.8720160126686096,
            0.9843641519546509,
            0.9833269715309143
        ]
    },
    "3699": {
        "similarity": 0.9944630861282349,
        "body": "    a_x, a_y, b_x, b_y, t_x, t_y = map(int, input().split())\n    n = int(input())\n    bottles = [(int(x), int(y)) for _ in range(n)]\n    bottles.sort(key=lambda x: ((x[0]-a_x)**2+(x[1]-a_y)**2)+((x[0]-b_x)**2+(x[1]-b_y)**2))\n    adil_path = 0\n    bera_path = 0\n    for i in range(n):\n        dx = (a_x-b_x)*(bottles[i][0]-t_x) + (a_y-b_y)*(bottles[i][1]-t_y)\n        dy = ((a_x-t_x)*bottles[i][0] + (a_y-t_y)*bottles[i][1]) - dx\n        adil_path += abs(dx) + max(0, abs(dy))\n        dx = (b_x-a_x)*(bottles[i][0]-t_x) + (b_y-a_y)*(bottles[i][1]-t_y)\n        dy = ((b_x-t_x)*bottles[i][0] + (b_y-t_y)*bottles[i][1]) - dx\n        bera_path += abs(dx) + max(0, abs(dy))\n    print(adin_path+bera_path)",
        "result": "failed: testcase 0",
        "similarities": [
            0.993039608001709,
            0.9926072955131531,
            0.9942843914031982,
            0.9919140338897705,
            0.9881917238235474,
            0.9940661191940308,
            0.993607759475708,
            0.9893437623977661,
            0.9883504509925842,
            0.9927085041999817,
            0.9850412011146545,
            0.9933125376701355,
            0.9944630861282349,
            0.9923434853553772,
            0.9874551892280579,
            0.9920740723609924,
            0.9922254681587219,
            0.9930319786071777,
            0.9932841062545776,
            0.9914807677268982
        ]
    },
    "3145": {
        "similarity": 0.9950128197669983,
        "body": "    x, a, b = map(int, input().split())\n    d = set(input())\n    count = 0\n    for i in range(a, b+1):\n        if all(c in d for c in str(i)):\n            if not i % x:\n                count += 1\n    print(count)",
        "result": "timed out",
        "similarities": [
            0.994960367679596,
            0.9908188581466675,
            0.9936665892601013,
            0.9934921264648438,
            0.9933954477310181,
            0.9949210286140442,
            0.9949210286140442,
            0.9946638345718384,
            0.9916931986808777,
            0.9950128197669983,
            0.9935660362243652,
            0.9946607351303101,
            0.9884800314903259,
            0.9930582642555237,
            0.9944567680358887,
            0.994828999042511,
            0.9808762073516846,
            0.9948570132255554,
            0.9947397112846375,
            0.9949311017990112
        ]
    },
    "3795": {
        "similarity": 0.9898468852043152,
        "body": "    n = int(input())\n    d = int(input())\n    e = int(input())\n    r = n\n    for i in [100, 50, 20, 10, 5]:\n        r -= min(r // i * i, i) if i < d else min((r - (d - r % d)) // i * i, i)\n    for i in [200, 100, 50, 20, 10]:\n        r -= min(r // i * i, i)\n    return r",
        "result": "failed: testcase 0",
        "similarities": [
            0.984507143497467,
            0.9858050346374512,
            0.9872928261756897,
            0.9841060638427734,
            0.9865679740905762,
            0.9883579611778259,
            0.9898468852043152,
            0.9775430560112,
            0.9619341492652893,
            0.9818581342697144,
            0.9859799742698669,
            0.9810855388641357,
            0.9769998788833618,
            0.9750898480415344,
            0.9865419268608093,
            0.968713641166687,
            0.9897264242172241,
            0.9881163239479065,
            0.9891904592514038,
            0.9885041117668152
        ]
    },
    "3353": {
        "similarity": 0.9978843331336975,
        "body": "    P, R, L = map(int, input().split())\n    graph = {}\n    for _ in range(L):\n        E1, E2 = map(int, input().split())\n        if E1 not in graph:\n            graph[E1] = []\n        if E2 not in graph:\n            graph[E2] = []\n        graph[E1].append(E2)\n        graph[E2].append(E1)\n    visited = set()\n    queue = [(-2, 0)]\n    while queue:\n        bank, time = queue.pop(0)\n        for neighbor in graph.get(bank, []):\n            if neighbor not in visited:\n                visited.add(neighbor)\n                queue.append((neighbor, time + 1))\n    if len(visited) == P + 2:\n        print(len(queue) - 1)\n    else:\n        print(P - (len(visited) - 2))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9975572228431702,
            0.9961625933647156,
            0.9969445466995239,
            0.9975681304931641,
            0.9950388669967651,
            0.9976263642311096,
            0.9962753653526306,
            0.997100830078125,
            0.9978843331336975,
            0.9976068139076233,
            0.9972212910652161,
            0.9969506859779358,
            0.9971821308135986,
            0.9968225359916687,
            0.9967243075370789,
            0.9956092834472656,
            0.9965315461158752,
            0.9969351887702942,
            0.9970691204071045,
            0.9971630573272705
        ]
    },
    "3065": {
        "similarity": 0.9952245354652405,
        "body": "    N = int(input())\n    L = int(input())\n    walk = list(map(int, input().split()))\n    neighbors = [[] for _ in range(N)]\n    for i in range(N):\n        n_i = int(input())\n        neighbors[i] = list(map(int, [0]+[int(x) for x in input().split()]))\n    p_success = 1\n    for i in range(L-1):\n        u = walk[i]\n        v = walk[i+1]\n        if u != v:\n            p_success *= (2/neighbors[u].count(v))\n    return round(1-p_success,6)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9927825927734375,
            0.9927334189414978,
            0.9943464994430542,
            0.994276762008667,
            0.9912540912628174,
            0.9935919046401978,
            0.9952245354652405,
            0.9936466217041016,
            0.9890326261520386,
            0.9931458234786987,
            0.9911627769470215,
            0.9929553866386414,
            0.9874521493911743,
            0.994515061378479,
            0.9785967469215393,
            0.9942249655723572,
            0.9908896088600159,
            0.9945640563964844,
            0.9892576336860657,
            0.993620753288269
        ]
    },
    "3250": {
        "similarity": 0.9954037070274353,
        "body": "    b, d = map(int, input().split())\n    for m in range(1, 63):\n        f = lambda n: sum((n // (b ** i)) % b for i in range(m))\n        if all(f(n) % d == 0 if n % d == 0 else f(n) % d != 0 for n in range(b)):\n            return \"yes\"\n    return \"no\"",
        "result": "failed: testcase 0",
        "similarities": [
            0.9929737448692322,
            0.9946824908256531,
            0.9954037070274353,
            0.9893618226051331,
            0.9841907024383545,
            0.9941096901893616,
            0.9941420555114746,
            0.9930623769760132,
            0.9899636507034302,
            0.9887928366661072,
            0.9903026223182678,
            0.9921938180923462,
            0.9921029806137085,
            0.9919003844261169,
            0.9934526085853577,
            0.9941824674606323,
            0.9947670698165894,
            0.9945088624954224,
            0.9903658628463745,
            0.9933608174324036
        ]
    },
    "3306": {
        "similarity": 0.9957281351089478,
        "body": "    N, M = map(int, input().split())\n    calls = [0]\n    for _ in range(N):\n        P, C = map(int, input().split())\n        calls.append(calls[-1] + C)\n    return min((calls[i+1] - calls[i]) // 2 for i in range(len(calls) - 1))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9855090975761414,
            0.9951398968696594,
            0.9947910308837891,
            0.9921764731407166,
            0.9954527616500854,
            0.9907658100128174,
            0.9906271696090698,
            0.9918375611305237,
            0.9929314851760864,
            0.9957281351089478,
            0.9893521666526794,
            0.9950652122497559,
            0.9942521452903748,
            0.9920180439949036,
            0.9944283366203308,
            0.9947049021720886,
            0.9902300834655762,
            0.9923948049545288,
            0.9927363991737366,
            0.9924489855766296
        ]
    },
    "3970": {
        "similarity": 0.9982832074165344,
        "body": "    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n and a[j] <= a[i] * k:\n            j += 1\n        res = max(res, j - i)\n        i = j\n    print(res)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9964429140090942,
            0.9969482421875,
            0.9971335530281067,
            0.9960627555847168,
            0.9967035055160522,
            0.9978382587432861,
            0.9968386292457581,
            0.9978830218315125,
            0.9980635643005371,
            0.9982832074165344,
            0.9982167482376099,
            0.9982832074165344,
            0.996442973613739,
            0.9969350099563599,
            0.9960147738456726,
            0.9972829222679138,
            0.9980147480964661,
            0.9969578981399536,
            0.997674822807312,
            0.9971445798873901
        ]
    },
    "3655": {
        "similarity": 0.9976309537887573,
        "body": "    W, H = map(int, input().split())\n    robot = [list(map(int, input().split())) for _ in range(H)]\n    floor = [list(map(int, input().split()))[:W]] * H\n    candidates = []\n    max_matches = 0\n    for y in range(H):\n        for x in range(W):\n            matches = sum(a == b for a, b in zip(robot[y], floor[y][x:x+W]))\n            if matches > max_matches:\n                max_matches = matches\n                candidates = [(x, y)]\n            elif matches == max_matches:\n                candidates.append((x, y))\n    return '\\n'.join(map(str, sorted(candidates)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9965824484825134,
            0.9961748719215393,
            0.9952940940856934,
            0.9969686269760132,
            0.9975022077560425,
            0.9951395988464355,
            0.995333731174469,
            0.9961511492729187,
            0.9970285296440125,
            0.9974109530448914,
            0.9965286254882812,
            0.995672345161438,
            0.9971610903739929,
            0.9961251616477966,
            0.9966753721237183,
            0.9961966276168823,
            0.9975358247756958,
            0.9976309537887573,
            0.9973333477973938,
            0.9953385591506958
        ]
    },
    "3589": {
        "similarity": 0.9981585144996643,
        "body": "    L, R = map(int, input().split())\n    res = [0] * 10\n    for x in range(L, R+1):\n        d = 1\n        while x:\n            d *= (x % 10)\n            x //= 10\n        res[d % 10] += 1\n    print(*res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9980517029762268,
            0.9976447224617004,
            0.9966484904289246,
            0.9964797496795654,
            0.9974383115768433,
            0.9972688555717468,
            0.9974290728569031,
            0.9965629577636719,
            0.9980486035346985,
            0.9974018931388855,
            0.9966801404953003,
            0.9970088601112366,
            0.9975587725639343,
            0.9975088238716125,
            0.9981585144996643,
            0.9978483319282532,
            0.9969907999038696,
            0.9949720501899719,
            0.9975543022155762,
            0.9981429576873779
        ]
    },
    "3257": {
        "similarity": 0.9964553713798523,
        "body": "import math\n\n    a, b, c = map(float, input().split())\n    s = (a + b + c) / 2\n    area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    if area > 0:\n        return float(area)\n    else:\n        return -1",
        "result": "failed: testcase 0",
        "similarities": [
            0.995906412601471,
            0.9956472516059875,
            0.9937507510185242,
            0.9954673647880554,
            0.9964553713798523,
            0.9953734874725342,
            0.9955891966819763,
            0.9933481812477112,
            0.9949783682823181,
            0.9954605102539062,
            0.9957433342933655,
            0.9931398630142212,
            0.9910678863525391,
            0.9961672425270081,
            0.9960948824882507,
            0.9922611713409424,
            0.9963545799255371,
            0.9939101338386536,
            0.9920651316642761,
            0.9950017333030701
        ]
    },
    "3927": {
        "similarity": 0.9951772093772888,
        "body": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nk = 0\nm = sum(a) // 2\nfor i in range(n):\n    if a[i] <= m:\n        k += 1\nprint(k)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9919058084487915,
            0.9937101006507874,
            0.9921737313270569,
            0.9951772093772888,
            0.9933905601501465,
            0.9916056394577026,
            0.9934999346733093,
            0.9902311563491821,
            0.9939481019973755,
            0.9948738813400269,
            0.9944369792938232,
            0.9924125671386719,
            0.9940763115882874,
            0.995141863822937,
            0.9944087862968445,
            0.9930632710456848,
            0.9948049783706665,
            0.9925485849380493,
            0.9926130175590515,
            0.9898170828819275
        ]
    },
    "3319": {
        "similarity": 0.997186541557312,
        "body": "n = int(input())\nnx, ny, nz = map(int, input().split())\nplanets = []\nfor _ in range(n):\n    m, x, y, z, vx, vy, vz = map(int, input().split())\n    planets.append((m, (x, y, z), (vx, vy, vz)))\nplanets.sort(key=lambda p: (p[0], *p[1]))\np = 1\ncollisions = []\nwhile True:\n    new_planets = []\n    for i in range(len(planets)):\n        m, loc, vel = planets[i]\n        x, y, z = loc\n        vx, vy, vz = vel\n        next_loc = ((x + vx) % nx, (y + vy) % ny, (z + vz) % nz)\n        for j in range(len(planets)):\n            if i != j:\n                m2, loc2, vel2 = planets[j]\n                x2, y2, z2 = loc2\n                vx2, vy2, vz2 = vel2\n                if next_loc == loc2:\n                    new_mass = m + m2\n                    new_vel = ((vx + vx2) // 2, (vy + vy2) // 2, (vz + vz2) // 2)\n                    collisions.append((new_mass, next_loc, new_vel))\n                    planets[i] = (new_mass, loc, new_vel)\n                    break\n        else:\n            new_planets.append((m, loc, vel))\n    if len(new_planets) == p:\n        break\n    p += 1\nplanets.sort(key=lambda p: (p[0], *p[1]))\nprint(p)\nfor i, p in enumerate(planets):\n    print(f\"P{i}: {p[0]} {p[1][0]} {p[1][1]} {p[1][2]}\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.996823251247406,
            0.9962884187698364,
            0.9971263408660889,
            0.9969856142997742,
            0.9965028166770935,
            0.9961957335472107,
            0.9970422387123108,
            0.9961409568786621,
            0.997186541557312,
            0.9939050078392029,
            0.9963136911392212,
            0.9967067241668701,
            0.9970062971115112,
            0.9970887899398804,
            0.9967646598815918,
            0.9966455101966858,
            0.9966619610786438,
            0.9964621663093567,
            0.995215654373169,
            0.991979718208313
        ]
    },
    "3009": {
        "similarity": 0.996060848236084,
        "body": "    n = int(input())\n    lamps = []\n    for _ in range(n):\n        x, y, e = map(int, input().split())\n        lamps.append((x, y, e))\n    inside_energy = 0\n    outside_energy = 0\n    min_length = float('inf')\n    for i in range(n):\n        for j in range(i+1, n):\n            x1, y1, e1 = lamps[i]\n            x2, y2, e2 = lamps[j]\n            if (abs(x1-x2)+abs(y1-y2))**0.5 > 2:\n                break\n            dx = abs(x1-x2)\n            dy = abs(y1-y2)\n            inside_energy += min(e1,e2) * max(dx,dy)\n            outside_energy += abs(e1-e2) * min(dx,dy)\n            if inside_energy + outside_energy == 0:\n                min_length = min(min_length, (dx+dy)**0.5)\n    if min_length == float('inf'):\n        print(\"IMPOSSIBLE\")\n    else:\n        print(f\"{min_length:.6f}\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9948768615722656,
            0.9958057403564453,
            0.9953523278236389,
            0.9828338623046875,
            0.9957337975502014,
            0.9953413605690002,
            0.9952888488769531,
            0.9957532286643982,
            0.9953321218490601,
            0.9954289197921753,
            0.996060848236084,
            0.9957669973373413,
            0.9868213534355164,
            0.9946189522743225,
            0.9940146207809448,
            0.994075357913971,
            0.9949736595153809,
            0.9955891370773315,
            0.9923202991485596,
            0.9954788088798523
        ]
    },
    "3896": {
        "similarity": 0.996482253074646,
        "body": "    n = int(input())\n    x = int(input(), 2)\n    res = sum(((x >> i) & 1) * ((~x >> (n - 1 - i)) & 1) for i in range(n))\n    print(res % 1000000007)",
        "result": "failed: testcase 0",
        "similarities": [
            0.99176025390625,
            0.9953331351280212,
            0.9944833517074585,
            0.9963433146476746,
            0.9945709705352783,
            0.9945346713066101,
            0.9958628416061401,
            0.9951087832450867,
            0.9937883019447327,
            0.9949339628219604,
            0.9957466125488281,
            0.9951342344284058,
            0.9960313439369202,
            0.9961164593696594,
            0.996482253074646,
            0.9936501383781433,
            0.9931554198265076,
            0.9908350706100464,
            0.995254397392273,
            0.9944673180580139
        ]
    },
    "3509": {
        "similarity": 0.9957724213600159,
        "body": "    a, b = map(int, input().split())\n    n, m = map(int, input().split())\n    roads = []\n    for _ in range(m):\n        u, v, t = map(int, input().split())\n        roads.append((u, v, t))\n    roads.sort(key=lambda x: x[2])\n    max_time = 0\n    for i, (u, v, t) in enumerate(roads):\n        if u == 1:\n            max_time += t\n        elif u != n and v == n:\n            break\n    return max_time",
        "result": "failed: testcase 0",
        "similarities": [
            0.9936031699180603,
            0.9948630928993225,
            0.9941586852073669,
            0.9904905557632446,
            0.9938300251960754,
            0.9955448508262634,
            0.9901036024093628,
            0.9886233806610107,
            0.9933006167411804,
            0.9942434430122375,
            0.9942556619644165,
            0.9945729970932007,
            0.9935053586959839,
            0.9957724213600159,
            0.9884551167488098,
            0.9896559715270996,
            0.9951403737068176,
            0.993025541305542,
            0.9937614798545837,
            0.9952055215835571
        ]
    },
    "3547": {
        "similarity": 0.998404860496521,
        "body": "    n = int(input())\n    area = 0\n    for _ in range(n):\n        x1, y1, x2, y2 = map(float, input().split())\n        area += (x2 - x1) * (y2 - y1)\n    print(format(area, '.2f'))",
        "result": "failed: testcase 0",
        "similarities": [
            0.99821937084198,
            0.998267412185669,
            0.9773765206336975,
            0.9964620471000671,
            0.998267412185669,
            0.9982348084449768,
            0.9983213543891907,
            0.9981127381324768,
            0.998267412185669,
            0.998267412185669,
            0.9981151223182678,
            0.998267412185669,
            0.9968998432159424,
            0.9983282685279846,
            0.998267412185669,
            0.9982220530509949,
            0.998404860496521,
            0.998253583908081,
            0.998404860496521,
            0.9983213543891907
        ]
    },
    "3017": {
        "similarity": 0.9984031319618225,
        "body": "    n, e = map(int, input().split())\n    count = 0\n    for k in range(n+1):\n        if str(k).count('2' * (1 << e)) > 0:\n            count += 1\n    print(count)",
        "result": "timed out",
        "similarities": [
            0.9980791807174683,
            0.9959150552749634,
            0.9982691407203674,
            0.9983087778091431,
            0.9890214204788208,
            0.9983267784118652,
            0.9981725811958313,
            0.993127703666687,
            0.9983287453651428,
            0.9984031319618225,
            0.9983645081520081,
            0.9981213808059692,
            0.9983267784118652,
            0.998271644115448,
            0.9983267784118652,
            0.9982669353485107,
            0.9978768229484558,
            0.9980084300041199,
            0.9983165264129639,
            0.9981102347373962
        ]
    },
    "3076": {
        "similarity": 0.9979707598686218,
        "body": "    n, k = map(int, input().split())\n    jewels = []\n    for _ in range(n):\n        s, v = map(int, input().split())\n        jewels.append((s, v))\n    dp = [[0] * (k + 1) for _ in range(k + 1)]\n    for i in range(1, k + 1):\n        for j in range(i, k + 1):\n            dp[i][j] = max(dp[i - 1][j], sum(v for s, v in jewels if s <= j))\n    print(*[dp[i][k] for i in range(k, 0, -1)], sep=' ')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9967765808105469,
            0.9972548484802246,
            0.9965723156929016,
            0.9967073202133179,
            0.9975045919418335,
            0.9976586103439331,
            0.9977428317070007,
            0.9979707598686218,
            0.997708797454834,
            0.9971438050270081,
            0.9972668886184692,
            0.9959558248519897,
            0.995120108127594,
            0.9958813190460205,
            0.9977365136146545,
            0.9957709312438965,
            0.9953624606132507,
            0.997557520866394,
            0.9965844750404358,
            0.9961132407188416
        ]
    },
    "3923": {
        "similarity": 0.9972048401832581,
        "body": "    if j == 1:\n        return i\n    else:\n        return f(i, j-1)\n\n    j = 1\n    while f(i, j) != i:\n        j += 1\n    return j\n\n    P = [i for i in range(1, N+1)]\n    for i in range(N):\n        if g(P[i]) == A:\n            P[P[i]-1], P[i] = P[i], P[P[i]-1]\n    if any(g(i) != min(A, B) for i in range(N)):\n        return -1\n    print(' '.join(map(str, P)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9945875406265259,
            0.9964134693145752,
            0.996622622013092,
            0.9956867694854736,
            0.9964666962623596,
            0.9936671853065491,
            0.9952585101127625,
            0.9963107109069824,
            0.9972048401832581,
            0.9958362579345703,
            0.9963157176971436,
            0.9968165159225464,
            0.9961722493171692,
            0.994533360004425,
            0.9968242645263672,
            0.9948440194129944,
            0.9967764019966125,
            0.9955472350120544,
            0.9965707659721375,
            0.996288001537323
        ]
    },
    "3332": {
        "similarity": 0.9955937266349792,
        "body": "    n = int(input())\n    streams = []\n    for _ in range(n):\n        s, d, p = map(int, input().split())\n        streams.append((s, d, p))\n    streams.sort(key=lambda x: (x[0], -x[2]))\n    max_prio = 0\n    stack = []\n    for s, d, p in streams:\n        while len(stack) > 0 and stack[-1][0] <= s:\n            _ , _ , prio = stack.pop()\n            max_prio += prio\n        if not stack or stack[-1][0] < s:\n            stack.append((s + d, None, p))\n    print(max_prio)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9934894442558289,
            0.9935973286628723,
            0.9848673939704895,
            0.9936845898628235,
            0.9942196607589722,
            0.9936838746070862,
            0.9911603331565857,
            0.9952676892280579,
            0.9950355887413025,
            0.99325031042099,
            0.9945836663246155,
            0.9902018308639526,
            0.9952401518821716,
            0.9945456981658936,
            0.9952535033226013,
            0.9951182007789612,
            0.9955937266349792,
            0.994577944278717,
            0.9938124418258667,
            0.9941843748092651
        ]
    },
    "3240": {
        "similarity": 0.9954063296318054,
        "body": "    k, v = map(int, input().split())\n    pvs, bvs = [], []\n    for _ in range(v - 1):\n        pi, bi = map(float, input().split())\n        pvs.append(pi)\n        bvs.append(bi)\n    pvs.sort(reverse=True)\n    bvs.sort()\n    return int(''.join('1' if i < len(pvs) and pvs[i] > (j + 1) / (v - 1) else '0' for j in range(2**k)), 2).\u017e\u00ednm(1)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9942705035209656,
            0.994669497013092,
            0.9922206401824951,
            0.9954063296318054,
            0.995155930519104,
            0.9883409142494202,
            0.9946595430374146,
            0.9914771914482117,
            0.9946441650390625,
            0.9925737977027893,
            0.9937825798988342,
            0.9946756958961487,
            0.9945314526557922,
            0.994866132736206,
            0.9922013878822327,
            0.9923455119132996,
            0.9950273633003235,
            0.9933634400367737,
            0.9944018125534058,
            0.9939313530921936
        ]
    },
    "3368": {
        "similarity": 0.9977784752845764,
        "body": "    n, m = map(int, input().split())\n    enclosures = [[] for _ in range(n)]\n    for i in range(n):\n        data = input().split()\n        animal_type = ' '.join(data[1:])\n        animal_count = int(data[0])\n        for j in range(1, animal_count+1):\n            enclosures[i].append(animal_type.split()[j-1])\n    for i in range(len(enclosures)):\n        if len(set(enclosures[i])) != 1:\n            return 'POSSIBLE'\n    return 'FALSE ALARM'",
        "result": "failed: testcase 0",
        "similarities": [
            0.9963371753692627,
            0.9974134564399719,
            0.9977754354476929,
            0.9962732195854187,
            0.9977784752845764,
            0.9972532987594604,
            0.9972929954528809,
            0.9972307085990906,
            0.9950081706047058,
            0.9963465332984924,
            0.9956071972846985,
            0.9970249533653259,
            0.9929385781288147,
            0.9965884685516357,
            0.9971892833709717,
            0.9965880513191223,
            0.9970381855964661,
            0.9973437786102295,
            0.9977222084999084,
            0.9960528016090393
        ]
    },
    "3538": {
        "similarity": 0.9948295950889587,
        "body": "    n, d = map(int, input().split())\n    frogs = []\n    for _ in range(n):\n        l, w, h = map(int, input().split())\n        frogs.append((l, w, h))\n    frogs.sort(key=lambda x: (x[0], x[1]))\n    dp = [0] * d\n    for l, w, h in frogs:\n        i = 0\n        while i < len(dp):\n            if dp[i] >= w:\n                break\n            dp[i+h] += l\n            i += l+1\n    return sum(1 for x in dp if x >= d)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9947373270988464,
            0.992836594581604,
            0.9855880737304688,
            0.9934324026107788,
            0.9941576719284058,
            0.9941518902778625,
            0.9936854839324951,
            0.9940575361251831,
            0.963374674320221,
            0.9934381246566772,
            0.991727352142334,
            0.9948295950889587,
            0.9947123527526855,
            0.9940004944801331,
            0.9924988150596619,
            0.9944984316825867,
            0.9942798614501953,
            0.9929935336112976,
            0.9921733736991882,
            0.9948204755783081
        ]
    },
    "3183": {
        "similarity": 0.9954314231872559,
        "body": "import sys\n    n, m, s, t = [int(x) for x in sys.stdin.readline().split()]\n    g = {}\n    for _ in range(m):\n        u, v, c, w = [int(x) for x in sys.stdin.readline().split()]\n        if u not in g: g[u] = []\n        if v not in g: g[v] = []\n        g[u].append((v, c, w))\n    max_flow = 0\n    while True:\n        f, p = bfs(g, s, t)\n        if f == 0: break\n        v, c, w = p[-1]\n        max_flow += f\n        while p and (p[-2][0], p[-2][1]) != (v, c):\n            u, _ = p.pop()\n            g[u].remove((v, c, w))\n            g[v].append((u, c, w))\n    return str(max_flow) + ' ' + str(sum(c * f for u, v, c, _ in g[u] if (u, v) == (s, t)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9892351031303406,
            0.994358241558075,
            0.9954314231872559,
            0.9930233359336853,
            0.995388925075531,
            0.9948691129684448,
            0.9936133027076721,
            0.9907785058021545,
            0.9926338195800781,
            0.9952372312545776,
            0.9948017001152039,
            0.99115389585495,
            0.9946513772010803,
            0.9932409524917603,
            0.9949378967285156,
            0.9929438233375549,
            0.9936090111732483,
            0.9920856952667236,
            0.9950850605964661,
            0.9947431683540344
        ]
    },
    "3916": {
        "similarity": 0.9943034648895264,
        "body": "    n = int(input())\n    k = list(map(int, input().split()))\n    p = {}\n    for i in range(n):\n        x = 1\n        for j in range(k[i]):\n            x *= j + 1\n        if x not in p:\n            p[x] = 0\n        p[x] += 1\n    m = min(p)\n    return sum(abs(m - x) for x in p)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9877743124961853,
            0.9943034648895264,
            0.9835009574890137,
            0.9927573800086975,
            0.9877574443817139,
            0.9929344058036804,
            0.9911975860595703,
            0.9851722717285156,
            0.9939069151878357,
            0.991637110710144,
            0.9940561056137085,
            0.9931276440620422,
            0.9931614398956299,
            0.9901537895202637,
            0.985243558883667,
            0.9935886859893799,
            0.9938920736312866,
            0.9911332726478577,
            0.9936357140541077,
            0.9892135262489319
        ]
    },
    "3195": {
        "similarity": 0.996435284614563,
        "body": "    T_g, T_y, T_r = map(int, input().split())\n    n = int(input())\n    states = [0] * 3\n    for _ in range(n):\n        t, c = input().split()\n        t, c = int(t), c\n        if c == 'green':\n            states[0], states[1:] = states[1:], [t % (T_g + T_y + T_r)]\n        elif c == 'yellow':\n            states[1] = t % (T_g + T_y + T_r)\n        else:\n            states[2] = t % (T_g + T_y + T_r)\n    t_q, c_q = map(str, input().split())\n    t_q, c_q = int(t_q), c_q\n    p = 0\n    for i in range(3):\n        if states[i] <= t_q % (T_g + T_y + T_r) < states[(i+1)%3]:\n            p = 1 / ((t_q // (T_g + T_y + T_r)) % 3 + 1)\n    print('%.4f' % p)",
        "result": "failed: testcase 0",
        "similarities": [
            0.995328426361084,
            0.9928141236305237,
            0.9953729510307312,
            0.9892274737358093,
            0.9951775074005127,
            0.9962030053138733,
            0.9959447979927063,
            0.9936503171920776,
            0.9959970116615295,
            0.9958673715591431,
            0.9952364563941956,
            0.9925868511199951,
            0.9955938458442688,
            0.9960277080535889,
            0.9953553080558777,
            0.9957578778266907,
            0.9941601157188416,
            0.9961678385734558,
            0.996435284614563,
            0.995957612991333
        ]
    },
    "3998": {
        "similarity": 0.9970741271972656,
        "body": "    n = int(input())\n    r = list(map(int, input().split()))\n    R = max(r)\n    t = 0\n    res = []\n    for i in range(R):\n        for j in range(i+1):\n            if len(res) < min(n, (i + 1)):\n                res.append('1' * (j + 1))\n            else:\n                res[-1] = '0' + res[-1]\n        t += R - i\n    print(R)\n    for x in res:\n        print(x)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9970032572746277,
            0.9970670342445374,
            0.9964951276779175,
            0.9959763288497925,
            0.9959085583686829,
            0.9938294291496277,
            0.9953861236572266,
            0.9969557523727417,
            0.9913954734802246,
            0.9962884783744812,
            0.9964900612831116,
            0.9970741271972656,
            0.9953988790512085,
            0.9955445528030396,
            0.9959779381752014,
            0.9956251382827759,
            0.9936680197715759,
            0.9963696002960205,
            0.9970586895942688,
            0.9959720969200134
        ]
    },
    "3150": {
        "similarity": 0.9933363199234009,
        "body": "    N = int(input())\n    points = []\n    for _ in range(N):\n        x1, y1, x2, y2 = map(int, input().split())\n        points.append((x1, y1))\n        points.append((x2, y2))\n    points.sort()\n    ways = 0\n    for i in range(len(points) - 2):\n        if (points[i][0] != points[i+1][0] or points[i][1] != points[i+1][1]) and \\\n           (points[i][0] != points[i+2][0] or points[i][1] != points[i+2][1]):\n            ways += 1\n    print(ways)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9902600646018982,
            0.9764506816864014,
            0.9903639554977417,
            0.976892352104187,
            0.9899336099624634,
            0.990147054195404,
            0.9853807091712952,
            0.9897999167442322,
            0.9901623129844666,
            0.9867706298828125,
            0.9822219014167786,
            0.9910218119621277,
            0.9866105318069458,
            0.9925574064254761,
            0.9924424886703491,
            0.9933363199234009,
            0.9921303987503052,
            0.9913864135742188,
            0.9908520579338074,
            0.9855192303657532
        ]
    },
    "3566": {
        "similarity": 0.9971281290054321,
        "body": "    n,q = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = [0]*q\n    for i,x in enumerate(map(int, (input() for _ in range(q)))):\n        ind = a.index(x)\n        if len(a) % 2:\n            d[i] = min(ind, n-ind-1)\n        else:\n            d[i] = ind\n    print(*d, sep='\\n')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9937472939491272,
            0.9956213235855103,
            0.9948925375938416,
            0.9964905977249146,
            0.9955982565879822,
            0.9932764172554016,
            0.9960130453109741,
            0.9927856922149658,
            0.9964073896408081,
            0.9971281290054321,
            0.9950044751167297,
            0.9949929118156433,
            0.9971213936805725,
            0.995660662651062,
            0.9969918131828308,
            0.9968012571334839,
            0.9966184496879578,
            0.9947131276130676,
            0.99481600522995,
            0.9969174265861511
        ]
    },
    "3401": {
        "similarity": 0.9979742765426636,
        "body": "    n, s, t, q = map(int, input().split())\n    hills = []\n    for _ in range(n):\n        x, y, h = map(int, input().split())\n        hills.append((x, y, h))\n    springs = list(map(int, input().split()))\n    towns = list(map(int, input().split()))\n    \n    max_height = max(h[2] for h in hills)\n    min_height = min(h[2] for h in hills)\n    \n    from collections import deque\n    visited = set()\n    queue = deque([(hills[i], 0) for i in range(n)])\n    while queue:\n        hill, length = queue.popleft()\n        if hill[1] < max_height - springs[-1]:\n            continue\n        if hill[2] > min_height + q:\n            return \"IMPOSSIBLE\"\n        for i in range(len(hills)):\n            if hills[i][0] == hill[0] and hills[i][1] == hill[1]:\n                new_length = length + abs(hills[i][2] - hill[2])\n                if (hills[i], new_length) not in visited:\n                    queue.append((hills[i], new_length))\n                    visited.add((hills[i], new_length))\n        for i in range(len(towns)):\n            if hills[towns[i]-1][0] == hill[0] and hills[towns[i]-1][1] == hill[1]:\n                return length + abs(hills[towns[i]-1][2] - hill[2])\n    return \"IMPOSSIBLE\"",
        "result": "failed: testcase 0",
        "similarities": [
            0.9969735741615295,
            0.9973182678222656,
            0.9973241090774536,
            0.9972764849662781,
            0.9964543581008911,
            0.996333658695221,
            0.9975814819335938,
            0.9979246258735657,
            0.9974332451820374,
            0.9976413249969482,
            0.9968775510787964,
            0.9963880777359009,
            0.997446596622467,
            0.9979742765426636,
            0.9969686269760132,
            0.9950109124183655,
            0.9970512390136719,
            0.9974046349525452,
            0.997761070728302,
            0.9976304769515991
        ]
    },
    "3660": {
        "similarity": 0.996784508228302,
        "body": "    message = input().upper()\n    n = int(input())\n    stickers = []\n    for _ in range(n):\n        word, price = input().split()\n        stickers.append((word.upper(), int(price)))\n    cost = float('inf')\n    for i in range(len(message)):\n        for j in (1, 2): \n            if i + j > len(message): break\n            for k in range(i, i+j):\n                if all(message[k:m].endswith(Sticker[0]) and message[m:].startswith(Sticker[0]) for Sticker in stickers):\n                    cost = min(cost, sum(Price for _, Price in [Sticker for Sticker in stickers if Sticker[0] in message[i:i+j]]))\n    print('IMPOSSIBLE' if cost == float('inf') else str(cost))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9967177510261536,
            0.9958259463310242,
            0.9962169528007507,
            0.9950960874557495,
            0.9942601919174194,
            0.9940919280052185,
            0.9957451224327087,
            0.9921587705612183,
            0.9965654611587524,
            0.9949089884757996,
            0.9949867129325867,
            0.9952887296676636,
            0.996002733707428,
            0.996784508228302,
            0.9960925579071045,
            0.9961276054382324,
            0.9942436218261719,
            0.99602872133255,
            0.9954151511192322,
            0.9965710043907166
        ]
    },
    "3721": {
        "similarity": 0.9930503368377686,
        "body": "    n, m, q = map(int, input().split())\n    r_c = {}\n    for _ in range(q):\n        r, c = map(int, input().split())\n        r_c[(r-1, c-1)] = 0\n    need_buy = set()\n    for i in range(n):\n        for j in range(m):\n            if (i, j) not in r_c:\n                need_buy.add((i, j))\n    print(len(need_buy))",
        "result": "timed out",
        "similarities": [
            0.98971027135849,
            0.9914819598197937,
            0.9873554110527039,
            0.9909177422523499,
            0.990188479423523,
            0.9930503368377686,
            0.990029513835907,
            0.9813787341117859,
            0.9926562905311584,
            0.9903485178947449,
            0.9886327385902405,
            0.9831637144088745,
            0.9898197650909424,
            0.9892985820770264,
            0.9880262613296509,
            0.9903960227966309,
            0.9820241332054138,
            0.978509783744812,
            0.991351306438446,
            0.9903638958930969
        ]
    },
    "3811": {
        "similarity": 0.9965063333511353,
        "body": "    n = int(input())\n    wcd = -1\n    for _ in range(n):\n        a, b = map(int, input().split())\n        common_divisor = max(gcd(a, b), 2)\n        if wcd == -1 or wcd > common_divisor:\n            wcd = common_divisor\n    print(wcd)\n\n    while b:\n        a, b = b, a % b\n    return abs(a)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9957950115203857,
            0.9940052032470703,
            0.995483934879303,
            0.9959397912025452,
            0.9949682950973511,
            0.9963478446006775,
            0.991302490234375,
            0.9932848215103149,
            0.9944437146186829,
            0.9944409728050232,
            0.9945036172866821,
            0.9953561425209045,
            0.9960302114486694,
            0.9965063333511353,
            0.9956424236297607,
            0.9862044453620911,
            0.9904164671897888,
            0.9941354990005493,
            0.9953651428222656,
            0.9960178732872009
        ]
    },
    "3528": {
        "similarity": 0.9951722025871277,
        "body": "    N = int(input())\n    nails = [list(map(int, input().split())) for _ in range(N)]\n    picked = list(input() or '')\n    area = 0\n    for i in range(len(picked)-2):\n        x1, y1 = min(x for x, y in nails), min(y for x, y in nails)\n        x2, y2 = max(x for x, y in nails), max(y for x, y in nails)\n        if picked[i] == 'L':\n            x1 += 1\n        elif picked[i] == 'R':\n            x2 -= 1\n        elif picked[i] == 'U':\n            y2 -= 1\n        else:\n            y1 += 1\n        area += (x2-x1) * (y2-y1)\n    print(f'{area:.1f}')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9948201775550842,
            0.9947986602783203,
            0.9944463968276978,
            0.9938609600067139,
            0.9861320853233337,
            0.982987642288208,
            0.994258463382721,
            0.9928544759750366,
            0.9939814209938049,
            0.9930638670921326,
            0.9950370788574219,
            0.9939144849777222,
            0.9898650646209717,
            0.9925500750541687,
            0.9931098818778992,
            0.9935445189476013,
            0.9920626282691956,
            0.9950916767120361,
            0.9951722025871277,
            0.9921129941940308
        ]
    },
    "3890": {
        "similarity": 0.9967648386955261,
        "body": "    n, k = map(int, input().split())\n    MOD = 1000000007\n    ans = 1\n    for i in range(k-1):\n        if i % 2:\n            ans *= (n - i // 2 - 1)\n        else:\n            ans *= (i // 2 + 1)\n    return str(ans % MOD)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9934929609298706,
            0.9967648386955261,
            0.9965892434120178,
            0.9885727763175964,
            0.996421217918396,
            0.996622622013092,
            0.9952197670936584,
            0.9961451292037964,
            0.9953974485397339,
            0.9961171746253967,
            0.9957043528556824,
            0.9961409568786621,
            0.994360089302063,
            0.9952266216278076,
            0.9965123534202576,
            0.9956588745117188,
            0.9954430460929871,
            0.9943833947181702,
            0.9963660836219788,
            0.9956896901130676
        ]
    },
    "3534": {
        "similarity": 0.996475338935852,
        "body": "    N = int(input())\n    a = list(map(int, input().split()))\n    K = 0\n    prev = None\n    correct = 0\n    for i in range(N):\n        if prev is None:\n            prev = a[i]\n            continue\n        diff = (a[i] - prev) // abs(a[i] - prev)\n        if diff == 1 and K < 2**29:\n            K += 1\n        correct += diff > 0 or prev == a[i]\n        prev = a[i]\n    print(correct)\n    print(K)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9942735433578491,
            0.9964566826820374,
            0.9940703511238098,
            0.9961336851119995,
            0.9933983683586121,
            0.9964595437049866,
            0.996475338935852,
            0.9954890012741089,
            0.9960859417915344,
            0.9958644509315491,
            0.9958056211471558,
            0.9955918192863464,
            0.9957733154296875,
            0.9929729104042053,
            0.9961624145507812,
            0.9944735169410706,
            0.9951299428939819,
            0.9955557584762573,
            0.9957671165466309,
            0.9915040731430054
        ]
    },
    "3371": {
        "similarity": 0.9964316487312317,
        "body": "    n, c = map(int, input().split())\n    m = {}\n    for _ in range(c):\n        a, b, y = map(int, input().split())\n        if y not in m:\n            m[y] = set()\n        m[y].add(a)\n        m[y].add(b)\n    for y in sorted(m.keys()):\n        s1 = sum(1 for x in m[y] if all(i < y for i, j in enumerate([a,b]) if [a,b].index(j) == 0))\n        if s1 <= n * 2 // 3:\n            print(y)\n            return\n    print(\"Impossible\")",
        "result": "failed: testcase 1",
        "similarities": [
            0.992600679397583,
            0.9960214495658875,
            0.9859432578086853,
            0.9942233562469482,
            0.9957662224769592,
            0.9959917664527893,
            0.9964316487312317,
            0.9947270750999451,
            0.9940041303634644,
            0.9954129457473755,
            0.9956754446029663,
            0.9927111268043518,
            0.9950959086418152,
            0.9962863922119141,
            0.9961012005805969,
            0.9955447316169739,
            0.9936973452568054,
            0.9957275390625,
            0.9956510663032532,
            0.9956117868423462
        ]
    },
    "3621": {
        "similarity": 0.9955621361732483,
        "body": "    n = int(input())\n    c = [list(map(int, input().split())) for _ in range(n)]\n    res = 0\n    for i in range(2**n):\n        bit = i\n        s = []\n        while bit:\n            if bit & 1:\n                s.append(i.bit_length() - 1)\n            bit >>= 1\n        for j in s:\n            for k in s:\n                if j != k and c[j][k] == 0:\n                    break\n            else:\n                continue\n                break\n            res += 300 ** (len(s) - 2)\n    return str(res % (10**9 + 7))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9900117516517639,
            0.9944783449172974,
            0.9955621361732483,
            0.9945606589317322,
            0.9954496622085571,
            0.9911555051803589,
            0.9940249919891357,
            0.9944393634796143,
            0.995482325553894,
            0.9896712303161621,
            0.9935983419418335,
            0.9952222108840942,
            0.9934698343276978,
            0.9952372312545776,
            0.9951758980751038,
            0.9955412149429321,
            0.9952577352523804,
            0.9932507872581482,
            0.9936118125915527,
            0.992742657661438
        ]
    },
    "3392": {
        "similarity": 0.9966119527816772,
        "body": "    N = int(input())\n    h = [[int(x) for x in input().split()] for _ in range(N)]\n    v = [[int(x) for x in input().split()] for _ in range(N)]\n    max_height = 0\n    visited = [[False]*N for _ in range(N)]\n    for i in range(N):\n        for j in range(N):\n            if not visited[i][j]:\n                height = h[i][j]\n                queue = [(i, j)]\n                visited[i][j] = True\n                while queue:\n                    x, y = queue.pop(0)\n                    max_height = max(max_height, height)\n                    for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                        nx, ny = x + dx, y + dy\n                        if 0 <= nx < N and 0 <= ny < N and not visited[nx][ny] and h[nx][ny] == height:\n                            queue.append((nx, ny))\n                            visited[nx][ny] = True\n    print(max_height)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9951796531677246,
            0.9963334798812866,
            0.9966115355491638,
            0.9941850900650024,
            0.9949450492858887,
            0.9961857199668884,
            0.9957755208015442,
            0.9921845197677612,
            0.9966119527816772,
            0.9955050945281982,
            0.9965493083000183,
            0.9951485991477966,
            0.9964165091514587,
            0.9825007915496826,
            0.9960535764694214,
            0.9960880279541016,
            0.9958065748214722,
            0.9960544109344482,
            0.9935441613197327,
            0.9958632588386536
        ]
    },
    "3095": {
        "similarity": 0.9976241588592529,
        "body": "    R, S = map(int, input().split())\n    A = [list(map(int, input().split())) for _ in range(R)]\n    max_elements = 0\n    for r1 in range(2, R):\n        for c1 in range(2, S):\n            for r2 in range(r1):\n                for c2 in range(c1):\n                    if A[r1][c1] + A[r2][c2] <= A[r1][c2] + A[r2][c1]:\n                        max_elements = max(max_elements, (r1 - r2 + 1) * (c1 - c2 + 1))\n    print(max_elements or 0)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9965085387229919,
            0.9959160685539246,
            0.9970992207527161,
            0.9973564147949219,
            0.9970271587371826,
            0.9964804649353027,
            0.9922909140586853,
            0.9974389672279358,
            0.9962496757507324,
            0.9943882822990417,
            0.9971075654029846,
            0.9965181946754456,
            0.9976241588592529,
            0.9969181418418884,
            0.9960837960243225,
            0.9966367483139038,
            0.997228741645813,
            0.9955783486366272,
            0.9959326386451721,
            0.9962176084518433
        ]
    },
    "3769": {
        "similarity": 0.9962154030799866,
        "body": "    p, k = map(int, input().split())\n    MOD = 10**9 + 7\n    dp = [1] * p\n    for i in range(1, p):\n        dp[i] = (dp[i-1] + k) % MOD\n    return pow(k, p, MOD) * sum(dp) % MOD",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960110187530518,
            0.9961537718772888,
            0.9835009574890137,
            0.9918186068534851,
            0.994948148727417,
            0.9947349429130554,
            0.9952446818351746,
            0.9932297468185425,
            0.9961723685264587,
            0.9959022402763367,
            0.9957922101020813,
            0.9890462160110474,
            0.9962154030799866,
            0.9940215945243835,
            0.9955918192863464,
            0.9952650666236877,
            0.995859682559967,
            0.994726300239563,
            0.9961481690406799,
            0.9959443807601929
        ]
    },
    "3563": {
        "similarity": 0.9942203164100647,
        "body": "    n = int(input())\n    holes = [list(map(int, input().split())) for _ in range(n)]\n    hull = []\n    for i in range(2*n):\n        while len(hull) > 1 and cross(holes[hull[-2]], holes[i], holes[hull[-1]]) <= 0:\n            hull.pop()\n        hull.append(i)\n    lower = hull[0]\n    upper = hull[1]\n    lines = []\n    for i in range(len(hull)):\n        j = (i + 1) % len(hull)\n        if cross(holes[lower], holes[hull[j]], holes[upper]) > 0:\n            upper = hull[j]\n        else:\n            lower = hull[j]\n        while len(lines) and cross(holes[lines[-1][0]], holes[lower], holes[upper]) >= 0:\n            lines.pop()\n        lines.append((lower, upper))\n    return len(lines)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9935606122016907,
            0.9862241148948669,
            0.9942203164100647,
            0.9867027997970581,
            0.9907999634742737,
            0.9935883283615112,
            0.990814208984375,
            0.9903585314750671,
            0.9864751696586609,
            0.9939934611320496,
            0.9873931407928467,
            0.9893973469734192,
            0.993523359298706,
            0.9940069913864136,
            0.9914427399635315,
            0.9887438416481018,
            0.9896928071975708,
            0.9936912059783936,
            0.9915478229522705,
            0.9941960573196411
        ]
    },
    "3618": {
        "similarity": 0.9972882866859436,
        "body": "    n = int(input())\n    MOD = 998244353\n    dp = [0] * (n + 1)\n    dp[0] = 2\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            dp[i] = dp[i // 2]\n        else:\n            dp[i] = (dp[(i - 1) // 2] * 2) % MOD\n    print(dp[n])",
        "result": "failed: testcase 0",
        "similarities": [
            0.9964532256126404,
            0.990799069404602,
            0.9935709238052368,
            0.996942400932312,
            0.9972882866859436,
            0.9967442750930786,
            0.9915978312492371,
            0.9947152733802795,
            0.9949832558631897,
            0.9964259266853333,
            0.9969715476036072,
            0.9969464540481567,
            0.9962078928947449,
            0.9966046214103699,
            0.9962567090988159,
            0.993807852268219,
            0.9961585998535156,
            0.9972610473632812,
            0.9970117211341858,
            0.9925420880317688
        ]
    },
    "3830": {
        "similarity": 0.9974504113197327,
        "body": "    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = list(input())\n        r = 0\n        for i in range(n):\n            if s[i] == '-':\n                r += 1\n            elif (s[i] == '>' and i % 2 == 1) or (s[i] == '<' and i % 2 == 0):\n                r += 1\n        print(r)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9969388246536255,
            0.996796190738678,
            0.9952234029769897,
            0.9965043663978577,
            0.9964216351509094,
            0.994892954826355,
            0.9867925047874451,
            0.9970104098320007,
            0.9958660006523132,
            0.9963587522506714,
            0.9958237409591675,
            0.9966278076171875,
            0.9968324303627014,
            0.9957278370857239,
            0.9972440004348755,
            0.9968096017837524,
            0.9961013793945312,
            0.9968357086181641,
            0.9974504113197327,
            0.9968839287757874
        ]
    },
    "3912": {
        "similarity": 0.99627286195755,
        "body": "    n = int(input())\n    s = input()\n    p, l = 1, [0] * n\n    for i in range(n):\n        if s[i] != s[n - 1 - i]:\n            p += 1\n        l[i] = p\n    k = max(l)\n    r = []\n    for i in range(k):\n        t = ''.join([s[j] for j in range(i * n // k, (i + 1) * n // k)])\n        t = t + ''.join([s[n - 1 - j] for j in range((i * n // k) % k, (n - 1) % k)])\n        r.append(t)\n    print(k)\n    print(' '.join(r))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9950014352798462,
            0.9952813386917114,
            0.9952524304389954,
            0.9938782453536987,
            0.9962001442909241,
            0.9943230152130127,
            0.9958550333976746,
            0.9960857033729553,
            0.9959813356399536,
            0.995181143283844,
            0.9953956604003906,
            0.9954087138175964,
            0.9906216859817505,
            0.99627286195755,
            0.9947329163551331,
            0.995985746383667,
            0.9961907267570496,
            0.9955966472625732,
            0.9849566221237183,
            0.9950157999992371
        ]
    },
    "3878": {
        "similarity": 0.9971846342086792,
        "body": "    n, m = map(int, input().split())\n    friends = {}\n    for _ in range(m):\n        u, v = map(int, input().split())\n        if u not in friends:\n            friends[u] = set()\n        if v not in friends:\n            friends[v] = set()\n        friends[u].add(v)\n        friends[v].add(u)\n\n    steps = 0\n    selected = []\n    while True:\n        friends_to_introduce = set(friends.keys())\n        for u in friends:\n            friends_to_introduce -= (friends[u] | {u})\n        if not friends_to_introduce:\n            break\n        friend = min(friends_to_introduce, key=lambda x: len(friends[x]))\n        steps += 1\n        selected.append(friend)\n        for v in friends[friend]:\n            friends[v].add(friend)\n            friends[friend].add(v)\n\n    print(steps)\n    print(' '.join(map(str, selected)))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9967987537384033,
            0.9964486360549927,
            0.9969479441642761,
            0.9920439720153809,
            0.9952860474586487,
            0.9967191815376282,
            0.9970054626464844,
            0.9962623119354248,
            0.9930537343025208,
            0.9959361553192139,
            0.99554443359375,
            0.9965107440948486,
            0.9967269897460938,
            0.9952501058578491,
            0.9971846342086792,
            0.9959807395935059,
            0.9947998523712158,
            0.9960787892341614,
            0.9960609078407288,
            0.9952514171600342
        ]
    },
    "3010": {
        "similarity": 0.9967876076698303,
        "body": "    n = int(input())\n    points = set()\n    for _ in range(n):\n        x0, y0, x1, y1 = map(int, input().split())\n        if x0 == x1:\n            points.add((x0, min(y0, y1)))\n        elif y0 == y1:\n            points.add((min(x0, x1), y0))\n        else:\n            m = ((y1 - y0) * (y1 - y0) + (x1 - x0) * (x1 - x0)) ** 0.5\n            c = (x1 * (y1 - y0) - y1 * (x1 - x0)) / m\n            points.add((c, m))\n    if len(points) > 100000:\n        return -1\n    return len(set(map(lambda p: (p[0], -p[1]), sorted([(-x, y) for x, y in points]))))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9961637258529663,
            0.9949449300765991,
            0.9936640858650208,
            0.9959895610809326,
            0.9938839673995972,
            0.995695948600769,
            0.9943172335624695,
            0.9942333698272705,
            0.9943197965621948,
            0.9955796003341675,
            0.9967876076698303,
            0.9955265522003174,
            0.9925669431686401,
            0.995586097240448,
            0.9948278069496155,
            0.9943614602088928,
            0.9955855011940002,
            0.9893889427185059,
            0.9962455630302429,
            0.9944676756858826
        ]
    },
    "3068": {
        "similarity": 0.9950703978538513,
        "body": "    n = int(input())\n    black_vienna_circle = set()\n    for _ in range(n):\n        a, p, r = input().split()\n        a, p = ord(a) - 65, int(p)\n        r = [int(x) == 1 for x in input().split()][r-1]\n        if p == 1:\n            black_vienna_circle.update([chr(i+65) for i in range(26) if (i//2) not in r])\n        else:\n            black_vienna_circle.update([chr(i+65) for i in range(26) if (i//2) in r])\n    print(len({frozenset(black_vienna_circle)}))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9931276440620422,
            0.9907987713813782,
            0.9950703978538513,
            0.9866573810577393,
            0.9944536089897156,
            0.9918628334999084,
            0.9947406649589539,
            0.9949798583984375,
            0.993164598941803,
            0.9943690896034241,
            0.9892425537109375,
            0.98885577917099,
            0.9933492541313171,
            0.9946049451828003,
            0.9898207783699036,
            0.9890978932380676,
            0.9934975504875183,
            0.9914849996566772,
            0.9932895302772522,
            0.9949578046798706
        ]
    },
    "3030": {
        "similarity": 0.9951372742652893,
        "body": "    n = int(input())\n    v = [0] * (n + 1)\n    p = [0] * (n + 1)\n    for i in range(1, n + 1):\n        v[i], p[i] = map(int, input().split())\n    ans = 1\n    for i in range(2, n + 1):\n        if v[p[i]] < v[i]:\n            ans += 1\n    print(ans)",
        "result": "failed: testcase 1",
        "similarities": [
            0.9934941530227661,
            0.9950342774391174,
            0.9939913749694824,
            0.9910860657691956,
            0.9944692850112915,
            0.9907200336456299,
            0.9885343313217163,
            0.9924543499946594,
            0.9891394376754761,
            0.9922962188720703,
            0.9930098652839661,
            0.9945062398910522,
            0.9941312074661255,
            0.9852244853973389,
            0.9939947724342346,
            0.9944204092025757,
            0.9949150085449219,
            0.9931080341339111,
            0.9951372742652893,
            0.9904335737228394
        ]
    },
    "3630": {
        "similarity": 0.9943121075630188,
        "body": "    s1, s2 = input().split()\n    n = len(s1)\n    ans = float('inf')\n    for i in range(n):\n        diff = 0\n        for j in range(n):\n            if ord(s1[j]) - ord(s2[j]) > 0:\n                diff += ord(s2[j]) - ord(s1[j]) + 1\n            elif ord(s2[j]) - ord(s1[j]) < 0 and 'a' <= s1[j] < 'z':\n                diff -= ord(s1[j]) - ord('a') + 1\n        ans = min(ans, diff)\n    print(ans)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9927610158920288,
            0.9918705821037292,
            0.9848049879074097,
            0.9906176328659058,
            0.9940798878669739,
            0.9925891757011414,
            0.9938518404960632,
            0.9943121075630188,
            0.9942776560783386,
            0.9932602643966675,
            0.9913678765296936,
            0.9925426840782166,
            0.9886767864227295,
            0.9774350523948669,
            0.9915695190429688,
            0.9879330992698669,
            0.9932849407196045,
            0.9934442639350891,
            0.9922618865966797,
            0.9853832721710205
        ]
    },
    "3133": {
        "similarity": 0.9949536919593811,
        "body": "    n, A, B = map(int, input().split())\n    t = [list(map(int, input().split())) for _ in range(n)]\n    res = float('inf')\n    a = set()\n    b = set()\n    for i in range(A, n):\n        if t[i][2]:\n            a.add(i)\n        if i < B:\n            a.update({j for j in (A, B) if t[A][0] == t[B][1] and j != i})\n        else:\n            b = {j for j in (A, B) if t[j][1] == t[i][0]}\n        res = min(res, len(a.union(b)))\n    return 'indistinguishable' if res == float('inf') else str(res)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9931640625,
            0.9935804009437561,
            0.9938340783119202,
            0.9936423897743225,
            0.9949536919593811,
            0.9919530749320984,
            0.9948646426200867,
            0.9861884713172913,
            0.9828706383705139,
            0.9936949014663696,
            0.9930785298347473,
            0.9931433796882629,
            0.9945615530014038,
            0.9914667010307312,
            0.9915988445281982,
            0.9926540851593018,
            0.9920927286148071,
            0.9915738701820374,
            0.9945696592330933,
            0.9946581125259399
        ]
    },
    "3480": {
        "similarity": 0.9963531494140625,
        "body": "    L, D = map(int, input().split())\n    for _ in range(L):\n        line, times = input().strip().split('\\n'), list(map(int, input().split()))\n        first_voice_line = line.replace(' ', '_')\n        second_voice_lines = []\n        last_first_voice_syllable_time = 0\n        for i, (syllable, time) in enumerate(zip(line.split(), times)):\n            if i > 0:\n                delay = time - last_first_voice_syllable_time\n                if delay >= D:\n                    break\n                second_voice_lines.append('_' * delay + syllable)\n                last_first_voice_syllable_time = time\n        else:\n            second_voice_lines.append('/')\n        print(first_voice_line)\n        print(''.join(second_voice_lines))",
        "result": "failed: testcase 0",
        "similarities": [
            0.9960227012634277,
            0.9947791695594788,
            0.9963531494140625,
            0.9957957863807678,
            0.9946878552436829,
            0.9941102862358093,
            0.9951120018959045,
            0.9912906289100647,
            0.9926661252975464,
            0.9956948161125183,
            0.9885013103485107,
            0.993129312992096,
            0.9947623014450073,
            0.9926864504814148,
            0.9943260550498962,
            0.9944321513175964,
            0.9937922954559326,
            0.9957429766654968,
            0.9958061575889587,
            0.9962069988250732
        ]
    },
    "3389": {
        "similarity": 0.9958030581474304,
        "body": "    n, k = map(int, input().split())\n    types = list(input())\n    clicks = 0\n    i = 0\n    while i < len(types):\n        j = i + 1\n        while j < len(types) and types[j] == types[i]:\n            j += 1\n        i = j\n        clicks += 1\n    print(clicks)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9947656393051147,
            0.995198130607605,
            0.994365394115448,
            0.9932395815849304,
            0.9828860759735107,
            0.9895356893539429,
            0.9936049580574036,
            0.9943360686302185,
            0.9941895008087158,
            0.9949213266372681,
            0.9927669167518616,
            0.9920297265052795,
            0.9924869537353516,
            0.9958030581474304,
            0.99481600522995,
            0.9923363924026489,
            0.994602620601654,
            0.9954157471656799,
            0.9940050840377808,
            0.9930259585380554
        ]
    },
    "3925": {
        "similarity": 0.9956038594245911,
        "body": "    s = input()\n    n = len(s)\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        if s[i - 1] == 'b':\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = max(dp[i - 1], dp[i - 2] + 1)\n    print(max(dp))",
        "result": "failed: testcase 1",
        "similarities": [
            0.9943249225616455,
            0.9951619505882263,
            0.9948997497558594,
            0.9941532611846924,
            0.9956038594245911,
            0.9945471882820129,
            0.9949306845664978,
            0.9949742555618286,
            0.9919884204864502,
            0.9939395785331726,
            0.9899388551712036,
            0.994476318359375,
            0.9932497143745422,
            0.9946507811546326,
            0.9906066060066223,
            0.9925956726074219,
            0.9953480958938599,
            0.9946162700653076,
            0.9931102395057678,
            0.9917064309120178
        ]
    },
    "3700": {
        "similarity": 0.9955145120620728,
        "body": "    n, k = map(int, input().split())\n    ways = 0\n    for i in range(1, min(n//2+1, k)):\n        if k - i >= i:\n            ways += 1\n    print(ways)",
        "result": "timed out",
        "similarities": [
            0.9915617108345032,
            0.993058443069458,
            0.9914978742599487,
            0.9950209259986877,
            0.9955145120620728,
            0.994669497013092,
            0.9953523874282837,
            0.9923101663589478,
            0.9932519197463989,
            0.9945012331008911,
            0.9892369508743286,
            0.9933601021766663,
            0.9915775656700134,
            0.9952085614204407,
            0.9908877015113831,
            0.9923356771469116,
            0.9924042224884033,
            0.9946240782737732,
            0.9915547966957092,
            0.9921122193336487
        ]
    },
    "3944": {
        "similarity": 0.9903215169906616,
        "body": "    N,M,K = map(int,input().split())\n    MOD = 10**9 + 7\n    dp = [0]*(N+1)\n    for i in range(N+1):\n        if i > 0:\n            dp[i] = (dp[i-1]*3 + (i==1)) % MOD\n    print((dp[N]%MOD)*((M+1)*(K+1))%MOD)",
        "result": "failed: testcase 0",
        "similarities": [
            0.988391101360321,
            0.9834581017494202,
            0.9842692017555237,
            0.979081392288208,
            0.9883177876472473,
            0.9866140484809875,
            0.9753305315971375,
            0.9876833558082581,
            0.9880917072296143,
            0.9903215169906616,
            0.9866925477981567,
            0.9855472445487976,
            0.9740534424781799,
            0.9885402321815491,
            0.979081392288208,
            0.988768458366394,
            0.9879717826843262,
            0.9895595908164978,
            0.9728635549545288,
            0.9775088429450989
        ]
    },
    "3821": {
        "similarity": 0.9943015575408936,
        "body": "import math\n\n    n = int(input())\n    probs = list(map(float, input().split()))\n    ans = 0\n    for p in probs:\n        ans += p * ((1 - p) ** (n - 1))\n    return round(ans, 9)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9899920225143433,
            0.993636965751648,
            0.9931870698928833,
            0.9938616752624512,
            0.9943015575408936,
            0.9919154644012451,
            0.9918525218963623,
            0.9901061058044434,
            0.9912269115447998,
            0.9920992851257324,
            0.9933089017868042,
            0.9936684370040894,
            0.9926571249961853,
            0.9875950217247009,
            0.9820253252983093,
            0.9899504780769348,
            0.9929322004318237,
            0.9924988150596619,
            0.9911866784095764,
            0.986892580986023
        ]
    },
    "3667": {
        "similarity": 0.9964354634284973,
        "body": "    w, p = map(int, input().split())\n    wells = []\n    for _ in range(w):\n        x, y = map(int, input().split())\n        wells.append((x, y))\n    pipes = []\n    for _ in range(p):\n        s, x, y = map(int, input().split())\n        pipes.append((s-1, (x, y)))\n    intersections = {}\n    for pipe in pipes:\n        start = pipe[0]\n        end = pipe[2]\n        if end in intersections:\n            intersections[end].append(start)\n        else:\n            intersections.setdefault(end, [start])\n    for intersection in intersections.values():\n        if len(intersection) > 2:\n            return 'impossible'\n    print('possible')",
        "result": "failed: testcase 0",
        "similarities": [
            0.9958320260047913,
            0.9945763349533081,
            0.994956374168396,
            0.9941332936286926,
            0.9957524538040161,
            0.993524432182312,
            0.9957521557807922,
            0.9955859780311584,
            0.9951298236846924,
            0.9953930377960205,
            0.9941210746765137,
            0.9954939484596252,
            0.9953314065933228,
            0.9942612051963806,
            0.9874456524848938,
            0.9954105019569397,
            0.9958771467208862,
            0.9952652454376221,
            0.9936272501945496,
            0.9964354634284973
        ]
    },
    "3959": {
        "similarity": 0.9965816140174866,
        "body": "    n, m = map(int, input().split())\n    total_pokemon = [0] * (m + 1)\n    for _ in range(n):\n        g, *pokemon_types = map(int, input().split())\n        for pokemon_type in pokemon_types:\n            total_pokemon[pokemon_type] += 1\n    total_pokemon.sort()\n    res = 1\n    for i in range(m):\n        if total_pokemon[i] != total_pokemon[i + 1]:\n            res *= math.factorial(total_pokemon[i]) * (m - i)\n            break\n    return pow(res % (10**9 + 7), -1, 10**9 + 7)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9949952960014343,
            0.9965419769287109,
            0.9956730604171753,
            0.995879054069519,
            0.99542635679245,
            0.9954996705055237,
            0.9949169158935547,
            0.9924039244651794,
            0.9941903352737427,
            0.9948624968528748,
            0.9951692819595337,
            0.9965816140174866,
            0.9906594157218933,
            0.99248868227005,
            0.9964177012443542,
            0.9964122772216797,
            0.9952069520950317,
            0.995579183101654,
            0.9912139773368835,
            0.9945278167724609
        ]
    },
    "3692": {
        "similarity": 0.9948893189430237,
        "body": "    n = int(input())\n    regions = set()\n    for _ in range(n):\n        x, y, r = map(int, input().split())\n        for i in range(-10, 11):\n            for j in range(-10, 11):\n                if (i-x)**2 + (j-y)**2 <= r**2:\n                    regions.add((min(i,x-r), min(j,y-r)) + (max(i,x+r), max(j,y+r)))\n    return len(regions)",
        "result": "failed: testcase 0",
        "similarities": [
            0.987101137638092,
            0.9942446351051331,
            0.9872059226036072,
            0.9939733743667603,
            0.9920082092285156,
            0.99188631772995,
            0.993945300579071,
            0.9847357869148254,
            0.9893883466720581,
            0.9948893189430237,
            0.9875529408454895,
            0.9944422841072083,
            0.9933305382728577,
            0.9942339658737183,
            0.9921655058860779,
            0.9924657940864563,
            0.9883547425270081,
            0.9946507811546326,
            0.9834436178207397,
            0.9947200417518616
        ]
    },
    "3894": {
        "similarity": 0.9948453307151794,
        "body": "    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    if sum(1 for i in a if i % 2) <= 1:\n        return \"Kevin\"\n    else:\n        return \"Nicky\"",
        "result": "failed: testcase 0",
        "similarities": [
            0.9923847913742065,
            0.992699384689331,
            0.9946364164352417,
            0.9912629723548889,
            0.9944632649421692,
            0.9917847514152527,
            0.9904929995536804,
            0.9890199899673462,
            0.9898762106895447,
            0.994403064250946,
            0.9899957776069641,
            0.9924964904785156,
            0.9942355751991272,
            0.9948453307151794,
            0.9869529604911804,
            0.9845139384269714,
            0.9902163147926331,
            0.990940511226654,
            0.9926257133483887,
            0.9930989146232605
        ]
    },
    "3856": {
        "similarity": 0.9931353330612183,
        "body": "    n = int(input())\n    w_h = [list(map(int, input().split())) for _ in range(n)]\n    w, h = zip(*w_h)\n    w.sort(); h.sort()\n    area = 0\n    for i in range(len(w)):\n        if i < len(w) // 2:\n            area += w[i] * max(h[:i+1])\n        else:\n            area += w[i] * max(h[i:])\n    print(area)",
        "result": "failed: testcase 0",
        "similarities": [
            0.990838885307312,
            0.9919583201408386,
            0.9878646731376648,
            0.98578280210495,
            0.9874253869056702,
            0.9897360801696777,
            0.9903696179389954,
            0.9865533709526062,
            0.9907442331314087,
            0.9916123747825623,
            0.9919943809509277,
            0.9847677946090698,
            0.9925920367240906,
            0.9929701089859009,
            0.9910005331039429,
            0.9836674928665161,
            0.9913424253463745,
            0.9931353330612183,
            0.9914534687995911,
            0.9921610951423645
        ]
    },
    "3282": {
        "similarity": 0.9969040751457214,
        "body": "    P = int(input())\n    ans = 0\n    seen = set()\n    for a in range(1, P+1):\n        for b in range(a+1, P+1):\n            if str(a) != str(b) and set(str(a)) & set(str(b)) == set():\n                t = a + b\n                if (a, b, t) not in seen:\n                    ans += 1\n                    seen.add((a, b, t))\n    print(ans)\n    for i in range(min(5000, ans)):\n        print(f\"{list(seen)[i][0]} {list(seen)[i][1]}\")",
        "result": "timed out",
        "similarities": [
            0.9969040751457214,
            0.9961481690406799,
            0.9959423542022705,
            0.9963834881782532,
            0.9948053956031799,
            0.9964246153831482,
            0.9963758587837219,
            0.9916759133338928,
            0.9948158264160156,
            0.9960564970970154,
            0.989420473575592,
            0.9962803721427917,
            0.9961241483688354,
            0.9966060519218445,
            0.9963452219963074,
            0.9940460920333862,
            0.9959630370140076,
            0.9936485290527344,
            0.996783435344696,
            0.9892356395721436
        ]
    },
    "3596": {
        "similarity": 0.9962363243103027,
        "body": "    a, b, c = map(float, input().split())\n    t1, t2, t3, t4 = map(int, input().split())\n    n, k, r, s, l = map(int, input().split())\n    from scipy import special as sp\n    from scipy import integrate as ig\n        return sp.gamma(z)\n        return 2*sp.erf(x)/sp.sqrt(np.pi)\n        return 1/sp.pi * sp.quad(lambda tau: np.cos(k*tau-x*np.sin(tau)), [0, np.pi])[0]\n        return c*ig.quad(lambda t: t1*sp.gamma(x) + (t2*sp.log(erf(t3*x)))**(1/float(t2)) - J_k(x)**(t4), [a, b])[0]\n        rpol = 0\n        for i in range(r+1):\n            rpol += f_(0)/np.math.factorial(i)*x**i\n        return rpol\n        return sum([P(int(i)) * x**i for i in range(r+s+1)])\n    g = np.polyder(Ps)(s)\n    print(((g(s) + l)**2 / (np.pi * np.e) + 1/(l+1)))\n\n\n\nNote: The scipy library is required for this solution.",
        "result": "failed: testcase 0",
        "similarities": [
            0.9956295490264893,
            0.993310809135437,
            0.9951393008232117,
            0.9952869415283203,
            0.9923791289329529,
            0.9945369362831116,
            0.995807945728302,
            0.9949344992637634,
            0.9954689741134644,
            0.9952661395072937,
            0.9954345226287842,
            0.9945030212402344,
            0.9952382445335388,
            0.9958425760269165,
            0.9962363243103027,
            0.9922954440116882,
            0.9953721761703491,
            0.9952207803726196,
            0.9933660626411438,
            0.9952268004417419
        ]
    },
    "3540": {
        "similarity": 0.9934567809104919,
        "body": "    s = [list(input()) for _ in range(4)]\n    moves = 0\n    for i in range(4):\n        if 'R' not in s[i]:\n            moves += 1\n        elif 'G' not in s[i]:\n            moves += 2\n        elif 'B' not in s[i]:\n            moves += 3\n        else:\n            moves += 4\n    for i in range(4):\n        if any(c != 'Y' for c in s[i]):\n            if 'R' in [c for c in s[j] if c == 'R'] and 'G' in [c for c in s[k] if c == 'G']:\n                moves += 1\n            elif 'B' in [c for c in s[m] if c == 'B']:\n                moves += 2\n    print(moves)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9905992746353149,
            0.9911519289016724,
            0.9915486574172974,
            0.9899355173110962,
            0.9906976819038391,
            0.993194580078125,
            0.9933200478553772,
            0.9893589019775391,
            0.990748941898346,
            0.9934567809104919,
            0.9912055134773254,
            0.9791746735572815,
            0.9917137622833252,
            0.9920486807823181,
            0.9934335350990295,
            0.9901771545410156,
            0.9908403158187866,
            0.9923296570777893,
            0.982147753238678,
            0.9917483925819397
        ]
    },
    "3354": {
        "similarity": 0.9953930377960205,
        "body": "    s, r, n, z = map(float, input().split())\n    p_area = (r**2)*math.pi\n    max_pickles = 0\n    for i in range(1, n+1):\n        if ((i*p_area) / (s**2)) * 100 > z:\n            break\n        max_pickles = i\n    print(max Pickles)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9924716949462891,
            0.9930548667907715,
            0.9896028637886047,
            0.9919176697731018,
            0.9902399778366089,
            0.9935401082038879,
            0.9907373189926147,
            0.993021547794342,
            0.9953930377960205,
            0.9929990172386169,
            0.9948457479476929,
            0.9921985268592834,
            0.9948451519012451,
            0.9874566793441772,
            0.9931499361991882,
            0.9944010376930237,
            0.992929995059967,
            0.9935483336448669,
            0.9920398592948914,
            0.9941068291664124
        ]
    },
    "3217": {
        "similarity": 0.9944279193878174,
        "body": "    n = int(input())\n    panels = set()\n    for _ in range(n):\n        x, y, z = map(int, input().split())\n        for i in range(x-1, 10):\n            for j in range(y-1, 10):\n                for k in range(z-1, 10):\n                    panels.add(((i+2) if i+x >= 10 else (i if i==x-1 else i+1)),\n                                ((j+2) if j+y >= 10 else (j if j==y-1 else j+1)),\n                                ((k+2) if k+z >= 10 else (k if k==z-1 else k+1)))\n    return len(panels)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9918093681335449,
            0.9944279193878174,
            0.9936248660087585,
            0.9906236529350281,
            0.9894871115684509,
            0.9931527972221375,
            0.9909148216247559,
            0.992936372756958,
            0.9933072924613953,
            0.9921696186065674,
            0.9911304116249084,
            0.9861258268356323,
            0.9944193959236145,
            0.9889543652534485,
            0.9877192974090576,
            0.9896680116653442,
            0.9930271506309509,
            0.9914532899856567,
            0.9907700419425964,
            0.9921308755874634
        ]
    },
    "3520": {
        "similarity": 0.9967965483665466,
        "body": "    n, p, c = map(int, input().split())\n    pills = []\n    for _ in range(p):\n        t, x, y = map(int, input().split())\n        pills.append((t, x, y))\n    pills.sort()\n    max_age = 0\n    i = 0\n    age = 0\n    while age < n:\n        if i >= len(pills) or pills[i][0] > age + c:\n            max_age = max(max_age, age)\n            break\n        t, x, y = pills[i]\n        age += (x - age) * (age < t) + y * (age >= t)\n        i += 1\n    print(age)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9909537434577942,
            0.9966054558753967,
            0.9935148358345032,
            0.9967965483665466,
            0.9964223504066467,
            0.9945153594017029,
            0.9963061809539795,
            0.9955574870109558,
            0.9966999888420105,
            0.9952936768531799,
            0.9966003894805908,
            0.9940845966339111,
            0.9964562654495239,
            0.9957536458969116,
            0.9949849843978882,
            0.9961029887199402,
            0.9948143362998962,
            0.996234118938446,
            0.9793630838394165,
            0.995875895023346
        ]
    },
    "3475": {
        "similarity": 0.9972583651542664,
        "body": "    t, n = map(int, input().split())\n    d_min = [0] * t\n    a_max = [0] * t\n    for i in range(t):\n        d_min[i], a_max[i] = map(int, input().split())\n    d, h = [], []\n    for _ in range(n-1):\n        d.append(map(int, input().split()))\n    k = 0\n    total_distance = 0\n    for i in range(n-1):\n        total_distance += d[i][0]\n        if total_distance < d_min[0]:\n            break\n        for j in range(t-1):\n            if abs(h[i] - d[j][1]) > a_max[0]:\n                k += 1\n                break\n    if total_distance >= d_min[0]:\n        print(k)\n    else:\n        print(\"IMPOSSIBLE\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.996501624584198,
            0.9961063861846924,
            0.9944082498550415,
            0.9965158104896545,
            0.9970695376396179,
            0.9972583651542664,
            0.9972299337387085,
            0.9965155720710754,
            0.9963307976722717,
            0.9965657591819763,
            0.9962068200111389,
            0.995940089225769,
            0.9969545006752014,
            0.9962165355682373,
            0.9961884021759033,
            0.9942554831504822,
            0.9960951805114746,
            0.9967442750930786,
            0.9957140684127808,
            0.9966914653778076
        ]
    },
    "3977": {
        "similarity": 0.9958692789077759,
        "body": "    n,m,k = map(int,input().split())\n    govs = list(map(int,input().split()))\n    edges = []\n    for _ in range(m):\n        u,v = map(int,input().split())\n        if min(u,v) not in govs and max(u,v) not in govs:\n            edges.append((min(u,v),max(u,v)))\n    return len(edges)-k",
        "result": "failed: testcase 0",
        "similarities": [
            0.9884093403816223,
            0.9931041598320007,
            0.9936047792434692,
            0.994279682636261,
            0.9943979978561401,
            0.9940218925476074,
            0.9954603314399719,
            0.9941369891166687,
            0.9945648908615112,
            0.9949217438697815,
            0.9947887063026428,
            0.9958692789077759,
            0.9941971302032471,
            0.9951655864715576,
            0.9946305155754089,
            0.9952942728996277,
            0.9876216053962708,
            0.9945905804634094,
            0.9944167137145996,
            0.9943976402282715
        ]
    },
    "3626": {
        "similarity": 0.9972206950187683,
        "body": "    n = int(input())\n    rectangles = []\n    for _ in range(n):\n        x1, y1, x2, y2 = map(int, input().split())\n        rectangles.append((x1, y1, x2, y2))\n    for i in range(n):\n        for j in range(i+1, n):\n            (x1, y1, x2, y2) = rectangles[i]\n            (x3, y3, x4, y4) = rectangles[j]\n            if max(0, min(x2, x4)) > max(0, min(y2, y4)):\n                return 1\n    return 0",
        "result": "failed: testcase 0",
        "similarities": [
            0.9932041168212891,
            0.9970085620880127,
            0.9972206950187683,
            0.9963550567626953,
            0.9962605834007263,
            0.9936105608940125,
            0.9966305494308472,
            0.9853216409683228,
            0.996988832950592,
            0.9958576560020447,
            0.996052622795105,
            0.9945763349533081,
            0.9965525269508362,
            0.9948157072067261,
            0.9920116066932678,
            0.9962937235832214,
            0.9953703880310059,
            0.997016191482544,
            0.9967321157455444,
            0.9941542744636536
        ]
    },
    "3584": {
        "similarity": 0.9959379434585571,
        "body": "    N, M, K = map(int, input().split())\n    onions = [(int(input()), int(input())) for _ in range(N)]\n    fence_posts = [(int(input()), int(input())) for _ in range(M)]\n    onions.sort()\n    fence_posts.sort()\n    protected = 0\n    for i in range(K):\n        min_dist = float('inf')\n        selected_post = None\n        for j, post in enumerate(fence_posts):\n            dist = sum((onion[0] - post[0])**2 + (onion[1] - post[1])**2 for onion in onions)\n            if dist < min_dist:\n                min_dist = dist\n                selected_post = j\n        protected += len(set(onion for onion in onions if ((min(x[0], fence_posts[selected_post][0]) <= x[0] <= max(x[0], fence_posts[selected_post][0])) and (min(x[1], fence_posts[selected_post][1]) <= x[1] <= max(x[1], fence_posts[selected_post][1])))))\n    print(protected)",
        "result": "failed: testcase 0",
        "similarities": [
            0.9888498187065125,
            0.9929378032684326,
            0.9956773519515991,
            0.9959379434585571,
            0.9950538277626038,
            0.9954829812049866,
            0.9958312511444092,
            0.9938341379165649,
            0.9953715801239014,
            0.9946110248565674,
            0.9930542707443237,
            0.9851122498512268,
            0.9947755932807922,
            0.9949999451637268,
            0.9947395324707031,
            0.9947863221168518,
            0.9928163290023804,
            0.9948722720146179,
            0.9953858256340027,
            0.9959054589271545
        ]
    },
    "3950": {
        "similarity": 0.997475802898407,
        "body": "    n, q = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(q):\n        l, r = map(int, input().split())\n        for j in range(l-1, r):\n            a[j] = i+1\n    s = set()\n    for i in range(n):\n        if a[i] != 0:\n            s.add(a[i])\n    if len(s) == q and all(i in s for i in range(1, q+1)):\n        print(\"YES\")\n        print(*a)\n    else:\n        print(\"NO\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.996013343334198,
            0.9972301125526428,
            0.9967147707939148,
            0.9966229200363159,
            0.9951521158218384,
            0.997475802898407,
            0.9966717958450317,
            0.9962376952171326,
            0.995593249797821,
            0.9970578551292419,
            0.9971892833709717,
            0.9968557953834534,
            0.9939679503440857,
            0.9971831440925598,
            0.9954078197479248,
            0.9970158338546753,
            0.9962289929389954,
            0.9964543581008911,
            0.996622622013092,
            0.9968366026878357
        ]
    },
    "3075": {
        "similarity": 0.9973451495170593,
        "body": "    n,g = map(int, input().split())\n    d = []\n    c = []\n    for _ in range(n):\n        a,b = map(int, input().split())\n        d.append(a)\n        c.append(b)\n    d.sort()\n    ans = float('inf')\n    gnow = 0\n    for i in range(len(d)-1,-1,-1):\n        while gnow < g and i < len(d) - 1:\n            gnow += d[i] - d[i-1]\n            ans = min(ans,c[i-1])\n            i -= 1\n        if gnow >= d[-1]:\n            print(min(c[:i+1]))\n            return\n    print(\"cancel road trip\")",
        "result": "failed: testcase 0",
        "similarities": [
            0.9971680045127869,
            0.997050940990448,
            0.9971501231193542,
            0.9967936277389526,
            0.9963041543960571,
            0.9967195391654968,
            0.9968360066413879,
            0.9964308738708496,
            0.9973451495170593,
            0.9973140358924866,
            0.996913492679596,
            0.9970255494117737,
            0.9962014555931091,
            0.9951626658439636,
            0.9950043559074402,
            0.9965816140174866,
            0.9969710111618042,
            0.9909148216247559,
            0.9961290955543518,
            0.9956173300743103
        ]
    },
    "3711": {
        "similarity": 0.9960058331489563,
        "body": "    n, m, k = map(int, input().split())\n    if k > n + m - 2:\n        return -1\n    max_area = min(n, m)\n    for _ in range(k):\n        if min(n, m) % 2 and k % 2:\n            return -1\n        n, m = (m, n) if n < m else ((n-1)//2, (m+1)//2)\n    print(min(n*m, max_area))",
        "result": "timed out",
        "similarities": [
            0.9910936951637268,
            0.9950137138366699,
            0.9941387176513672,
            0.9946849346160889,
            0.99213045835495,
            0.9918111562728882,
            0.9897233247756958,
            0.9937676191329956,
            0.9941564798355103,
            0.9960058331489563,
            0.9959194660186768,
            0.9948951601982117,
            0.994154155254364,
            0.9943128228187561,
            0.9948658347129822,
            0.9950229525566101,
            0.9948611855506897,
            0.9884424805641174,
            0.9941734671592712,
            0.9947365522384644
        ]
    }
}